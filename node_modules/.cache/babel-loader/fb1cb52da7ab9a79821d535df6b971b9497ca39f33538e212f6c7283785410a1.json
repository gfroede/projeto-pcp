{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport Papa from 'papaparse';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Tooltip, Legend } from 'chart.js';\nimport ReactPaginate from 'react-paginate';\nimport * as XLSX from 'xlsx';\nimport { format } from 'date-fns'; // Importa a função format do date-fns\nimport './App.css';\n\n// Registra os componentes necessários do Chart.js\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, Legend);\nconst Home = () => {\n  _s();\n  const [previsaoData, setPrevisaoData] = useState([]);\n  const [entregaData, setEntregaData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias');\n  const [dataInicio, setDataInicio] = useState('');\n  const [dataFim, setDataFim] = useState('');\n  const [produtoFiltro, setProdutoFiltro] = useState('');\n  const [situacaoFiltro, setSituacaoFiltro] = useState(''); // Novo estado para filtro de situação\n  const [darkMode, setDarkMode] = useState(false);\n  const [currentPage, setCurrentPage] = useState(0); // Paginação\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  }); // Ordenação\n  const navigate = useNavigate();\n\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\n  const parseDate = dateString => {\n    if (!dateString) return null;\n    const [day, month, year] = dateString.split('/').map(Number); // Converte os valores para números\n    return new Date(year, month - 1, day); // Cria a data no fuso horário local\n  };\n\n  // Função genérica para buscar dados de uma planilha\n  const fetchSheetData = async (url, setData) => {\n    try {\n      const response = await axios.get(url);\n      return new Promise((resolve, reject) => {\n        Papa.parse(response.data, {\n          header: true,\n          skipEmptyLines: true,\n          dynamicTyping: true,\n          complete: result => {\n            if (result.data && result.data.length > 0) {\n              setData(result.data);\n              resolve();\n            } else {\n              reject(new Error('Dados não encontrados na planilha.'));\n            }\n          },\n          error: error => {\n            console.error('Erro ao processar CSV:', error);\n            reject(error);\n          }\n        });\n      });\n    } catch (error) {\n      if (!axios.isCancel(error)) {\n        throw error;\n      }\n    }\n  };\n\n  // Função para calcular a semana do mês\n  const getWeekOfMonth = dateString => {\n    const date = parseDate(dateString);\n    if (!date || isNaN(date)) return 'Data inválida';\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const dayOfMonth = date.getDate();\n    const adjustedDate = dayOfMonth + firstDay.getDay() - 1;\n    return `${Math.ceil(adjustedDate / 7)}ª Semana`;\n  };\n\n  // Combinar os dados das abas Previsão e Entrega\n  const combinedData = useMemo(() => {\n    if (!previsaoData.length || !entregaData.length) return [];\n    return previsaoData.map(previsaoItem => {\n      const entregas = entregaData.filter(item => item.Codigo === previsaoItem.Codigo && item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']);\n      const quantidadeEntregue = entregas.reduce((acc, curr) => acc + (curr['Quantidade Entregue'] || 0), 0);\n      const diferenca = (quantidadeEntregue || 0) - (previsaoItem['Quantidade Prevista'] || 0);\n      return {\n        ...previsaoItem,\n        QuantidadeEntregue: quantidadeEntregue,\n        Diferenca: diferenca,\n        // Armazena a diferença (positiva ou negativa)\n        SemanaPrevisao: getWeekOfMonth(previsaoItem['Data de Previsão de Entrega'])\n      };\n    });\n  }, [previsaoData, entregaData]);\n\n  // Lista de produtos únicos para o filtro\n  const produtosUnicos = useMemo(() => {\n    const produtos = combinedData.map(item => item.Produto);\n    return [...new Set(produtos)];\n  }, [combinedData]);\n\n  // Função para aplicar os filtros\n  const dadosFiltrados = useMemo(() => {\n    if (!combinedData.length) return [];\n    let filtrados = combinedData;\n\n    // Filtro por período\n    const hoje = new Date();\n    switch (periodoFiltro) {\n      case '30_dias':\n        const trintaDiasAtras = new Date();\n        trintaDiasAtras.setDate(hoje.getDate() - 30);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= trintaDiasAtras && dataPrevisao <= hoje;\n        });\n        break;\n      case 'mes_passado':\n        const primeiroDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth() - 1, 1);\n        const ultimoDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth(), 0);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= primeiroDiaMesPassado && dataPrevisao <= ultimoDiaMesPassado;\n        });\n        break;\n      case 'mes_atual':\n        const primeiroDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth(), 1);\n        const ultimoDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= primeiroDiaMesAtual && dataPrevisao <= ultimoDiaMesAtual;\n        });\n        break;\n      case 'customizado':\n        if (dataInicio && dataFim) {\n          const inicio = parseDate(dataInicio);\n          const fim = parseDate(dataFim);\n          filtrados = filtrados.filter(item => {\n            const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n            return dataPrevisao >= inicio && dataPrevisao <= fim;\n          });\n        }\n        break;\n      default:\n        break;\n    }\n\n    // Filtro por nome do produto\n    if (produtoFiltro) {\n      filtrados = filtrados.filter(item => item.Produto === produtoFiltro);\n    }\n\n    // Filtro por situação (falta, excedente, igual)\n    if (situacaoFiltro === 'falta') {\n      filtrados = filtrados.filter(item => item.Diferenca < 0);\n    } else if (situacaoFiltro === 'excedente') {\n      filtrados = filtrados.filter(item => item.Diferenca > 0);\n    } else if (situacaoFiltro === 'igual') {\n      filtrados = filtrados.filter(item => item.Diferenca === 0);\n    }\n\n    // Ordenação\n    if (sortConfig.key) {\n      filtrados.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'asc' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'asc' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return filtrados;\n  }, [combinedData, periodoFiltro, dataInicio, dataFim, produtoFiltro, situacaoFiltro, sortConfig]);\n\n  // Função para recarregar os dados\n  const reloadData = async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      await Promise.all([fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao', setPrevisaoData), fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega', setEntregaData)]);\n    } catch (error) {\n      console.error('Erro ao carregar dados:', error);\n      setError('Erro ao carregar dados. Verifique os links ou tente novamente mais tarde.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Carregar dados ao montar o componente\n  useEffect(() => {\n    reloadData();\n  }, []);\n\n  // Navegação para a página de resumo\n  const handleNavigateToResumo = () => {\n    navigate('/resumo', {\n      state: {\n        combinedData\n      }\n    });\n  };\n\n  // Função para estilizar a célula de quantidade faltante\n  const getFaltanteStyle = value => {\n    if (value > 0) return 'faltante-green'; // Verde se há excedente\n    if (value < 0) return 'faltante-red'; // Vermelho se há falta\n    return 'faltante-blue'; // Azul se não há diferença\n  };\n\n  // Função para alternar o modo escuro\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.classList.toggle('dark-mode', !darkMode);\n  };\n\n  // Função para exportar dados para Excel\n  const exportToExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(dadosFiltrados);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Dados Filtrados');\n    XLSX.writeFile(workbook, 'dados_filtrados.xlsx');\n  };\n\n  // Função para lidar com a ordenação\n  const handleSort = key => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  // Configuração da paginação\n  const itemsPerPage = 10; // Número de itens por página\n  const pageCount = Math.ceil(dadosFiltrados.length / itemsPerPage);\n  const paginatedData = useMemo(() => {\n    const start = currentPage * itemsPerPage;\n    const end = start + itemsPerPage;\n    return dadosFiltrados.slice(start, end);\n  }, [dadosFiltrados, currentPage]);\n\n  // Função para mudar de página\n  const handlePageClick = ({\n    selected\n  }) => {\n    setCurrentPage(selected);\n  };\n\n  // Cálculo do painel de resumo\n  const totalPrevisto = dadosFiltrados.reduce((acc, curr) => acc + (curr['Quantidade Prevista'] || 0), 0);\n  const totalEntregue = dadosFiltrados.reduce((acc, curr) => acc + (curr.QuantidadeEntregue || 0), 0);\n  const totalFalta = dadosFiltrados.reduce((acc, curr) => acc + Math.max(0, (curr['Quantidade Prevista'] || 0) - (curr.QuantidadeEntregue || 0)), 0);\n  const totalExcedente = dadosFiltrados.reduce((acc, curr) => acc + Math.max(0, (curr.QuantidadeEntregue || 0) - (curr['Quantidade Prevista'] || 0)), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dados Compilados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Previsto:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), \" \", totalPrevisto]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Entregue:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), \" \", totalEntregue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Falta:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), \" \", totalFalta]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Excedente:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), \" \", totalExcedente]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDarkMode,\n        children: darkMode ? 'Modo Claro' : 'Modo Escuro'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportToExcel,\n        children: \"Exportar para Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filtros\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Per\\xEDodo:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: periodoFiltro,\n          onChange: e => setPeriodoFiltro(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"30_dias\",\n            children: \"\\xDAltimos 30 dias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mes_passado\",\n            children: \"M\\xEAs Passado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mes_atual\",\n            children: \"M\\xEAs Atual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"customizado\",\n            children: \"Intervalo Customizado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), periodoFiltro === 'customizado' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data In\\xEDcio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataInicio,\n            onChange: e => setDataInicio(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data Fim:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataFim,\n            onChange: e => setDataFim(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Produto:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: produtoFiltro,\n          onChange: e => setProdutoFiltro(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), produtosUnicos.map(produto => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: produto,\n            children: produto\n          }, produto, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Situa\\xE7\\xE3o:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: situacaoFiltro,\n          onChange: e => setSituacaoFiltro(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Todas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"falta\",\n            children: \"Falta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"excedente\",\n            children: \"Excedente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"igual\",\n            children: \"Igual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reloadData,\n        disabled: loading,\n        children: \"Recarregar Dados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/resumo\",\n        state: {\n          combinedData\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"resumo-button\",\n          children: \"Ver Resumo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [\"Carregando... \", /*#__PURE__*/_jsxDEV(\"progress\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: ['Código', 'Produto', 'Quantidade Prevista', 'Data de Previsão', 'Semana', 'Entregue', 'Faltante/Excedente'].map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort(header.toLowerCase().replace(/ /g, '_')),\n              children: header\n            }, header, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: paginatedData.map((row, index) => {\n            const dataPrevisao = parseDate(row['Data de Previsão de Entrega']);\n            const diferenca = row.Diferenca; // Diferença entre entregue e previsto\n            const isExcedente = diferenca > 0; // Verifica se há excedente\n\n            // Calcula o valor máximo do eixo X\n            const maxValue = Math.max(row['Quantidade Prevista'], row.QuantidadeEntregue);\n\n            // Dados para o gráfico\n            const chartData = {\n              labels: ['Previsto', 'Entregue'],\n              datasets: [{\n                label: 'Valores',\n                data: [row['Quantidade Prevista'], row.QuantidadeEntregue],\n                backgroundColor: ['#f0ad4e', '#5cb85c'],\n                // Amarelo para previsto, verde para entregue\n                borderColor: ['#f0ad4e', '#5cb85c'],\n                borderWidth: 1\n              }]\n            };\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: diferenca !== 0 ? getFaltanteStyle(diferenca) : '',\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.Codigo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.Produto\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row['Quantidade Prevista']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: dataPrevisao ? format(dataPrevisao, 'dd/MM/yyyy') : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.SemanaPrevisao\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.QuantidadeEntregue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: isExcedente ? `+${diferenca} (Excedente)` : diferenca < 0 ? `${diferenca} (Falta)` : '0'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"7\",\n                  style: {\n                    padding: '10px 0'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: '100%',\n                      height: '150px'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Bar, {\n                      data: chartData,\n                      options: {\n                        indexAxis: 'y',\n                        // Define o gráfico como horizontal\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        // Permite ajustar o tamanho manualmente\n                        plugins: {\n                          legend: {\n                            display: false // Oculta a legenda\n                          },\n                          tooltip: {\n                            enabled: true\n                          }\n                        },\n                        scales: {\n                          x: {\n                            beginAtZero: true,\n                            max: maxValue // Valor máximo dinâmico\n                          },\n                          y: {\n                            barPercentage: 0.8,\n                            // Ajusta a largura das barras\n                            categoryPercentage: 0.8 // Ajusta o espaçamento entre as categorias\n                          }\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 21\n              }, this)]\n            }, `${row.Codigo}-${row['Data de Previsão de Entrega']}-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: 'Anterior',\n        nextLabel: 'Próximo',\n        breakLabel: '...',\n        pageCount: pageCount,\n        marginPagesDisplayed: 2,\n        pageRangeDisplayed: 5,\n        onPageChange: handlePageClick,\n        containerClassName: 'pagination',\n        activeClassName: 'active'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"istQBSnxMvH/Kawq5s//OzYrpM4=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","axios","axiosRetry","Papa","useNavigate","Link","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Tooltip","Legend","ReactPaginate","XLSX","format","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Home","_s","previsaoData","setPrevisaoData","entregaData","setEntregaData","loading","setLoading","error","setError","periodoFiltro","setPeriodoFiltro","dataInicio","setDataInicio","dataFim","setDataFim","produtoFiltro","setProdutoFiltro","situacaoFiltro","setSituacaoFiltro","darkMode","setDarkMode","currentPage","setCurrentPage","sortConfig","setSortConfig","key","direction","navigate","parseDate","dateString","day","month","year","split","map","Number","Date","fetchSheetData","url","setData","response","get","Promise","resolve","reject","parse","data","header","skipEmptyLines","dynamicTyping","complete","result","length","Error","console","isCancel","getWeekOfMonth","date","isNaN","firstDay","getFullYear","getMonth","dayOfMonth","getDate","adjustedDate","getDay","Math","ceil","combinedData","previsaoItem","entregas","filter","item","Codigo","quantidadeEntregue","reduce","acc","curr","diferenca","QuantidadeEntregue","Diferenca","SemanaPrevisao","produtosUnicos","produtos","Produto","Set","dadosFiltrados","filtrados","hoje","trintaDiasAtras","setDate","dataPrevisao","primeiroDiaMesPassado","ultimoDiaMesPassado","primeiroDiaMesAtual","ultimoDiaMesAtual","inicio","fim","sort","a","b","reloadData","all","handleNavigateToResumo","state","getFaltanteStyle","value","toggleDarkMode","document","body","classList","toggle","exportToExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","handleSort","itemsPerPage","pageCount","paginatedData","start","end","slice","handlePageClick","selected","totalPrevisto","totalEntregue","totalFalta","max","totalExcedente","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","target","type","produto","disabled","to","toLowerCase","replace","row","index","isExcedente","maxValue","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","colSpan","style","padding","width","height","options","indexAxis","responsive","maintainAspectRatio","plugins","legend","display","tooltip","enabled","scales","x","beginAtZero","y","barPercentage","categoryPercentage","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/home.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport Papa from 'papaparse';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport ReactPaginate from 'react-paginate';\r\nimport * as XLSX from 'xlsx';\r\nimport { format } from 'date-fns'; // Importa a função format do date-fns\r\nimport './App.css';\r\n\r\n// Registra os componentes necessários do Chart.js\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, Legend);\r\n\r\nconst Home = () => {\r\n  const [previsaoData, setPrevisaoData] = useState([]);\r\n  const [entregaData, setEntregaData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias');\r\n  const [dataInicio, setDataInicio] = useState('');\r\n  const [dataFim, setDataFim] = useState('');\r\n  const [produtoFiltro, setProdutoFiltro] = useState('');\r\n  const [situacaoFiltro, setSituacaoFiltro] = useState(''); // Novo estado para filtro de situação\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(0); // Paginação\r\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' }); // Ordenação\r\n  const navigate = useNavigate();\r\n\r\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    const [day, month, year] = dateString.split('/').map(Number); // Converte os valores para números\r\n    return new Date(year, month - 1, day); // Cria a data no fuso horário local\r\n  };\r\n\r\n  // Função genérica para buscar dados de uma planilha\r\n  const fetchSheetData = async (url, setData) => {\r\n    try {\r\n      const response = await axios.get(url);\r\n      return new Promise((resolve, reject) => {\r\n        Papa.parse(response.data, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          dynamicTyping: true,\r\n          complete: (result) => {\r\n            if (result.data && result.data.length > 0) {\r\n              setData(result.data);\r\n              resolve();\r\n            } else {\r\n              reject(new Error('Dados não encontrados na planilha.'));\r\n            }\r\n          },\r\n          error: (error) => {\r\n            console.error('Erro ao processar CSV:', error);\r\n            reject(error);\r\n          },\r\n        });\r\n      });\r\n    } catch (error) {\r\n      if (!axios.isCancel(error)) {\r\n        throw error;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Função para calcular a semana do mês\r\n  const getWeekOfMonth = (dateString) => {\r\n    const date = parseDate(dateString);\r\n    if (!date || isNaN(date)) return 'Data inválida';\r\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const dayOfMonth = date.getDate();\r\n    const adjustedDate = dayOfMonth + firstDay.getDay() - 1;\r\n    return `${Math.ceil(adjustedDate / 7)}ª Semana`;\r\n  };\r\n\r\n  // Combinar os dados das abas Previsão e Entrega\r\n  const combinedData = useMemo(() => {\r\n    if (!previsaoData.length || !entregaData.length) return [];\r\n    return previsaoData.map((previsaoItem) => {\r\n      const entregas = entregaData.filter(\r\n        (item) =>\r\n          item.Codigo === previsaoItem.Codigo &&\r\n          item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']\r\n      );\r\n      const quantidadeEntregue = entregas.reduce(\r\n        (acc, curr) => acc + (curr['Quantidade Entregue'] || 0),\r\n        0\r\n      );\r\n      const diferenca = (quantidadeEntregue || 0) - (previsaoItem['Quantidade Prevista'] || 0);\r\n      return {\r\n        ...previsaoItem,\r\n        QuantidadeEntregue: quantidadeEntregue,\r\n        Diferenca: diferenca, // Armazena a diferença (positiva ou negativa)\r\n        SemanaPrevisao: getWeekOfMonth(previsaoItem['Data de Previsão de Entrega']),\r\n      };\r\n    });\r\n  }, [previsaoData, entregaData]);\r\n\r\n  // Lista de produtos únicos para o filtro\r\n  const produtosUnicos = useMemo(() => {\r\n    const produtos = combinedData.map((item) => item.Produto);\r\n    return [...new Set(produtos)];\r\n  }, [combinedData]);\r\n\r\n  // Função para aplicar os filtros\r\n  const dadosFiltrados = useMemo(() => {\r\n    if (!combinedData.length) return [];\r\n    let filtrados = combinedData;\r\n\r\n    // Filtro por período\r\n    const hoje = new Date();\r\n    switch (periodoFiltro) {\r\n      case '30_dias':\r\n        const trintaDiasAtras = new Date();\r\n        trintaDiasAtras.setDate(hoje.getDate() - 30);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= trintaDiasAtras && dataPrevisao <= hoje;\r\n        });\r\n        break;\r\n      case 'mes_passado':\r\n        const primeiroDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth() - 1, 1);\r\n        const ultimoDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth(), 0);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= primeiroDiaMesPassado && dataPrevisao <= ultimoDiaMesPassado;\r\n        });\r\n        break;\r\n      case 'mes_atual':\r\n        const primeiroDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth(), 1);\r\n        const ultimoDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= primeiroDiaMesAtual && dataPrevisao <= ultimoDiaMesAtual;\r\n        });\r\n        break;\r\n      case 'customizado':\r\n        if (dataInicio && dataFim) {\r\n          const inicio = parseDate(dataInicio);\r\n          const fim = parseDate(dataFim);\r\n          filtrados = filtrados.filter((item) => {\r\n            const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n            return dataPrevisao >= inicio && dataPrevisao <= fim;\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Filtro por nome do produto\r\n    if (produtoFiltro) {\r\n      filtrados = filtrados.filter((item) => item.Produto === produtoFiltro);\r\n    }\r\n\r\n    // Filtro por situação (falta, excedente, igual)\r\n    if (situacaoFiltro === 'falta') {\r\n      filtrados = filtrados.filter((item) => item.Diferenca < 0);\r\n    } else if (situacaoFiltro === 'excedente') {\r\n      filtrados = filtrados.filter((item) => item.Diferenca > 0);\r\n    } else if (situacaoFiltro === 'igual') {\r\n      filtrados = filtrados.filter((item) => item.Diferenca === 0);\r\n    }\r\n\r\n    // Ordenação\r\n    if (sortConfig.key) {\r\n      filtrados.sort((a, b) => {\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === 'asc' ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === 'asc' ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return filtrados;\r\n  }, [combinedData, periodoFiltro, dataInicio, dataFim, produtoFiltro, situacaoFiltro, sortConfig]);\r\n\r\n  // Função para recarregar os dados\r\n  const reloadData = async () => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n      await Promise.all([\r\n        fetchSheetData(\r\n          'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao',\r\n          setPrevisaoData\r\n        ),\r\n        fetchSheetData(\r\n          'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega',\r\n          setEntregaData\r\n        ),\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar dados:', error);\r\n      setError('Erro ao carregar dados. Verifique os links ou tente novamente mais tarde.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Carregar dados ao montar o componente\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, []);\r\n\r\n  // Navegação para a página de resumo\r\n  const handleNavigateToResumo = () => {\r\n    navigate('/resumo', { state: { combinedData } });\r\n  };\r\n\r\n  // Função para estilizar a célula de quantidade faltante\r\n  const getFaltanteStyle = (value) => {\r\n    if (value > 0) return 'faltante-green'; // Verde se há excedente\r\n    if (value < 0) return 'faltante-red';  // Vermelho se há falta\r\n    return 'faltante-blue';               // Azul se não há diferença\r\n  };\r\n\r\n  // Função para alternar o modo escuro\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n    document.body.classList.toggle('dark-mode', !darkMode);\r\n  };\r\n\r\n  // Função para exportar dados para Excel\r\n  const exportToExcel = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(dadosFiltrados);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Dados Filtrados');\r\n    XLSX.writeFile(workbook, 'dados_filtrados.xlsx');\r\n  };\r\n\r\n  // Função para lidar com a ordenação\r\n  const handleSort = (key) => {\r\n    let direction = 'asc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  // Configuração da paginação\r\n  const itemsPerPage = 10; // Número de itens por página\r\n  const pageCount = Math.ceil(dadosFiltrados.length / itemsPerPage);\r\n  const paginatedData = useMemo(() => {\r\n    const start = currentPage * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    return dadosFiltrados.slice(start, end);\r\n  }, [dadosFiltrados, currentPage]);\r\n\r\n  // Função para mudar de página\r\n  const handlePageClick = ({ selected }) => {\r\n    setCurrentPage(selected);\r\n  };\r\n\r\n  // Cálculo do painel de resumo\r\n  const totalPrevisto = dadosFiltrados.reduce((acc, curr) => acc + (curr['Quantidade Prevista'] || 0), 0);\r\n  const totalEntregue = dadosFiltrados.reduce((acc, curr) => acc + (curr.QuantidadeEntregue || 0), 0);\r\n  const totalFalta = dadosFiltrados.reduce((acc, curr) => acc + Math.max(0, (curr['Quantidade Prevista'] || 0) - (curr.QuantidadeEntregue || 0)), 0);\r\n  const totalExcedente = dadosFiltrados.reduce((acc, curr) => acc + Math.max(0, (curr.QuantidadeEntregue || 0) - (curr['Quantidade Prevista'] || 0)), 0);\r\n\r\n  return (\r\n    <div className={`container ${darkMode ? 'dark-mode' : ''}`}>\r\n      <h1>Dados Compilados</h1>\r\n\r\n      {/* Painel de Resumo */}\r\n      <div className=\"summary-panel\">\r\n        <div>\r\n          <strong>Total Previsto:</strong> {totalPrevisto}\r\n        </div>\r\n        <div>\r\n          <strong>Total Entregue:</strong> {totalEntregue}\r\n        </div>\r\n        <div>\r\n          <strong>Falta:</strong> {totalFalta}\r\n        </div>\r\n        <div>\r\n          <strong>Excedente:</strong> {totalExcedente}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Botões de Ação */}\r\n      <div className=\"actions\">\r\n        <button onClick={toggleDarkMode}>\r\n          {darkMode ? 'Modo Claro' : 'Modo Escuro'}\r\n        </button>\r\n        <button onClick={exportToExcel}>Exportar para Excel</button>\r\n      </div>\r\n\r\n      {/* Filtros */}\r\n      <div className=\"filtros\">\r\n        <label>\r\n          Período:\r\n          <select\r\n            value={periodoFiltro}\r\n            onChange={(e) => setPeriodoFiltro(e.target.value)}\r\n          >\r\n            <option value=\"30_dias\">Últimos 30 dias</option>\r\n            <option value=\"mes_passado\">Mês Passado</option>\r\n            <option value=\"mes_atual\">Mês Atual</option>\r\n            <option value=\"customizado\">Intervalo Customizado</option>\r\n          </select>\r\n        </label>\r\n        {periodoFiltro === 'customizado' && (\r\n          <div>\r\n            <label>\r\n              Data Início:\r\n              <input\r\n                type=\"date\"\r\n                value={dataInicio}\r\n                onChange={(e) => setDataInicio(e.target.value)}\r\n              />\r\n            </label>\r\n            <label>\r\n              Data Fim:\r\n              <input\r\n                type=\"date\"\r\n                value={dataFim}\r\n                onChange={(e) => setDataFim(e.target.value)}\r\n              />\r\n            </label>\r\n          </div>\r\n        )}\r\n        <label>\r\n          Produto:\r\n          <select\r\n            value={produtoFiltro}\r\n            onChange={(e) => setProdutoFiltro(e.target.value)}\r\n          >\r\n            <option value=\"\">Todos</option>\r\n            {produtosUnicos.map((produto) => (\r\n              <option key={produto} value={produto}>\r\n                {produto}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Situação:\r\n          <select\r\n            value={situacaoFiltro}\r\n            onChange={(e) => setSituacaoFiltro(e.target.value)}\r\n          >\r\n            <option value=\"\">Todas</option>\r\n            <option value=\"falta\">Falta</option>\r\n            <option value=\"excedente\">Excedente</option>\r\n            <option value=\"igual\">Igual</option>\r\n          </select>\r\n        </label>\r\n        <button onClick={reloadData} disabled={loading}>\r\n          Recarregar Dados\r\n        </button>\r\n        <Link to=\"/resumo\" state={{ combinedData }}>\r\n          <button className=\"resumo-button\">Ver Resumo</button>\r\n        </Link>\r\n      </div>\r\n\r\n      {loading && (\r\n        <div className=\"loading\">\r\n          Carregando... <progress />\r\n        </div>\r\n      )}\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {!loading && !error && (\r\n        <>\r\n          <table className=\"data-table\">\r\n            <thead>\r\n              <tr>\r\n                {[\r\n                  'Código',\r\n                  'Produto',\r\n                  'Quantidade Prevista',\r\n                  'Data de Previsão',\r\n                  'Semana',\r\n                  'Entregue',\r\n                  'Faltante/Excedente',\r\n                ].map((header) => (\r\n                  <th key={header} onClick={() => handleSort(header.toLowerCase().replace(/ /g, '_'))}>\r\n                    {header}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {paginatedData.map((row, index) => {\r\n                const dataPrevisao = parseDate(row['Data de Previsão de Entrega']);\r\n                const diferenca = row.Diferenca; // Diferença entre entregue e previsto\r\n                const isExcedente = diferenca > 0; // Verifica se há excedente\r\n\r\n                // Calcula o valor máximo do eixo X\r\n                const maxValue = Math.max(\r\n                  row['Quantidade Prevista'],\r\n                  row.QuantidadeEntregue\r\n                );\r\n\r\n                // Dados para o gráfico\r\n                const chartData = {\r\n                  labels: ['Previsto', 'Entregue'],\r\n                  datasets: [\r\n                    {\r\n                      label: 'Valores',\r\n                      data: [row['Quantidade Prevista'], row.QuantidadeEntregue],\r\n                      backgroundColor: ['#f0ad4e', '#5cb85c'], // Amarelo para previsto, verde para entregue\r\n                      borderColor: ['#f0ad4e', '#5cb85c'],\r\n                      borderWidth: 1,\r\n                    },\r\n                  ],\r\n                };\r\n\r\n                return (\r\n                  <React.Fragment key={`${row.Codigo}-${row['Data de Previsão de Entrega']}-${index}`}>\r\n                    <tr className={diferenca !== 0 ? getFaltanteStyle(diferenca) : ''}>\r\n                      <td>{row.Codigo}</td>\r\n                      <td>{row.Produto}</td>\r\n                      <td>{row['Quantidade Prevista']}</td>\r\n                      <td>{dataPrevisao ? format(dataPrevisao, 'dd/MM/yyyy') : 'N/A'}</td>\r\n                      <td>{row.SemanaPrevisao}</td>\r\n                      <td>{row.QuantidadeEntregue}</td>\r\n                      <td>\r\n                        {isExcedente ? `+${diferenca} (Excedente)` : diferenca < 0 ? `${diferenca} (Falta)` : '0'}\r\n                      </td>\r\n                    </tr>\r\n                    {/* Gráfico abaixo da linha */}\r\n                    <tr>\r\n                      <td colSpan=\"7\" style={{ padding: '10px 0' }}>\r\n                        <div style={{ width: '100%', height: '150px' }}>\r\n                          <Bar\r\n                            data={chartData}\r\n                            options={{\r\n                              indexAxis: 'y', // Define o gráfico como horizontal\r\n                              responsive: true,\r\n                              maintainAspectRatio: false, // Permite ajustar o tamanho manualmente\r\n                              plugins: {\r\n                                legend: {\r\n                                  display: false, // Oculta a legenda\r\n                                },\r\n                                tooltip: {\r\n                                  enabled: true,\r\n                                },\r\n                              },\r\n                              scales: {\r\n                                x: {\r\n                                  beginAtZero: true,\r\n                                  max: maxValue, // Valor máximo dinâmico\r\n                                },\r\n                                y: {\r\n                                  barPercentage: 0.8, // Ajusta a largura das barras\r\n                                  categoryPercentage: 0.8, // Ajusta o espaçamento entre as categorias\r\n                                },\r\n                              },\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n\r\n          {/* Paginação */}\r\n          <ReactPaginate\r\n            previousLabel={'Anterior'}\r\n            nextLabel={'Próximo'}\r\n            breakLabel={'...'}\r\n            pageCount={pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={handlePageClick}\r\n            containerClassName={'pagination'}\r\n            activeClassName={'active'}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}