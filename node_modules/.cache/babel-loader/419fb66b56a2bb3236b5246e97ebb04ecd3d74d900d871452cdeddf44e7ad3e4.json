{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport Papa from 'papaparse';\nimport { useNavigate } from 'react-router-dom';\nimport './App.css';\n\n// Configura o mecanismo de retentativa para o axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxiosRetry(axios, {\n  retries: 3,\n  retryDelay: axiosRetry.exponentialDelay\n});\nconst Home = () => {\n  _s();\n  const [previsaoData, setPrevisaoData] = useState([]);\n  const [entregaData, setEntregaData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias');\n  const [dataInicio, setDataInicio] = useState('');\n  const [dataFim, setDataFim] = useState('');\n  const [produtoFiltro, setProdutoFiltro] = useState('');\n  const navigate = useNavigate();\n\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\n  const parseDate = dateString => {\n    if (!dateString) return null;\n    const [day, month, year] = dateString.split('/');\n    return new Date(`${year}-${month}-${day}`);\n  };\n\n  // Função genérica para buscar dados de uma planilha\n  const fetchSheetData = async (url, setData) => {\n    try {\n      const response = await axios.get(url);\n      return new Promise((resolve, reject) => {\n        Papa.parse(response.data, {\n          header: true,\n          skipEmptyLines: true,\n          dynamicTyping: true,\n          complete: result => {\n            if (result.data && result.data.length > 0) {\n              setData(result.data);\n              resolve();\n            } else {\n              reject(new Error('Dados não encontrados na planilha.'));\n            }\n          },\n          error: error => {\n            console.error('Erro ao processar CSV:', error);\n            reject(error);\n          }\n        });\n      });\n    } catch (error) {\n      if (!axios.isCancel(error)) {\n        throw error;\n      }\n    }\n  };\n\n  // Combinar os dados das abas Previsão e Entrega\n  const combinedData = useMemo(() => {\n    if (!previsaoData.length || !entregaData.length) return [];\n    return previsaoData.map(previsaoItem => {\n      const entregas = entregaData.filter(item => item.Codigo === previsaoItem.Codigo && item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']);\n      const quantidadeEntregue = entregas.reduce((acc, curr) => acc + (curr['Quantidade Entregue'] || 0), 0);\n      const quantidadeFaltante = Math.max((previsaoItem['Quantidade Prevista'] || 0) - quantidadeEntregue, 0);\n      return {\n        ...previsaoItem,\n        QuantidadeEntregue: quantidadeEntregue,\n        QuantidadeFaltante: quantidadeFaltante\n      };\n    });\n  }, [previsaoData, entregaData]);\n\n  // Função para recarregar os dados\n  const reloadData = async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      await Promise.all([fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao', setPrevisaoData), fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega', setEntregaData)]);\n    } catch (error) {\n      console.error('Erro ao carregar dados:', error);\n      setError('Erro ao carregar dados. Verifique os links ou tente novamente mais tarde.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Carregar dados ao montar o componente\n  useEffect(() => {\n    reloadData();\n  }, []);\n\n  // Navegação para a página de resumo\n  const handleNavigateToResumo = () => {\n    navigate('/resumo', {\n      state: {\n        combinedData\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dados Compilados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNavigateToResumo,\n      children: \"Ver Resumo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"YMBRNpMKzU+iGUX8HX9bmmLA0Vk=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home; // Certifique-se de usar \"export default\"\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","axios","axiosRetry","Papa","useNavigate","jsxDEV","_jsxDEV","retries","retryDelay","exponentialDelay","Home","_s","previsaoData","setPrevisaoData","entregaData","setEntregaData","loading","setLoading","error","setError","periodoFiltro","setPeriodoFiltro","dataInicio","setDataInicio","dataFim","setDataFim","produtoFiltro","setProdutoFiltro","navigate","parseDate","dateString","day","month","year","split","Date","fetchSheetData","url","setData","response","get","Promise","resolve","reject","parse","data","header","skipEmptyLines","dynamicTyping","complete","result","length","Error","console","isCancel","combinedData","map","previsaoItem","entregas","filter","item","Codigo","quantidadeEntregue","reduce","acc","curr","quantidadeFaltante","Math","max","QuantidadeEntregue","QuantidadeFaltante","reloadData","all","handleNavigateToResumo","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/home.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport Papa from 'papaparse';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './App.css';\r\n\r\n// Configura o mecanismo de retentativa para o axios\r\naxiosRetry(axios, { retries: 3, retryDelay: axiosRetry.exponentialDelay });\r\n\r\nconst Home = () => {\r\n  const [previsaoData, setPrevisaoData] = useState([]);\r\n  const [entregaData, setEntregaData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias');\r\n  const [dataInicio, setDataInicio] = useState('');\r\n  const [dataFim, setDataFim] = useState('');\r\n  const [produtoFiltro, setProdutoFiltro] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    const [day, month, year] = dateString.split('/');\r\n    return new Date(`${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Função genérica para buscar dados de uma planilha\r\n  const fetchSheetData = async (url, setData) => {\r\n    try {\r\n      const response = await axios.get(url);\r\n      return new Promise((resolve, reject) => {\r\n        Papa.parse(response.data, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          dynamicTyping: true,\r\n          complete: (result) => {\r\n            if (result.data && result.data.length > 0) {\r\n              setData(result.data);\r\n              resolve();\r\n            } else {\r\n              reject(new Error('Dados não encontrados na planilha.'));\r\n            }\r\n          },\r\n          error: (error) => {\r\n            console.error('Erro ao processar CSV:', error);\r\n            reject(error);\r\n          },\r\n        });\r\n      });\r\n    } catch (error) {\r\n      if (!axios.isCancel(error)) {\r\n        throw error;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Combinar os dados das abas Previsão e Entrega\r\n  const combinedData = useMemo(() => {\r\n    if (!previsaoData.length || !entregaData.length) return [];\r\n    return previsaoData.map((previsaoItem) => {\r\n      const entregas = entregaData.filter(\r\n        (item) =>\r\n          item.Codigo === previsaoItem.Codigo &&\r\n          item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']\r\n      );\r\n      const quantidadeEntregue = entregas.reduce(\r\n        (acc, curr) => acc + (curr['Quantidade Entregue'] || 0),\r\n        0\r\n      );\r\n      const quantidadeFaltante = Math.max(\r\n        (previsaoItem['Quantidade Prevista'] || 0) - quantidadeEntregue,\r\n        0\r\n      );\r\n      return {\r\n        ...previsaoItem,\r\n        QuantidadeEntregue: quantidadeEntregue,\r\n        QuantidadeFaltante: quantidadeFaltante,\r\n      };\r\n    });\r\n  }, [previsaoData, entregaData]);\r\n\r\n  // Função para recarregar os dados\r\n  const reloadData = async () => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n      await Promise.all([\r\n        fetchSheetData(\r\n          'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao',\r\n          setPrevisaoData\r\n        ),\r\n        fetchSheetData(\r\n          'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega',\r\n          setEntregaData\r\n        ),\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar dados:', error);\r\n      setError('Erro ao carregar dados. Verifique os links ou tente novamente mais tarde.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Carregar dados ao montar o componente\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, []);\r\n\r\n  // Navegação para a página de resumo\r\n  const handleNavigateToResumo = () => {\r\n    navigate('/resumo', { state: { combinedData } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Dados Compilados</h1>\r\n      <button onClick={handleNavigateToResumo}>Ver Resumo</button>\r\n      {/* Filtros e tabela aqui (código omitido por brevidade) */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home; // Certifique-se de usar \"export default\""],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}