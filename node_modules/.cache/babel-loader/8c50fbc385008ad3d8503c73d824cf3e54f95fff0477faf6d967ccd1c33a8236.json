{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosSource = axios.CancelToken.source();\nconst App = () => {\n  _s();\n  const [previsaoData, setPrevisaoData] = useState([]);\n  const [entregaData, setEntregaData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias');\n  const [dataInicio, setDataInicio] = useState('');\n  const [dataFim, setDataFim] = useState('');\n  const [produtoFiltro, setProdutoFiltro] = useState('');\n  const parseDate = dateString => {\n    if (!dateString) return null;\n    const [day, month, year] = dateString.split('/');\n    return new Date(`${year}-${month}-${day}`);\n  };\n  const fetchSheetData = async (url, setData) => {\n    try {\n      const response = await axios.get(url, {\n        cancelToken: axiosSource.token\n      });\n      return new Promise((resolve, reject) => {\n        Papa.parse(response.data, {\n          header: true,\n          skipEmptyLines: true,\n          dynamicTyping: true,\n          complete: result => {\n            setData(result.data);\n            resolve();\n          },\n          error: error => reject(error)\n        });\n      });\n    } catch (error) {\n      if (!axios.isCancel(error)) {\n        throw error;\n      }\n    }\n  };\n  const getWeekOfMonth = dateString => {\n    const date = parseDate(dateString);\n    if (!date || isNaN(date)) return 'Data inválida';\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const dayOfMonth = date.getDate();\n    const adjustedDate = dayOfMonth + firstDay.getDay() - 1;\n    return Math.ceil(adjustedDate / 7);\n  };\n  const combinedData = useMemo(() => {\n    if (!previsaoData.length || !entregaData.length) return [];\n    return previsaoData.map(previsaoItem => {\n      const entregas = entregaData.filter(item => item.Codigo === previsaoItem.Codigo && item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']);\n      const quantidadeEntregue = entregas.reduce((acc, curr) => acc + (curr['Quantidade Entregue'] || 0), 0);\n      const quantidadeFaltante = Math.max((previsaoItem['Quantidade Prevista'] || 0) - quantidadeEntregue, 0);\n      return {\n        ...previsaoItem,\n        QuantidadeEntregue: quantidadeEntregue,\n        QuantidadeFaltante: quantidadeFaltante,\n        SemanaPrevisao: `${getWeekOfMonth(previsaoItem['Data de Previsão de Entrega'])}ª Semana`\n      };\n    });\n  }, [previsaoData, entregaData]);\n  const produtosUnicos = useMemo(() => {\n    const produtos = combinedData.map(item => item.Produto);\n    return [...new Set(produtos)];\n  }, [combinedData]);\n  const dadosFiltrados = useMemo(() => {\n    if (!combinedData.length) return [];\n    let filtrados = combinedData;\n    const hoje = new Date();\n    switch (periodoFiltro) {\n      case '30_dias':\n        const trintaDiasAtras = new Date();\n        trintaDiasAtras.setDate(hoje.getDate() - 30);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= trintaDiasAtras && dataPrevisao <= hoje;\n        });\n        break;\n      case 'mes_passado':\n        const primeiroDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth() - 1, 1);\n        const ultimoDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth(), 0);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= primeiroDiaMesPassado && dataPrevisao <= ultimoDiaMesPassado;\n        });\n        break;\n      case 'mes_atual':\n        const primeiroDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth(), 1);\n        const ultimoDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= primeiroDiaMesAtual && dataPrevisao <= ultimoDiaMesAtual;\n        });\n        break;\n      case 'customizado':\n        if (dataInicio && dataFim) {\n          const inicio = new Date(dataInicio);\n          const fim = new Date(dataFim);\n          filtrados = filtrados.filter(item => {\n            const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n            return dataPrevisao >= inicio && dataPrevisao <= fim;\n          });\n        }\n        break;\n      default:\n        break;\n    }\n    if (produtoFiltro) {\n      filtrados = filtrados.filter(item => item.Produto === produtoFiltro);\n    }\n    return filtrados;\n  }, [combinedData, periodoFiltro, dataInicio, dataFim, produtoFiltro]);\n  const fetchData = async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      await Promise.all([fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao', setPrevisaoData), fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega', setEntregaData)]);\n    } catch (error) {\n      console.error('Erro ao carregar dados:', error);\n      setError('Erro ao carregar dados. Tente recarregar a página.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    return () => axiosSource.cancel('Componente desmontado');\n  }, []);\n\n  // Função para calcular a cor com base na quantidade faltante\n  const calcularCorFaltante = quantidadeFaltante => {\n    const max = 100;\n    const min = 0;\n    const porcentagem = Math.max(Math.min((quantidadeFaltante - min) / (max - min), 1), 0);\n    const red = Math.floor(255 * porcentagem);\n    const green = 255 - red;\n    return `rgb(${red}, ${green}, 0)`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dados Compilados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filtros\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Per\\xEDodo:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: periodoFiltro,\n          onChange: e => setPeriodoFiltro(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"30_dias\",\n            children: \"\\xDAltimos 30 dias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mes_passado\",\n            children: \"M\\xEAs Passado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mes_atual\",\n            children: \"M\\xEAs Atual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"customizado\",\n            children: \"Intervalo Customizado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), periodoFiltro === 'customizado' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data In\\xEDcio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataInicio,\n            onChange: e => setDataInicio(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data Fim:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataFim,\n            onChange: e => setDataFim(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Produto:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: produtoFiltro,\n          onChange: e => setProdutoFiltro(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), produtosUnicos.map(produto => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: produto,\n            children: produto\n          }, produto, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: ['Código', 'Produto', 'Quantidade Prevista', 'Data de Previsão de Entrega', 'Quantidade Entregue', 'Quantidade Faltante', 'Semana'].map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dadosFiltrados.map((item, index) => {\n          const cor = calcularCorFaltante(item.QuantidadeFaltante);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Codigo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Produto\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item['Quantidade Prevista']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item['Data de Previsão de Entrega']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.QuantidadeEntregue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: cor\n              },\n              children: item.QuantidadeFaltante\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.SemanaPrevisao\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"J/dw7dofiiLxzzdxw1wvNOhQI48=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","axios","Papa","jsxDEV","_jsxDEV","axiosSource","CancelToken","source","App","_s","previsaoData","setPrevisaoData","entregaData","setEntregaData","loading","setLoading","error","setError","periodoFiltro","setPeriodoFiltro","dataInicio","setDataInicio","dataFim","setDataFim","produtoFiltro","setProdutoFiltro","parseDate","dateString","day","month","year","split","Date","fetchSheetData","url","setData","response","get","cancelToken","token","Promise","resolve","reject","parse","data","header","skipEmptyLines","dynamicTyping","complete","result","isCancel","getWeekOfMonth","date","isNaN","firstDay","getFullYear","getMonth","dayOfMonth","getDate","adjustedDate","getDay","Math","ceil","combinedData","length","map","previsaoItem","entregas","filter","item","Codigo","quantidadeEntregue","reduce","acc","curr","quantidadeFaltante","max","QuantidadeEntregue","QuantidadeFaltante","SemanaPrevisao","produtosUnicos","produtos","Produto","Set","dadosFiltrados","filtrados","hoje","trintaDiasAtras","setDate","dataPrevisao","primeiroDiaMesPassado","ultimoDiaMesPassado","primeiroDiaMesAtual","ultimoDiaMesAtual","inicio","fim","fetchData","all","console","cancel","calcularCorFaltante","min","porcentagem","red","floor","green","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","produto","index","cor","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/App.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\nimport './App.css';\r\n\r\nconst axiosSource = axios.CancelToken.source();\r\n\r\nconst App = () => {\r\n  const [previsaoData, setPrevisaoData] = useState([]);\r\n  const [entregaData, setEntregaData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias');\r\n  const [dataInicio, setDataInicio] = useState('');\r\n  const [dataFim, setDataFim] = useState('');\r\n  const [produtoFiltro, setProdutoFiltro] = useState('');\r\n\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    const [day, month, year] = dateString.split('/');\r\n    return new Date(`${year}-${month}-${day}`);\r\n  };\r\n\r\n  const fetchSheetData = async (url, setData) => {\r\n    try {\r\n      const response = await axios.get(url, {\r\n        cancelToken: axiosSource.token,\r\n      });\r\n\r\n      return new Promise((resolve, reject) => {\r\n        Papa.parse(response.data, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          dynamicTyping: true,\r\n          complete: (result) => {\r\n            setData(result.data);\r\n            resolve();\r\n          },\r\n          error: (error) => reject(error),\r\n        });\r\n      });\r\n    } catch (error) {\r\n      if (!axios.isCancel(error)) {\r\n        throw error;\r\n      }\r\n    }\r\n  };\r\n\r\n  const getWeekOfMonth = (dateString) => {\r\n    const date = parseDate(dateString);\r\n    if (!date || isNaN(date)) return 'Data inválida';\r\n\r\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const dayOfMonth = date.getDate();\r\n    const adjustedDate = dayOfMonth + firstDay.getDay() - 1;\r\n    return Math.ceil(adjustedDate / 7);\r\n  };\r\n\r\n  const combinedData = useMemo(() => {\r\n    if (!previsaoData.length || !entregaData.length) return [];\r\n\r\n    return previsaoData.map((previsaoItem) => {\r\n      const entregas = entregaData.filter(\r\n        (item) =>\r\n          item.Codigo === previsaoItem.Codigo &&\r\n          item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']\r\n      );\r\n\r\n      const quantidadeEntregue = entregas.reduce(\r\n        (acc, curr) => acc + (curr['Quantidade Entregue'] || 0),\r\n        0\r\n      );\r\n\r\n      const quantidadeFaltante = Math.max(\r\n        (previsaoItem['Quantidade Prevista'] || 0) - quantidadeEntregue,\r\n        0\r\n      );\r\n\r\n      return {\r\n        ...previsaoItem,\r\n        QuantidadeEntregue: quantidadeEntregue,\r\n        QuantidadeFaltante: quantidadeFaltante,\r\n        SemanaPrevisao: `${getWeekOfMonth(previsaoItem['Data de Previsão de Entrega'])}ª Semana`,\r\n      };\r\n    });\r\n  }, [previsaoData, entregaData]);\r\n\r\n  const produtosUnicos = useMemo(() => {\r\n    const produtos = combinedData.map((item) => item.Produto);\r\n    return [...new Set(produtos)];\r\n  }, [combinedData]);\r\n\r\n  const dadosFiltrados = useMemo(() => {\r\n    if (!combinedData.length) return [];\r\n\r\n    let filtrados = combinedData;\r\n\r\n    const hoje = new Date();\r\n    switch (periodoFiltro) {\r\n      case '30_dias':\r\n        const trintaDiasAtras = new Date();\r\n        trintaDiasAtras.setDate(hoje.getDate() - 30);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= trintaDiasAtras && dataPrevisao <= hoje;\r\n        });\r\n        break;\r\n\r\n      case 'mes_passado':\r\n        const primeiroDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth() - 1, 1);\r\n        const ultimoDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth(), 0);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= primeiroDiaMesPassado && dataPrevisao <= ultimoDiaMesPassado;\r\n        });\r\n        break;\r\n\r\n      case 'mes_atual':\r\n        const primeiroDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth(), 1);\r\n        const ultimoDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= primeiroDiaMesAtual && dataPrevisao <= ultimoDiaMesAtual;\r\n        });\r\n        break;\r\n\r\n      case 'customizado':\r\n        if (dataInicio && dataFim) {\r\n          const inicio = new Date(dataInicio);\r\n          const fim = new Date(dataFim);\r\n          filtrados = filtrados.filter((item) => {\r\n            const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n            return dataPrevisao >= inicio && dataPrevisao <= fim;\r\n          });\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (produtoFiltro) {\r\n      filtrados = filtrados.filter((item) => item.Produto === produtoFiltro);\r\n    }\r\n\r\n    return filtrados;\r\n  }, [combinedData, periodoFiltro, dataInicio, dataFim, produtoFiltro]);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n\r\n      await Promise.all([\r\n        fetchSheetData(\r\n          'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao',\r\n          setPrevisaoData\r\n        ),\r\n        fetchSheetData(\r\n          'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega',\r\n          setEntregaData\r\n        ),\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar dados:', error);\r\n      setError('Erro ao carregar dados. Tente recarregar a página.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    return () => axiosSource.cancel('Componente desmontado');\r\n  }, []);\r\n\r\n  // Função para calcular a cor com base na quantidade faltante\r\n  const calcularCorFaltante = (quantidadeFaltante) => {\r\n    const max = 100; \r\n    const min = 0;   \r\n\r\n    const porcentagem = Math.max(Math.min((quantidadeFaltante - min) / (max - min), 1), 0);\r\n\r\n    const red = Math.floor(255 * porcentagem);\r\n    const green = 255 - red;\r\n\r\n    return `rgb(${red}, ${green}, 0)`;  \r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Dados Compilados</h1>\r\n      {/* Filtros */}\r\n      <div className=\"filtros\">\r\n        <label>\r\n          Período:\r\n          <select\r\n            value={periodoFiltro}\r\n            onChange={(e) => setPeriodoFiltro(e.target.value)}\r\n          >\r\n            <option value=\"30_dias\">Últimos 30 dias</option>\r\n            <option value=\"mes_passado\">Mês Passado</option>\r\n            <option value=\"mes_atual\">Mês Atual</option>\r\n            <option value=\"customizado\">Intervalo Customizado</option>\r\n          </select>\r\n        </label>\r\n        {periodoFiltro === 'customizado' && (\r\n          <div>\r\n            <label>\r\n              Data Início:\r\n              <input\r\n                type=\"date\"\r\n                value={dataInicio}\r\n                onChange={(e) => setDataInicio(e.target.value)}\r\n              />\r\n            </label>\r\n            <label>\r\n              Data Fim:\r\n              <input\r\n                type=\"date\"\r\n                value={dataFim}\r\n                onChange={(e) => setDataFim(e.target.value)}\r\n              />\r\n            </label>\r\n          </div>\r\n        )}\r\n        <label>\r\n          Produto:\r\n          <select\r\n            value={produtoFiltro}\r\n            onChange={(e) => setProdutoFiltro(e.target.value)}\r\n          >\r\n            <option value=\"\">Todos</option>\r\n            {produtosUnicos.map((produto) => (\r\n              <option key={produto} value={produto}>\r\n                {produto}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      {loading && <div className=\"loading\">Carregando...</div>}\r\n      {error && <div className=\"error\">{error}</div>}\r\n\r\n      {!loading && !error && (\r\n        <table className=\"data-table\">\r\n          <thead>\r\n            <tr>\r\n              {[\r\n                'Código',\r\n                'Produto',\r\n                'Quantidade Prevista',\r\n                'Data de Previsão de Entrega',\r\n                'Quantidade Entregue',\r\n                'Quantidade Faltante',\r\n                'Semana',\r\n              ].map((header) => (\r\n                <th key={header}>{header}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {dadosFiltrados.map((item, index) => {\r\n              const cor = calcularCorFaltante(item.QuantidadeFaltante);\r\n              return (\r\n                <tr key={index}>\r\n                  <td>{item.Codigo}</td>\r\n                  <td>{item.Produto}</td>\r\n                  <td>{item['Quantidade Prevista']}</td>\r\n                  <td>{item['Data de Previsão de Entrega']}</td>\r\n                  <td>{item.QuantidadeEntregue}</td>\r\n                  <td style={{ backgroundColor: cor }}>{item.QuantidadeFaltante}</td>\r\n                  <td>{item.SemanaPrevisao}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}