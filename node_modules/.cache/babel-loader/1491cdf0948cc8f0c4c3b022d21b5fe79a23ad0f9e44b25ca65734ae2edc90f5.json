{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [previsaoData, setPrevisaoData] = useState([]);\n  const [entregaData, setEntregaData] = useState([]);\n  const [combinedData, setCombinedData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [selectedYear, setSelectedYear] = useState('');\n\n  // URLs para as abas Previsao e Entrega\n  const previsaoUrl = 'https://docs.google.com/spreadsheets/d/{ID_da_planilha}/gviz/tq?tqx=out:csv&sheet=Previsao';\n  const entregaUrl = 'https://docs.google.com/spreadsheets/d/{ID_da_planilha}/gviz/tq?tqx=out:csv&sheet=Entrega';\n\n  // Funções para buscar dados\n  const fetchPrevisaoData = () => {\n    axios.get(previsaoUrl).then(response => {\n      Papa.parse(response.data, {\n        complete: result => setPrevisaoData(result.data),\n        header: true\n      });\n    }).catch(error => {\n      console.error(\"Erro ao buscar dados da aba Previsão:\", error);\n      setError(\"Erro ao carregar os dados da aba Previsão.\");\n    });\n  };\n  const fetchEntregaData = () => {\n    axios.get(entregaUrl).then(response => {\n      Papa.parse(response.data, {\n        complete: result => setEntregaData(result.data),\n        header: true\n      });\n    }).catch(error => {\n      console.error(\"Erro ao buscar dados da aba Entrega:\", error);\n      setError(\"Erro ao carregar os dados da aba Entrega.\");\n    });\n  };\n\n  // Combinar dados com base na Data Referente (Planejada) e Código\n  useEffect(() => {\n    if (previsaoData.length > 0 && entregaData.length > 0) {\n      const updatedCombinedData = previsaoData.map(previsaoItem => {\n        const codigoProduto = previsaoItem['Codigo'];\n        const dataPrevisaoStr = previsaoItem['Data de Previsão de Entrega'];\n        const quantidadePrevista = previsaoItem['Quantidade Prevista'] || 0;\n        if (!dataPrevisaoStr) return {\n          ...previsaoItem,\n          QuantidadeEntregue: 0,\n          StatusEntrega: 'Sem previsão'\n        };\n        const [dia, mes, ano] = dataPrevisaoStr.split('/').map(Number);\n        const dataPrevisao = new Date(ano, mes - 1, dia);\n        const entregasCorrespondentes = entregaData.filter(item => item['Codigo'] === codigoProduto && item['Data Referente (Planejada)']).map(item => {\n          const [d, m, y] = item['Data Referente (Planejada)'].split('/').map(Number);\n          const dataPlanejada = new Date(y, m - 1, d);\n          const quantidadeEntregue = Number(item['Quantidade Entregue']) || 0;\n          return {\n            dataPlanejada,\n            quantidadeEntregue,\n            entregaReal: item['Data de Entrega (Real)'] || 'N/A'\n          };\n        });\n        let quantidadeEntregue = 0;\n        let statusEntrega = 'Em dia';\n        entregasCorrespondentes.forEach(entrega => {\n          if (entrega.dataPlanejada.getTime() === dataPrevisao.getTime()) {\n            quantidadeEntregue += entrega.quantidadeEntregue;\n            if (new Date(entrega.entregaReal) > dataPrevisao) {\n              statusEntrega = 'Atrasada';\n            }\n          }\n        });\n        return {\n          ...previsaoItem,\n          QuantidadeEntregue: quantidadeEntregue,\n          StatusEntrega: statusEntrega,\n          QuantidadeRestante: quantidadePrevista - quantidadeEntregue\n        };\n      });\n      setCombinedData(updatedCombinedData);\n      setLoading(false);\n    }\n  }, [previsaoData, entregaData]);\n\n  // Carregar dados inicialmente\n  useEffect(() => {\n    fetchPrevisaoData();\n    fetchEntregaData();\n  }, []);\n\n  // Filtrar dados com base no mês e ano selecionados\n  const filteredData = combinedData.filter(row => {\n    if (selectedMonth && selectedYear) {\n      const [day, month, year] = row['Data de Previsão de Entrega'].split('/').map(Number);\n      return month === Number(selectedMonth) && year === Number(selectedYear);\n    }\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dados Compilados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"month\",\n        children: \"M\\xEAs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"month\",\n        value: selectedMonth,\n        onChange: e => setSelectedMonth(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), Array.from({\n          length: 12\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i + 1,\n          children: String(i + 1).padStart(2, '0')\n        }, i + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        children: \"Ano:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"year\",\n        value: selectedYear,\n        onChange: e => setSelectedYear(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024\",\n          children: \"2024\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2025\",\n          children: \"2025\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"C\\xF3digo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Produto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantidade Prevista\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data de Previs\\xE3o de Entrega\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Semana\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantidade Entregue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status Entrega\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantidade Restante\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row['Codigo']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row['Produto']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row['Quantidade Prevista']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row['Data de Previsão de Entrega']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row['Semana']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row['QuantidadeEntregue']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row['StatusEntrega']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row['QuantidadeRestante']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5MbQzUpG97XiTT7pQVnflSi9gH0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Papa","jsxDEV","_jsxDEV","App","_s","previsaoData","setPrevisaoData","entregaData","setEntregaData","combinedData","setCombinedData","loading","setLoading","error","setError","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","previsaoUrl","entregaUrl","fetchPrevisaoData","get","then","response","parse","data","complete","result","header","catch","console","fetchEntregaData","length","updatedCombinedData","map","previsaoItem","codigoProduto","dataPrevisaoStr","quantidadePrevista","QuantidadeEntregue","StatusEntrega","dia","mes","ano","split","Number","dataPrevisao","Date","entregasCorrespondentes","filter","item","d","m","y","dataPlanejada","quantidadeEntregue","entregaReal","statusEntrega","forEach","entrega","getTime","QuantidadeRestante","filteredData","row","day","month","year","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","htmlFor","id","value","onChange","e","target","Array","from","_","i","String","padStart","index","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [previsaoData, setPrevisaoData] = useState([]);\r\n  const [entregaData, setEntregaData] = useState([]);\r\n  const [combinedData, setCombinedData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedMonth, setSelectedMonth] = useState('');\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n\r\n  // URLs para as abas Previsao e Entrega\r\n  const previsaoUrl = 'https://docs.google.com/spreadsheets/d/{ID_da_planilha}/gviz/tq?tqx=out:csv&sheet=Previsao';\r\n  const entregaUrl = 'https://docs.google.com/spreadsheets/d/{ID_da_planilha}/gviz/tq?tqx=out:csv&sheet=Entrega';\r\n\r\n  // Funções para buscar dados\r\n  const fetchPrevisaoData = () => {\r\n    axios.get(previsaoUrl)\r\n      .then(response => {\r\n        Papa.parse(response.data, {\r\n          complete: (result) => setPrevisaoData(result.data),\r\n          header: true\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Erro ao buscar dados da aba Previsão:\", error);\r\n        setError(\"Erro ao carregar os dados da aba Previsão.\");\r\n      });\r\n  };\r\n\r\n  const fetchEntregaData = () => {\r\n    axios.get(entregaUrl)\r\n      .then(response => {\r\n        Papa.parse(response.data, {\r\n          complete: (result) => setEntregaData(result.data),\r\n          header: true\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Erro ao buscar dados da aba Entrega:\", error);\r\n        setError(\"Erro ao carregar os dados da aba Entrega.\");\r\n      });\r\n  };\r\n\r\n  // Combinar dados com base na Data Referente (Planejada) e Código\r\n  useEffect(() => {\r\n    if (previsaoData.length > 0 && entregaData.length > 0) {\r\n      const updatedCombinedData = previsaoData.map(previsaoItem => {\r\n        const codigoProduto = previsaoItem['Codigo'];\r\n        const dataPrevisaoStr = previsaoItem['Data de Previsão de Entrega'];\r\n        const quantidadePrevista = previsaoItem['Quantidade Prevista'] || 0;\r\n\r\n        if (!dataPrevisaoStr) return { ...previsaoItem, QuantidadeEntregue: 0, StatusEntrega: 'Sem previsão' };\r\n\r\n        const [dia, mes, ano] = dataPrevisaoStr.split('/').map(Number);\r\n        const dataPrevisao = new Date(ano, mes - 1, dia);\r\n\r\n        const entregasCorrespondentes = entregaData\r\n          .filter(item => item['Codigo'] === codigoProduto && item['Data Referente (Planejada)'])\r\n          .map(item => {\r\n            const [d, m, y] = item['Data Referente (Planejada)'].split('/').map(Number);\r\n            const dataPlanejada = new Date(y, m - 1, d);\r\n            const quantidadeEntregue = Number(item['Quantidade Entregue']) || 0;\r\n\r\n            return {\r\n              dataPlanejada,\r\n              quantidadeEntregue,\r\n              entregaReal: item['Data de Entrega (Real)'] || 'N/A'\r\n            };\r\n          });\r\n\r\n        let quantidadeEntregue = 0;\r\n        let statusEntrega = 'Em dia';\r\n\r\n        entregasCorrespondentes.forEach(entrega => {\r\n          if (entrega.dataPlanejada.getTime() === dataPrevisao.getTime()) {\r\n            quantidadeEntregue += entrega.quantidadeEntregue;\r\n            if (new Date(entrega.entregaReal) > dataPrevisao) {\r\n              statusEntrega = 'Atrasada';\r\n            }\r\n          }\r\n        });\r\n\r\n        return {\r\n          ...previsaoItem,\r\n          QuantidadeEntregue: quantidadeEntregue,\r\n          StatusEntrega: statusEntrega,\r\n          QuantidadeRestante: quantidadePrevista - quantidadeEntregue\r\n        };\r\n      });\r\n\r\n      setCombinedData(updatedCombinedData);\r\n      setLoading(false);\r\n    }\r\n  }, [previsaoData, entregaData]);\r\n\r\n  // Carregar dados inicialmente\r\n  useEffect(() => {\r\n    fetchPrevisaoData();\r\n    fetchEntregaData();\r\n  }, []);\r\n\r\n  // Filtrar dados com base no mês e ano selecionados\r\n  const filteredData = combinedData.filter(row => {\r\n    if (selectedMonth && selectedYear) {\r\n      const [day, month, year] = row['Data de Previsão de Entrega'].split('/').map(Number);\r\n      return month === Number(selectedMonth) && year === Number(selectedYear);\r\n    }\r\n    return true;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dados Compilados</h1>\r\n      {loading && <p>Carregando...</p>}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <div>\r\n        <label htmlFor=\"month\">Mês:</label>\r\n        <select id=\"month\" value={selectedMonth} onChange={e => setSelectedMonth(e.target.value)}>\r\n          <option value=\"\">Todos</option>\r\n          {Array.from({ length: 12 }, (_, i) => (\r\n            <option key={i + 1} value={i + 1}>\r\n              {String(i + 1).padStart(2, '0')}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label htmlFor=\"year\">Ano:</label>\r\n        <select id=\"year\" value={selectedYear} onChange={e => setSelectedYear(e.target.value)}>\r\n          <option value=\"\">Todos</option>\r\n          <option value=\"2024\">2024</option>\r\n          <option value=\"2025\">2025</option>\r\n        </select>\r\n      </div>\r\n\r\n      {!loading && !error && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Código</th>\r\n              <th>Produto</th>\r\n              <th>Quantidade Prevista</th>\r\n              <th>Data de Previsão de Entrega</th>\r\n              <th>Semana</th>\r\n              <th>Quantidade Entregue</th>\r\n              <th>Status Entrega</th>\r\n              <th>Quantidade Restante</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredData.map((row, index) => (\r\n              <tr key={index}>\r\n                <td>{row['Codigo']}</td>\r\n                <td>{row['Produto']}</td>\r\n                <td>{row['Quantidade Prevista']}</td>\r\n                <td>{row['Data de Previsão de Entrega']}</td>\r\n                <td>{row['Semana']}</td>\r\n                <td>{row['QuantidadeEntregue']}</td>\r\n                <td>{row['StatusEntrega']}</td>\r\n                <td>{row['QuantidadeRestante']}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}