{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [previsaoData, setPrevisaoData] = useState([]);\n  const [entregaData, setEntregaData] = useState([]);\n  const [combinedData, setCombinedData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filterDate, setFilterDate] = useState('');\n\n  // Função para converter a data no formato DD/MM/YYYY para o formato YYYY-MM-DD\n  const convertDate = dateString => {\n    const [day, month, year] = dateString.split('/');\n    return new Date(`${year}-${month}-${day}`);\n  };\n\n  // Função para calcular a semana do mês\n  const getWeekOfMonth = date => {\n    if (isNaN(date)) {\n      return 0;\n    }\n    const startOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n    const dayOfMonth = date.getDate();\n    return Math.ceil(dayOfMonth / 7);\n  };\n\n  // Função para retornar o nome da semana do mês\n  const getWeekName = weekNumber => {\n    const weeks = ['1ª Semana', '2ª Semana', '3ª Semana', '4ª Semana'];\n    return weeks[weekNumber - 1] || 'Semana Indefinida';\n  };\n\n  // Função para buscar os dados da aba Previsao\n  const fetchPrevisaoData = () => {\n    const previsaoUrl = 'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao';\n    axios.get(previsaoUrl).then(response => {\n      Papa.parse(response.data, {\n        complete: result => {\n          setPrevisaoData(result.data);\n        },\n        header: true\n      });\n    }).catch(error => {\n      console.error(\"Erro ao buscar dados da aba Previsão:\", error);\n      setError(\"Erro ao carregar os dados da aba Previsão.\");\n    });\n  };\n\n  // Função para buscar os dados da aba Entrega\n  const fetchEntregaData = () => {\n    const entregaUrl = 'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega';\n    axios.get(entregaUrl).then(response => {\n      Papa.parse(response.data, {\n        complete: result => {\n          setEntregaData(result.data);\n        },\n        header: true\n      });\n    }).catch(error => {\n      console.error(\"Erro ao buscar dados da aba Entrega:\", error);\n      setError(\"Erro ao carregar os dados da aba Entrega.\");\n    });\n  };\n\n  // Combinar os dados com base no Código do Produto e calcular a quantidade faltante e semana da previsão\n  useEffect(() => {\n    if (previsaoData.length > 0 && entregaData.length > 0) {\n      const combined = previsaoData.map(previsaoItem => {\n        const entregaItem = entregaData.find(item => item['Codigo'] === previsaoItem['Codigo']);\n        const quantidadePrevista = parseFloat(previsaoItem['Quantidade Prevista']) || 0;\n        const quantidadeEntregue = parseFloat(entregaItem ? entregaItem['Quantidade Entregue'] : 0) || 0;\n        const quantidadeFaltante = quantidadePrevista - quantidadeEntregue;\n        const previsaoDate = convertDate(previsaoItem['Data de Previsão de Entrega']);\n        const semanaPrevisao = isNaN(previsaoDate) ? 'Semana Indefinida' : getWeekName(getWeekOfMonth(previsaoDate));\n        return {\n          ...previsaoItem,\n          QuantidadeEntregue: entregaItem ? entregaItem['Quantidade Entregue'] : 'N/A',\n          DataEntregaReal: entregaItem ? entregaItem['Data de Entrega (Real)'] : 'N/A',\n          DataPrevisao: previsaoItem['Data de Previsão de Entrega'],\n          QuantidadeFaltante: quantidadeFaltante,\n          SemanaPrevisao: semanaPrevisao\n        };\n      });\n      setCombinedData(combined);\n      setLoading(false);\n    }\n  }, [previsaoData, entregaData]);\n\n  // Carregar dados inicialmente\n  useEffect(() => {\n    fetchPrevisaoData();\n    fetchEntregaData();\n  }, []);\n\n  // Filtro de data\n  const handleDateChange = e => {\n    setFilterDate(e.target.value);\n    setLoading(true);\n    const filteredData = combinedData.filter(item => {\n      const date = convertDate(item.DataPrevisao);\n      const itemMonth = date.getMonth() + 1;\n      const itemYear = date.getFullYear();\n      const filterDateObj = new Date(e.target.value);\n      const filterMonth = filterDateObj.getMonth() + 1;\n      const filterYear = filterDateObj.getFullYear();\n      return itemMonth === filterMonth && itemYear === filterYear;\n    });\n    setCombinedData(filteredData);\n    setLoading(false);\n  };\n\n  // Função para aplicar a cor com base na quantidade faltante\n  const getColorForQuantity = quantidadeFaltante => {\n    if (quantidadeFaltante > 0) {\n      const red = Math.min(255, quantidadeFaltante * 20); // Quanto maior, mais vermelho\n      return `rgb(${red}, 0, 0)`; // Cor do vermelho\n    } else if (quantidadeFaltante === 0) {\n      return 'rgb(0, 128, 0)'; // Verde\n    } else {\n      const yellow = Math.max(0, Math.min(255, -quantidadeFaltante * 20)); // Quanto mais próximo de zero, mais amarelo\n      return `rgb(${yellow}, ${yellow}, 0)`; // Cor amarela\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Dados de Previs\\xE3o e Entrega\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Selecione uma Data:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"filter-input\",\n          type: \"date\",\n          value: filterDate,\n          onChange: handleDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"C\\xF3digo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Produto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantidade Prevista\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data de Previs\\xE3o de Entrega\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Semana da Previs\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantidade Entregue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantidade Faltante\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data de Entrega Real\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: combinedData.map((row, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: row['Codigo']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row['Produto']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row['Quantidade Prevista']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row['DataPrevisao']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row['SemanaPrevisao']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row['QuantidadeEntregue']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  backgroundColor: getColorForQuantity(row['QuantidadeFaltante'])\n                },\n                children: row['QuantidadeFaltante']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row['DataEntregaReal']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"8\",\n                children: /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gbCe6DnqYER8nyLcpTjNzV7AunI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Papa","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","previsaoData","setPrevisaoData","entregaData","setEntregaData","combinedData","setCombinedData","loading","setLoading","error","setError","filterDate","setFilterDate","convertDate","dateString","day","month","year","split","Date","getWeekOfMonth","date","isNaN","startOfMonth","getFullYear","getMonth","dayOfMonth","getDate","Math","ceil","getWeekName","weekNumber","weeks","fetchPrevisaoData","previsaoUrl","get","then","response","parse","data","complete","result","header","catch","console","fetchEntregaData","entregaUrl","length","combined","map","previsaoItem","entregaItem","find","item","quantidadePrevista","parseFloat","quantidadeEntregue","quantidadeFaltante","previsaoDate","semanaPrevisao","QuantidadeEntregue","DataEntregaReal","DataPrevisao","QuantidadeFaltante","SemanaPrevisao","handleDateChange","e","target","value","filteredData","filter","itemMonth","itemYear","filterDateObj","filterMonth","filterYear","getColorForQuantity","red","min","yellow","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","row","index","style","backgroundColor","colSpan","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [previsaoData, setPrevisaoData] = useState([]);\r\n  const [entregaData, setEntregaData] = useState([]);\r\n  const [combinedData, setCombinedData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [filterDate, setFilterDate] = useState('');\r\n\r\n  // Função para converter a data no formato DD/MM/YYYY para o formato YYYY-MM-DD\r\n  const convertDate = (dateString) => {\r\n    const [day, month, year] = dateString.split('/');\r\n    return new Date(`${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Função para calcular a semana do mês\r\n  const getWeekOfMonth = (date) => {\r\n    if (isNaN(date)) {\r\n      return 0;\r\n    }\r\n    const startOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const dayOfMonth = date.getDate();\r\n    return Math.ceil(dayOfMonth / 7);\r\n  };\r\n\r\n  // Função para retornar o nome da semana do mês\r\n  const getWeekName = (weekNumber) => {\r\n    const weeks = [\r\n      '1ª Semana', '2ª Semana', '3ª Semana', '4ª Semana'\r\n    ];\r\n    return weeks[weekNumber - 1] || 'Semana Indefinida';\r\n  };\r\n\r\n  // Função para buscar os dados da aba Previsao\r\n  const fetchPrevisaoData = () => {\r\n    const previsaoUrl = 'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao';\r\n\r\n    axios.get(previsaoUrl)\r\n      .then(response => {\r\n        Papa.parse(response.data, {\r\n          complete: (result) => {\r\n            setPrevisaoData(result.data);\r\n          },\r\n          header: true\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Erro ao buscar dados da aba Previsão:\", error);\r\n        setError(\"Erro ao carregar os dados da aba Previsão.\");\r\n      });\r\n  };\r\n\r\n  // Função para buscar os dados da aba Entrega\r\n  const fetchEntregaData = () => {\r\n    const entregaUrl = 'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega';\r\n\r\n    axios.get(entregaUrl)\r\n      .then(response => {\r\n        Papa.parse(response.data, {\r\n          complete: (result) => {\r\n            setEntregaData(result.data);\r\n          },\r\n          header: true\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Erro ao buscar dados da aba Entrega:\", error);\r\n        setError(\"Erro ao carregar os dados da aba Entrega.\");\r\n      });\r\n  };\r\n\r\n  // Combinar os dados com base no Código do Produto e calcular a quantidade faltante e semana da previsão\r\n  useEffect(() => {\r\n    if (previsaoData.length > 0 && entregaData.length > 0) {\r\n      const combined = previsaoData.map(previsaoItem => {\r\n        const entregaItem = entregaData.find(item => item['Codigo'] === previsaoItem['Codigo']);\r\n        const quantidadePrevista = parseFloat(previsaoItem['Quantidade Prevista']) || 0;\r\n        const quantidadeEntregue = parseFloat(entregaItem ? entregaItem['Quantidade Entregue'] : 0) || 0;\r\n        const quantidadeFaltante = quantidadePrevista - quantidadeEntregue;\r\n\r\n        const previsaoDate = convertDate(previsaoItem['Data de Previsão de Entrega']);\r\n        const semanaPrevisao = isNaN(previsaoDate) ? 'Semana Indefinida' : getWeekName(getWeekOfMonth(previsaoDate));\r\n\r\n        return {\r\n          ...previsaoItem,\r\n          QuantidadeEntregue: entregaItem ? entregaItem['Quantidade Entregue'] : 'N/A',\r\n          DataEntregaReal: entregaItem ? entregaItem['Data de Entrega (Real)'] : 'N/A',\r\n          DataPrevisao: previsaoItem['Data de Previsão de Entrega'],\r\n          QuantidadeFaltante: quantidadeFaltante,\r\n          SemanaPrevisao: semanaPrevisao\r\n        };\r\n      });\r\n      setCombinedData(combined);\r\n      setLoading(false);\r\n    }\r\n  }, [previsaoData, entregaData]);\r\n\r\n  // Carregar dados inicialmente\r\n  useEffect(() => {\r\n    fetchPrevisaoData();\r\n    fetchEntregaData();\r\n  }, []);\r\n\r\n  // Filtro de data\r\n  const handleDateChange = (e) => {\r\n    setFilterDate(e.target.value);\r\n    setLoading(true);\r\n    const filteredData = combinedData.filter(item => {\r\n      const date = convertDate(item.DataPrevisao);\r\n      const itemMonth = date.getMonth() + 1;\r\n      const itemYear = date.getFullYear();\r\n\r\n      const filterDateObj = new Date(e.target.value);\r\n      const filterMonth = filterDateObj.getMonth() + 1;\r\n      const filterYear = filterDateObj.getFullYear();\r\n\r\n      return itemMonth === filterMonth && itemYear === filterYear;\r\n    });\r\n    setCombinedData(filteredData);\r\n    setLoading(false);\r\n  };\r\n\r\n  // Função para aplicar a cor com base na quantidade faltante\r\n  const getColorForQuantity = (quantidadeFaltante) => {\r\n    if (quantidadeFaltante > 0) {\r\n      const red = Math.min(255, quantidadeFaltante * 20); // Quanto maior, mais vermelho\r\n      return `rgb(${red}, 0, 0)`; // Cor do vermelho\r\n    } else if (quantidadeFaltante === 0) {\r\n      return 'rgb(0, 128, 0)'; // Verde\r\n    } else {\r\n      const yellow = Math.max(0, Math.min(255, -quantidadeFaltante * 20)); // Quanto mais próximo de zero, mais amarelo\r\n      return `rgb(${yellow}, ${yellow}, 0)`; // Cor amarela\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1 className=\"title\">Dados de Previsão e Entrega</h1>\r\n\r\n      <div className=\"filter-container\">\r\n        <label>\r\n          Selecione uma Data:\r\n          <input\r\n            className=\"filter-input\"\r\n            type=\"date\"\r\n            value={filterDate}\r\n            onChange={handleDateChange}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {loading && <p>Carregando...</p>}\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {!loading && !error && (\r\n        <div className=\"table-container\">\r\n          <table className=\"data-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Código</th>\r\n                <th>Produto</th>\r\n                <th>Quantidade Prevista</th>\r\n                <th>Data de Previsão de Entrega</th>\r\n                <th>Semana da Previsão</th>\r\n                <th>Quantidade Entregue</th>\r\n                <th>Quantidade Faltante</th>\r\n                <th>Data de Entrega Real</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {combinedData.map((row, index) => (\r\n                <>\r\n                  <tr key={index}>\r\n                    <td>{row['Codigo']}</td>\r\n                    <td>{row['Produto']}</td>\r\n                    <td>{row['Quantidade Prevista']}</td>\r\n                    <td>{row['DataPrevisao']}</td>\r\n                    <td>{row['SemanaPrevisao']}</td>\r\n                    <td>{row['QuantidadeEntregue']}</td>\r\n                    <td style={{ backgroundColor: getColorForQuantity(row['QuantidadeFaltante']) }}>\r\n                      {row['QuantidadeFaltante']}\r\n                    </td>\r\n                    <td>{row['DataEntregaReal']}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"8\"><hr /></td>\r\n                  </tr>\r\n                </>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}