{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosSource = axios.CancelToken.source();\nconst App = () => {\n  _s();\n  const [previsaoData, setPrevisaoData] = useState([]);\n  const [entregaData, setEntregaData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias'); // Filtro de período\n  const [dataInicio, setDataInicio] = useState(''); // Data inicial para intervalo customizado\n  const [dataFim, setDataFim] = useState(''); // Data final para intervalo customizado\n  const [produtoFiltro, setProdutoFiltro] = useState(''); // Filtro por nome do produto\n\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\n  const parseDate = dateString => {\n    if (!dateString) return null;\n    const [day, month, year] = dateString.split('/');\n    return new Date(`${year}-${month}-${day}`);\n  };\n\n  // Função genérica para buscar dados de uma planilha\n  const fetchSheetData = async (url, setData) => {\n    try {\n      const response = await axios.get(url, {\n        cancelToken: axiosSource.token\n      });\n      return new Promise((resolve, reject) => {\n        Papa.parse(response.data, {\n          header: true,\n          skipEmptyLines: true,\n          dynamicTyping: true,\n          complete: result => {\n            setData(result.data);\n            resolve();\n          },\n          error: error => reject(error)\n        });\n      });\n    } catch (error) {\n      if (!axios.isCancel(error)) {\n        throw error;\n      }\n    }\n  };\n\n  // Função para calcular a semana do mês\n  const getWeekOfMonth = dateString => {\n    const date = parseDate(dateString);\n    if (!date || isNaN(date)) return 'Data inválida';\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const dayOfMonth = date.getDate();\n    const adjustedDate = dayOfMonth + firstDay.getDay() - 1;\n    return Math.ceil(adjustedDate / 7);\n  };\n\n  // Combinar os dados das abas Previsão e Entrega\n  const combinedData = useMemo(() => {\n    if (!previsaoData.length || !entregaData.length) return [];\n    return previsaoData.map(previsaoItem => {\n      const entregas = entregaData.filter(item => item.Codigo === previsaoItem.Codigo && item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']);\n      const quantidadeEntregue = entregas.reduce((acc, curr) => acc + (curr['Quantidade Entregue'] || 0), 0);\n      const quantidadeFaltante = Math.max((previsaoItem['Quantidade Prevista'] || 0) - quantidadeEntregue, 0);\n      return {\n        ...previsaoItem,\n        QuantidadeEntregue: quantidadeEntregue,\n        QuantidadeFaltante: quantidadeFaltante,\n        SemanaPrevisao: `${getWeekOfMonth(previsaoItem['Data de Previsão de Entrega'])}ª Semana`\n      };\n    });\n  }, [previsaoData, entregaData]);\n\n  // Lista de produtos únicos para o filtro\n  const produtosUnicos = useMemo(() => {\n    const produtos = combinedData.map(item => item.Produto);\n    return [...new Set(produtos)]; // Remove duplicatas\n  }, [combinedData]);\n\n  // Função para aplicar os filtros\n  const dadosFiltrados = useMemo(() => {\n    if (!combinedData.length) return [];\n    let filtrados = combinedData;\n\n    // Filtro por período\n    const hoje = new Date();\n    switch (periodoFiltro) {\n      case '30_dias':\n        const trintaDiasAtras = new Date();\n        trintaDiasAtras.setDate(hoje.getDate() - 30);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= trintaDiasAtras && dataPrevisao <= hoje;\n        });\n        break;\n      case 'mes_passado':\n        const primeiroDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth() - 1, 1);\n        const ultimoDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth(), 0);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= primeiroDiaMesPassado && dataPrevisao <= ultimoDiaMesPassado;\n        });\n        break;\n      case 'mes_atual':\n        const primeiroDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth(), 1);\n        const ultimoDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= primeiroDiaMesAtual && dataPrevisao <= ultimoDiaMesAtual;\n        });\n        break;\n      case 'customizado':\n        if (dataInicio && dataFim) {\n          const inicio = new Date(dataInicio);\n          const fim = new Date(dataFim);\n          filtrados = filtrados.filter(item => {\n            const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n            return dataPrevisao >= inicio && dataPrevisao <= fim;\n          });\n        }\n        break;\n      default:\n        break;\n    }\n\n    // Filtro por nome do produto\n    if (produtoFiltro) {\n      filtrados = filtrados.filter(item => item.Produto === produtoFiltro);\n    }\n    return filtrados;\n  }, [combinedData, periodoFiltro, dataInicio, dataFim, produtoFiltro]);\n\n  // Carregar dados ao montar o componente\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setError(null);\n        setLoading(true);\n        await Promise.all([fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao', setPrevisaoData), fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega', setEntregaData)]);\n      } catch (error) {\n        console.error('Erro ao carregar dados:', error);\n        setError('Erro ao carregar dados. Tente recarregar a página.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n    return () => axiosSource.cancel('Componente desmontado');\n  }, []);\n\n  // Agregar as somas por produto\n  const aggregatedData = useMemo(() => {\n    const aggregation = combinedData.reduce((acc, item) => {\n      const existing = acc[item.Produto] || {\n        QuantidadePrevista: 0,\n        QuantidadeEntregue: 0\n      };\n      existing.QuantidadePrevista += item['Quantidade Prevista'] || 0;\n      existing.QuantidadeEntregue += item.QuantidadeEntregue || 0;\n      acc[item.Produto] = existing;\n      return acc;\n    }, {});\n    return Object.keys(aggregation).map(produto => ({\n      Produto: produto,\n      QuantidadePrevista: aggregation[produto].QuantidadePrevista,\n      QuantidadeEntregue: aggregation[produto].QuantidadeEntregue\n    }));\n  }, [combinedData]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dados Compilados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"P\\xE1gina Principal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/produtos\",\n              children: \"Soma por Produto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filtros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading\",\n              children: \"Carregando...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 27\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/produtos\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Soma por Produto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"data-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Produto\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Quantidade Prevista\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Quantidade Entregue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: aggregatedData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: row.Produto\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: row.QuantidadePrevista\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: row.QuantidadeEntregue\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"PsByEMTR+nfS1iQRIFdNOsMvtyQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","BrowserRouter","Router","Route","Switch","Link","axios","Papa","jsxDEV","_jsxDEV","axiosSource","CancelToken","source","App","_s","previsaoData","setPrevisaoData","entregaData","setEntregaData","loading","setLoading","error","setError","periodoFiltro","setPeriodoFiltro","dataInicio","setDataInicio","dataFim","setDataFim","produtoFiltro","setProdutoFiltro","parseDate","dateString","day","month","year","split","Date","fetchSheetData","url","setData","response","get","cancelToken","token","Promise","resolve","reject","parse","data","header","skipEmptyLines","dynamicTyping","complete","result","isCancel","getWeekOfMonth","date","isNaN","firstDay","getFullYear","getMonth","dayOfMonth","getDate","adjustedDate","getDay","Math","ceil","combinedData","length","map","previsaoItem","entregas","filter","item","Codigo","quantidadeEntregue","reduce","acc","curr","quantidadeFaltante","max","QuantidadeEntregue","QuantidadeFaltante","SemanaPrevisao","produtosUnicos","produtos","Produto","Set","dadosFiltrados","filtrados","hoje","trintaDiasAtras","setDate","dataPrevisao","primeiroDiaMesPassado","ultimoDiaMesPassado","primeiroDiaMesAtual","ultimoDiaMesAtual","inicio","fim","fetchData","all","console","cancel","aggregatedData","aggregation","existing","QuantidadePrevista","Object","keys","produto","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","exact","path","row","index","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/App.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\nimport './App.css';\r\n\r\nconst axiosSource = axios.CancelToken.source();\r\n\r\nconst App = () => {\r\n  const [previsaoData, setPrevisaoData] = useState([]);\r\n  const [entregaData, setEntregaData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias'); // Filtro de período\r\n  const [dataInicio, setDataInicio] = useState(''); // Data inicial para intervalo customizado\r\n  const [dataFim, setDataFim] = useState(''); // Data final para intervalo customizado\r\n  const [produtoFiltro, setProdutoFiltro] = useState(''); // Filtro por nome do produto\r\n\r\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n\r\n    const [day, month, year] = dateString.split('/');\r\n    return new Date(`${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Função genérica para buscar dados de uma planilha\r\n  const fetchSheetData = async (url, setData) => {\r\n    try {\r\n      const response = await axios.get(url, {\r\n        cancelToken: axiosSource.token,\r\n      });\r\n\r\n      return new Promise((resolve, reject) => {\r\n        Papa.parse(response.data, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          dynamicTyping: true,\r\n          complete: (result) => {\r\n            setData(result.data);\r\n            resolve();\r\n          },\r\n          error: (error) => reject(error),\r\n        });\r\n      });\r\n    } catch (error) {\r\n      if (!axios.isCancel(error)) {\r\n        throw error;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Função para calcular a semana do mês\r\n  const getWeekOfMonth = (dateString) => {\r\n    const date = parseDate(dateString);\r\n    if (!date || isNaN(date)) return 'Data inválida';\r\n\r\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const dayOfMonth = date.getDate();\r\n    const adjustedDate = dayOfMonth + firstDay.getDay() - 1;\r\n    return Math.ceil(adjustedDate / 7);\r\n  };\r\n\r\n  // Combinar os dados das abas Previsão e Entrega\r\n  const combinedData = useMemo(() => {\r\n    if (!previsaoData.length || !entregaData.length) return [];\r\n\r\n    return previsaoData.map((previsaoItem) => {\r\n      const entregas = entregaData.filter(\r\n        (item) =>\r\n          item.Codigo === previsaoItem.Codigo &&\r\n          item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']\r\n      );\r\n\r\n      const quantidadeEntregue = entregas.reduce(\r\n        (acc, curr) => acc + (curr['Quantidade Entregue'] || 0),\r\n        0\r\n      );\r\n\r\n      const quantidadeFaltante = Math.max(\r\n        (previsaoItem['Quantidade Prevista'] || 0) - quantidadeEntregue,\r\n        0\r\n      );\r\n\r\n      return {\r\n        ...previsaoItem,\r\n        QuantidadeEntregue: quantidadeEntregue,\r\n        QuantidadeFaltante: quantidadeFaltante,\r\n        SemanaPrevisao: `${getWeekOfMonth(previsaoItem['Data de Previsão de Entrega'])}ª Semana`,\r\n      };\r\n    });\r\n  }, [previsaoData, entregaData]);\r\n\r\n  // Lista de produtos únicos para o filtro\r\n  const produtosUnicos = useMemo(() => {\r\n    const produtos = combinedData.map((item) => item.Produto);\r\n    return [...new Set(produtos)]; // Remove duplicatas\r\n  }, [combinedData]);\r\n\r\n  // Função para aplicar os filtros\r\n  const dadosFiltrados = useMemo(() => {\r\n    if (!combinedData.length) return [];\r\n\r\n    let filtrados = combinedData;\r\n\r\n    // Filtro por período\r\n    const hoje = new Date();\r\n    switch (periodoFiltro) {\r\n      case '30_dias':\r\n        const trintaDiasAtras = new Date();\r\n        trintaDiasAtras.setDate(hoje.getDate() - 30);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= trintaDiasAtras && dataPrevisao <= hoje;\r\n        });\r\n        break;\r\n\r\n      case 'mes_passado':\r\n        const primeiroDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth() - 1, 1);\r\n        const ultimoDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth(), 0);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= primeiroDiaMesPassado && dataPrevisao <= ultimoDiaMesPassado;\r\n        });\r\n        break;\r\n\r\n      case 'mes_atual':\r\n        const primeiroDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth(), 1);\r\n        const ultimoDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= primeiroDiaMesAtual && dataPrevisao <= ultimoDiaMesAtual;\r\n        });\r\n        break;\r\n\r\n      case 'customizado':\r\n        if (dataInicio && dataFim) {\r\n          const inicio = new Date(dataInicio);\r\n          const fim = new Date(dataFim);\r\n          filtrados = filtrados.filter((item) => {\r\n            const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n            return dataPrevisao >= inicio && dataPrevisao <= fim;\r\n          });\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Filtro por nome do produto\r\n    if (produtoFiltro) {\r\n      filtrados = filtrados.filter((item) => item.Produto === produtoFiltro);\r\n    }\r\n\r\n    return filtrados;\r\n  }, [combinedData, periodoFiltro, dataInicio, dataFim, produtoFiltro]);\r\n\r\n  // Carregar dados ao montar o componente\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setError(null);\r\n        setLoading(true);\r\n\r\n        await Promise.all([\r\n          fetchSheetData(\r\n            'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao',\r\n            setPrevisaoData\r\n          ),\r\n          fetchSheetData(\r\n            'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega',\r\n            setEntregaData\r\n          ),\r\n        ]);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar dados:', error);\r\n        setError('Erro ao carregar dados. Tente recarregar a página.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    return () => axiosSource.cancel('Componente desmontado');\r\n  }, []);\r\n\r\n  // Agregar as somas por produto\r\n  const aggregatedData = useMemo(() => {\r\n    const aggregation = combinedData.reduce((acc, item) => {\r\n      const existing = acc[item.Produto] || { QuantidadePrevista: 0, QuantidadeEntregue: 0 };\r\n\r\n      existing.QuantidadePrevista += item['Quantidade Prevista'] || 0;\r\n      existing.QuantidadeEntregue += item.QuantidadeEntregue || 0;\r\n\r\n      acc[item.Produto] = existing;\r\n      return acc;\r\n    }, {});\r\n\r\n    return Object.keys(aggregation).map((produto) => ({\r\n      Produto: produto,\r\n      QuantidadePrevista: aggregation[produto].QuantidadePrevista,\r\n      QuantidadeEntregue: aggregation[produto].QuantidadeEntregue,\r\n    }));\r\n  }, [combinedData]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <h1>Dados Compilados</h1>\r\n\r\n        {/* Menu de navegação */}\r\n        <nav>\r\n          <ul>\r\n            <li><Link to=\"/\">Página Principal</Link></li>\r\n            <li><Link to=\"/produtos\">Soma por Produto</Link></li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {/* Página principal */}\r\n            <div>\r\n              <div className=\"filtros\">\r\n                {/* Filtros da página principal */}\r\n                {/* Aqui os filtros já estão implementados */}\r\n              </div>\r\n\r\n              {loading && <div className=\"loading\">Carregando...</div>}\r\n              {error && <div className=\"error\">{error}</div>}\r\n\r\n              {/* Tabela de dados filtrados */}\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/produtos\">\r\n            {/* Página de somas por produto */}\r\n            <div>\r\n              <h2>Soma por Produto</h2>\r\n              <table className=\"data-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Produto</th>\r\n                    <th>Quantidade Prevista</th>\r\n                    <th>Quantidade Entregue</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {aggregatedData.map((row, index) => (\r\n                    <tr key={index}>\r\n                      <td>{row.Produto}</td>\r\n                      <td>{row.QuantidadePrevista}</td>\r\n                      <td>{row.QuantidadeEntregue}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,WAAW,GAAGJ,KAAK,CAACK,WAAW,CAACC,MAAM,CAAC,CAAC;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExD;EACA,MAAM+B,SAAS,GAAIC,UAAU,IAAK;IAChC,IAAI,CAACA,UAAU,EAAE,OAAO,IAAI;IAE5B,MAAM,CAACC,GAAG,EAAEC,KAAK,EAAEC,IAAI,CAAC,GAAGH,UAAU,CAACI,KAAK,CAAC,GAAG,CAAC;IAChD,OAAO,IAAIC,IAAI,CAAC,GAAGF,IAAI,IAAID,KAAK,IAAID,GAAG,EAAE,CAAC;EAC5C,CAAC;;EAED;EACA,MAAMK,cAAc,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,KAAK;IAC7C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnC,KAAK,CAACoC,GAAG,CAACH,GAAG,EAAE;QACpCI,WAAW,EAAEjC,WAAW,CAACkC;MAC3B,CAAC,CAAC;MAEF,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtCxC,IAAI,CAACyC,KAAK,CAACP,QAAQ,CAACQ,IAAI,EAAE;UACxBC,MAAM,EAAE,IAAI;UACZC,cAAc,EAAE,IAAI;UACpBC,aAAa,EAAE,IAAI;UACnBC,QAAQ,EAAGC,MAAM,IAAK;YACpBd,OAAO,CAACc,MAAM,CAACL,IAAI,CAAC;YACpBH,OAAO,CAAC,CAAC;UACX,CAAC;UACDzB,KAAK,EAAGA,KAAK,IAAK0B,MAAM,CAAC1B,KAAK;QAChC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACd,IAAI,CAACf,KAAK,CAACiD,QAAQ,CAAClC,KAAK,CAAC,EAAE;QAC1B,MAAMA,KAAK;MACb;IACF;EACF,CAAC;;EAED;EACA,MAAMmC,cAAc,GAAIxB,UAAU,IAAK;IACrC,MAAMyB,IAAI,GAAG1B,SAAS,CAACC,UAAU,CAAC;IAClC,IAAI,CAACyB,IAAI,IAAIC,KAAK,CAACD,IAAI,CAAC,EAAE,OAAO,eAAe;IAEhD,MAAME,QAAQ,GAAG,IAAItB,IAAI,CAACoB,IAAI,CAACG,WAAW,CAAC,CAAC,EAAEH,IAAI,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACjE,MAAMC,UAAU,GAAGL,IAAI,CAACM,OAAO,CAAC,CAAC;IACjC,MAAMC,YAAY,GAAGF,UAAU,GAAGH,QAAQ,CAACM,MAAM,CAAC,CAAC,GAAG,CAAC;IACvD,OAAOC,IAAI,CAACC,IAAI,CAACH,YAAY,GAAG,CAAC,CAAC;EACpC,CAAC;;EAED;EACA,MAAMI,YAAY,GAAGrE,OAAO,CAAC,MAAM;IACjC,IAAI,CAACgB,YAAY,CAACsD,MAAM,IAAI,CAACpD,WAAW,CAACoD,MAAM,EAAE,OAAO,EAAE;IAE1D,OAAOtD,YAAY,CAACuD,GAAG,CAAEC,YAAY,IAAK;MACxC,MAAMC,QAAQ,GAAGvD,WAAW,CAACwD,MAAM,CAChCC,IAAI,IACHA,IAAI,CAACC,MAAM,KAAKJ,YAAY,CAACI,MAAM,IACnCD,IAAI,CAAC,4BAA4B,CAAC,KAAKH,YAAY,CAAC,6BAA6B,CACrF,CAAC;MAED,MAAMK,kBAAkB,GAAGJ,QAAQ,CAACK,MAAM,CACxC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,IAAIC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,EACvD,CACF,CAAC;MAED,MAAMC,kBAAkB,GAAGd,IAAI,CAACe,GAAG,CACjC,CAACV,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAIK,kBAAkB,EAC/D,CACF,CAAC;MAED,OAAO;QACL,GAAGL,YAAY;QACfW,kBAAkB,EAAEN,kBAAkB;QACtCO,kBAAkB,EAAEH,kBAAkB;QACtCI,cAAc,EAAE,GAAG5B,cAAc,CAACe,YAAY,CAAC,6BAA6B,CAAC,CAAC;MAChF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,CAACxD,YAAY,EAAEE,WAAW,CAAC,CAAC;;EAE/B;EACA,MAAMoE,cAAc,GAAGtF,OAAO,CAAC,MAAM;IACnC,MAAMuF,QAAQ,GAAGlB,YAAY,CAACE,GAAG,CAAEI,IAAI,IAAKA,IAAI,CAACa,OAAO,CAAC;IACzD,OAAO,CAAC,GAAG,IAAIC,GAAG,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC,EAAE,CAAClB,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMqB,cAAc,GAAG1F,OAAO,CAAC,MAAM;IACnC,IAAI,CAACqE,YAAY,CAACC,MAAM,EAAE,OAAO,EAAE;IAEnC,IAAIqB,SAAS,GAAGtB,YAAY;;IAE5B;IACA,MAAMuB,IAAI,GAAG,IAAItD,IAAI,CAAC,CAAC;IACvB,QAAQd,aAAa;MACnB,KAAK,SAAS;QACZ,MAAMqE,eAAe,GAAG,IAAIvD,IAAI,CAAC,CAAC;QAClCuD,eAAe,CAACC,OAAO,CAACF,IAAI,CAAC5B,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;QAC5C2B,SAAS,GAAGA,SAAS,CAACjB,MAAM,CAAEC,IAAI,IAAK;UACrC,MAAMoB,YAAY,GAAG/D,SAAS,CAAC2C,IAAI,CAAC,6BAA6B,CAAC,CAAC;UACnE,OAAOoB,YAAY,IAAIF,eAAe,IAAIE,YAAY,IAAIH,IAAI;QAChE,CAAC,CAAC;QACF;MAEF,KAAK,aAAa;QAChB,MAAMI,qBAAqB,GAAG,IAAI1D,IAAI,CAACsD,IAAI,CAAC/B,WAAW,CAAC,CAAC,EAAE+B,IAAI,CAAC9B,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAClF,MAAMmC,mBAAmB,GAAG,IAAI3D,IAAI,CAACsD,IAAI,CAAC/B,WAAW,CAAC,CAAC,EAAE+B,IAAI,CAAC9B,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;QAC5E6B,SAAS,GAAGA,SAAS,CAACjB,MAAM,CAAEC,IAAI,IAAK;UACrC,MAAMoB,YAAY,GAAG/D,SAAS,CAAC2C,IAAI,CAAC,6BAA6B,CAAC,CAAC;UACnE,OAAOoB,YAAY,IAAIC,qBAAqB,IAAID,YAAY,IAAIE,mBAAmB;QACrF,CAAC,CAAC;QACF;MAEF,KAAK,WAAW;QACd,MAAMC,mBAAmB,GAAG,IAAI5D,IAAI,CAACsD,IAAI,CAAC/B,WAAW,CAAC,CAAC,EAAE+B,IAAI,CAAC9B,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;QAC5E,MAAMqC,iBAAiB,GAAG,IAAI7D,IAAI,CAACsD,IAAI,CAAC/B,WAAW,CAAC,CAAC,EAAE+B,IAAI,CAAC9B,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC9E6B,SAAS,GAAGA,SAAS,CAACjB,MAAM,CAAEC,IAAI,IAAK;UACrC,MAAMoB,YAAY,GAAG/D,SAAS,CAAC2C,IAAI,CAAC,6BAA6B,CAAC,CAAC;UACnE,OAAOoB,YAAY,IAAIG,mBAAmB,IAAIH,YAAY,IAAII,iBAAiB;QACjF,CAAC,CAAC;QACF;MAEF,KAAK,aAAa;QAChB,IAAIzE,UAAU,IAAIE,OAAO,EAAE;UACzB,MAAMwE,MAAM,GAAG,IAAI9D,IAAI,CAACZ,UAAU,CAAC;UACnC,MAAM2E,GAAG,GAAG,IAAI/D,IAAI,CAACV,OAAO,CAAC;UAC7B+D,SAAS,GAAGA,SAAS,CAACjB,MAAM,CAAEC,IAAI,IAAK;YACrC,MAAMoB,YAAY,GAAG/D,SAAS,CAAC2C,IAAI,CAAC,6BAA6B,CAAC,CAAC;YACnE,OAAOoB,YAAY,IAAIK,MAAM,IAAIL,YAAY,IAAIM,GAAG;UACtD,CAAC,CAAC;QACJ;QACA;MAEF;QACE;IACJ;;IAEA;IACA,IAAIvE,aAAa,EAAE;MACjB6D,SAAS,GAAGA,SAAS,CAACjB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACa,OAAO,KAAK1D,aAAa,CAAC;IACxE;IAEA,OAAO6D,SAAS;EAClB,CAAC,EAAE,CAACtB,YAAY,EAAE7C,aAAa,EAAEE,UAAU,EAAEE,OAAO,EAAEE,aAAa,CAAC,CAAC;;EAErE;EACA/B,SAAS,CAAC,MAAM;IACd,MAAMuG,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF/E,QAAQ,CAAC,IAAI,CAAC;QACdF,UAAU,CAAC,IAAI,CAAC;QAEhB,MAAMyB,OAAO,CAACyD,GAAG,CAAC,CAChBhE,cAAc,CACZ,wHAAwH,EACxHtB,eACF,CAAC,EACDsB,cAAc,CACZ,uHAAuH,EACvHpB,cACF,CAAC,CACF,CAAC;MACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdkF,OAAO,CAAClF,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CC,QAAQ,CAAC,oDAAoD,CAAC;MAChE,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDiF,SAAS,CAAC,CAAC;IAEX,OAAO,MAAM3F,WAAW,CAAC8F,MAAM,CAAC,uBAAuB,CAAC;EAC1D,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,cAAc,GAAG1G,OAAO,CAAC,MAAM;IACnC,MAAM2G,WAAW,GAAGtC,YAAY,CAACS,MAAM,CAAC,CAACC,GAAG,EAAEJ,IAAI,KAAK;MACrD,MAAMiC,QAAQ,GAAG7B,GAAG,CAACJ,IAAI,CAACa,OAAO,CAAC,IAAI;QAAEqB,kBAAkB,EAAE,CAAC;QAAE1B,kBAAkB,EAAE;MAAE,CAAC;MAEtFyB,QAAQ,CAACC,kBAAkB,IAAIlC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC;MAC/DiC,QAAQ,CAACzB,kBAAkB,IAAIR,IAAI,CAACQ,kBAAkB,IAAI,CAAC;MAE3DJ,GAAG,CAACJ,IAAI,CAACa,OAAO,CAAC,GAAGoB,QAAQ;MAC5B,OAAO7B,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,OAAO+B,MAAM,CAACC,IAAI,CAACJ,WAAW,CAAC,CAACpC,GAAG,CAAEyC,OAAO,KAAM;MAChDxB,OAAO,EAAEwB,OAAO;MAChBH,kBAAkB,EAAEF,WAAW,CAACK,OAAO,CAAC,CAACH,kBAAkB;MAC3D1B,kBAAkB,EAAEwB,WAAW,CAACK,OAAO,CAAC,CAAC7B;IAC3C,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACd,YAAY,CAAC,CAAC;EAElB,oBACE3D,OAAA,CAACP,MAAM;IAAA8G,QAAA,eACLvG,OAAA;MAAKwG,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBvG,OAAA;QAAAuG,QAAA,EAAI;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGzB5G,OAAA;QAAAuG,QAAA,eACEvG,OAAA;UAAAuG,QAAA,gBACEvG,OAAA;YAAAuG,QAAA,eAAIvG,OAAA,CAACJ,IAAI;cAACiH,EAAE,EAAC,GAAG;cAAAN,QAAA,EAAC;YAAgB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7C5G,OAAA;YAAAuG,QAAA,eAAIvG,OAAA,CAACJ,IAAI;cAACiH,EAAE,EAAC,WAAW;cAAAN,QAAA,EAAC;YAAgB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAEN5G,OAAA,CAACL,MAAM;QAAA4G,QAAA,gBACLvG,OAAA,CAACN,KAAK;UAACoH,KAAK;UAACC,IAAI,EAAC,GAAG;UAAAR,QAAA,eAEnBvG,OAAA;YAAAuG,QAAA,gBACEvG,OAAA;cAAKwG,SAAS,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGnB,CAAC,EAELlG,OAAO,iBAAIV,OAAA;cAAKwG,SAAS,EAAC,SAAS;cAAAD,QAAA,EAAC;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACvDhG,KAAK,iBAAIZ,OAAA;cAAKwG,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAE3F;YAAK;cAAA6F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAG3C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAER5G,OAAA,CAACN,KAAK;UAACqH,IAAI,EAAC,WAAW;UAAAR,QAAA,eAErBvG,OAAA;YAAAuG,QAAA,gBACEvG,OAAA;cAAAuG,QAAA,EAAI;YAAgB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzB5G,OAAA;cAAOwG,SAAS,EAAC,YAAY;cAAAD,QAAA,gBAC3BvG,OAAA;gBAAAuG,QAAA,eACEvG,OAAA;kBAAAuG,QAAA,gBACEvG,OAAA;oBAAAuG,QAAA,EAAI;kBAAO;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAChB5G,OAAA;oBAAAuG,QAAA,EAAI;kBAAmB;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAC5B5G,OAAA;oBAAAuG,QAAA,EAAI;kBAAmB;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1B;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACR5G,OAAA;gBAAAuG,QAAA,EACGP,cAAc,CAACnC,GAAG,CAAC,CAACmD,GAAG,EAAEC,KAAK,kBAC7BjH,OAAA;kBAAAuG,QAAA,gBACEvG,OAAA;oBAAAuG,QAAA,EAAKS,GAAG,CAAClC;kBAAO;oBAAA2B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACtB5G,OAAA;oBAAAuG,QAAA,EAAKS,GAAG,CAACb;kBAAkB;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACjC5G,OAAA;oBAAAuG,QAAA,EAAKS,GAAG,CAACvC;kBAAkB;oBAAAgC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA,GAH1BK,KAAK;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAIV,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACvG,EAAA,CAhQID,GAAG;AAAA8G,EAAA,GAAH9G,GAAG;AAkQT,eAAeA,GAAG;AAAC,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}