{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport Papa from 'papaparse';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Bar } from 'react-chartjs-2'; // Importa o componente de gráfico\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Tooltip, Legend } from 'chart.js';\nimport './App.css';\n\n// Registra os componentes necessários do Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, Legend);\nconst Home = () => {\n  _s();\n  const [previsaoData, setPrevisaoData] = useState([]);\n  const [entregaData, setEntregaData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias');\n  const [dataInicio, setDataInicio] = useState('');\n  const [dataFim, setDataFim] = useState('');\n  const [produtoFiltro, setProdutoFiltro] = useState('');\n  const navigate = useNavigate();\n\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\n  const parseDate = dateString => {\n    if (!dateString) return null;\n    const [day, month, year] = dateString.split('/');\n    return new Date(`${year}-${month}-${day}`);\n  };\n\n  // Função genérica para buscar dados de uma planilha\n  const fetchSheetData = async (url, setData) => {\n    try {\n      const response = await axios.get(url);\n      return new Promise((resolve, reject) => {\n        Papa.parse(response.data, {\n          header: true,\n          skipEmptyLines: true,\n          dynamicTyping: true,\n          complete: result => {\n            if (result.data && result.data.length > 0) {\n              setData(result.data);\n              resolve();\n            } else {\n              reject(new Error('Dados não encontrados na planilha.'));\n            }\n          },\n          error: error => {\n            console.error('Erro ao processar CSV:', error);\n            reject(error);\n          }\n        });\n      });\n    } catch (error) {\n      if (!axios.isCancel(error)) {\n        throw error;\n      }\n    }\n  };\n\n  // Função para calcular a semana do mês\n  const getWeekOfMonth = dateString => {\n    const date = parseDate(dateString);\n    if (!date || isNaN(date)) return 'Data inválida';\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const dayOfMonth = date.getDate();\n    const adjustedDate = dayOfMonth + firstDay.getDay() - 1;\n    return `${Math.ceil(adjustedDate / 7)}ª Semana`;\n  };\n\n  // Combinar os dados das abas Previsão e Entrega\n  const combinedData = useMemo(() => {\n    if (!previsaoData.length || !entregaData.length) return [];\n    return previsaoData.map(previsaoItem => {\n      const entregas = entregaData.filter(item => item.Codigo === previsaoItem.Codigo && item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']);\n      const quantidadeEntregue = entregas.reduce((acc, curr) => acc + (curr['Quantidade Entregue'] || 0), 0);\n      const diferenca = (quantidadeEntregue || 0) - (previsaoItem['Quantidade Prevista'] || 0);\n      return {\n        ...previsaoItem,\n        QuantidadeEntregue: quantidadeEntregue,\n        Diferenca: diferenca,\n        // Armazena a diferença (positiva ou negativa)\n        SemanaPrevisao: getWeekOfMonth(previsaoItem['Data de Previsão de Entrega'])\n      };\n    });\n  }, [previsaoData, entregaData]);\n\n  // Lista de produtos únicos para o filtro\n  const produtosUnicos = useMemo(() => {\n    const produtos = combinedData.map(item => item.Produto);\n    return [...new Set(produtos)];\n  }, [combinedData]);\n\n  // Função para aplicar os filtros\n  const dadosFiltrados = useMemo(() => {\n    if (!combinedData.length) return [];\n    let filtrados = combinedData;\n\n    // Filtro por período\n    const hoje = new Date();\n    switch (periodoFiltro) {\n      case '30_dias':\n        const trintaDiasAtras = new Date();\n        trintaDiasAtras.setDate(hoje.getDate() - 30);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= trintaDiasAtras && dataPrevisao <= hoje;\n        });\n        break;\n      case 'mes_passado':\n        const primeiroDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth() - 1, 1);\n        const ultimoDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth(), 0);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= primeiroDiaMesPassado && dataPrevisao <= ultimoDiaMesPassado;\n        });\n        break;\n      case 'mes_atual':\n        const primeiroDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth(), 1);\n        const ultimoDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= primeiroDiaMesAtual && dataPrevisao <= ultimoDiaMesAtual;\n        });\n        break;\n      case 'customizado':\n        if (dataInicio && dataFim) {\n          const inicio = new Date(dataInicio);\n          const fim = new Date(dataFim);\n          filtrados = filtrados.filter(item => {\n            const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n            return dataPrevisao >= inicio && dataPrevisao <= fim;\n          });\n        }\n        break;\n      default:\n        break;\n    }\n\n    // Filtro por nome do produto\n    if (produtoFiltro) {\n      filtrados = filtrados.filter(item => item.Produto === produtoFiltro);\n    }\n    return filtrados;\n  }, [combinedData, periodoFiltro, dataInicio, dataFim, produtoFiltro]);\n\n  // Função para recarregar os dados\n  const reloadData = async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      await Promise.all([fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao', setPrevisaoData), fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega', setEntregaData)]);\n    } catch (error) {\n      console.error('Erro ao carregar dados:', error);\n      setError('Erro ao carregar dados. Verifique os links ou tente novamente mais tarde.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Carregar dados ao montar o componente\n  useEffect(() => {\n    reloadData();\n  }, []);\n\n  // Navegação para a página de resumo\n  const handleNavigateToResumo = () => {\n    navigate('/resumo', {\n      state: {\n        combinedData\n      }\n    });\n  };\n\n  // Função para estilizar a célula de quantidade faltante\n  const getFaltanteStyle = value => {\n    if (value > 0) return 'faltante-green'; // Verde se há excesso\n    if (value < 0) return 'faltante-red'; // Vermelho se há falta\n    return 'faltante-blue'; // Azul se não há diferença\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dados Compilados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filtros\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Per\\xEDodo:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: periodoFiltro,\n          onChange: e => setPeriodoFiltro(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"30_dias\",\n            children: \"\\xDAltimos 30 dias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mes_passado\",\n            children: \"M\\xEAs Passado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mes_atual\",\n            children: \"M\\xEAs Atual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"customizado\",\n            children: \"Intervalo Customizado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), periodoFiltro === 'customizado' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data In\\xEDcio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataInicio,\n            onChange: e => setDataInicio(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data Fim:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataFim,\n            onChange: e => setDataFim(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Produto:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: produtoFiltro,\n          onChange: e => setProdutoFiltro(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), produtosUnicos.map(produto => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: produto,\n            children: produto\n          }, produto, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reloadData,\n        disabled: loading,\n        children: \"Recarregar Dados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/resumo\",\n        state: {\n          combinedData\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"resumo-button\",\n          children: \"Ver Resumo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [\"Carregando... \", /*#__PURE__*/_jsxDEV(\"progress\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: ['Código', 'Produto', 'Quantidade Prevista', 'Data de Previsão', 'Semana', 'Entregue', 'Faltante'].map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dadosFiltrados.map((row, index) => {\n          const dataPrevisao = parseDate(row['Data de Previsão de Entrega']);\n          const diferenca = row.Diferenca; // Diferença entre entregue e previsto\n          const isExcesso = diferenca > 0; // Verifica se há excesso\n\n          // Dados para o gráfico\n          const chartData = {\n            labels: ['Previsto', 'Entregue'],\n            datasets: [{\n              label: 'Valores',\n              data: [row['Quantidade Prevista'], row.QuantidadeEntregue],\n              backgroundColor: ['#f0ad4e', '#5cb85c'],\n              // Amarelo para previsto, verde para entregue\n              borderColor: ['#f0ad4e', '#5cb85c'],\n              borderWidth: 1\n            }]\n          };\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.Codigo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.Produto\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row['Quantidade Prevista']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: dataPrevisao ? dataPrevisao.toLocaleDateString('pt-BR') : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.SemanaPrevisao\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.QuantidadeEntregue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: getFaltanteStyle(diferenca),\n                children: isExcesso ? `+${diferenca}` : diferenca\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"7\",\n                style: {\n                  padding: '10px 0'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '100%',\n                    height: '100px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Bar, {\n                    data: chartData,\n                    options: {\n                      indexAxis: 'y',\n                      // Define o gráfico como horizontal\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      // Permite ajustar o tamanho manualmente\n                      plugins: {\n                        legend: {\n                          display: false // Oculta a legenda\n                        },\n                        tooltip: {\n                          enabled: true\n                        }\n                      },\n                      scales: {\n                        x: {\n                          beginAtZero: true,\n                          max: Math.max(row['Quantidade Prevista'], row.QuantidadeEntregue) * 1.5 // Aumenta o limite máximo\n                        },\n                        y: {\n                          barPercentage: 0.8,\n                          // Ajusta a largura das barras\n                          categoryPercentage: 0.8 // Ajusta o espaçamento entre as categorias\n                        }\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this)]\n          }, `${row.Codigo}-${row['Data de Previsão de Entrega']}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"9FW2g3VUJgHqk8w0+08KwzRBO/4=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","axios","axiosRetry","Papa","useNavigate","Link","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","Home","_s","previsaoData","setPrevisaoData","entregaData","setEntregaData","loading","setLoading","error","setError","periodoFiltro","setPeriodoFiltro","dataInicio","setDataInicio","dataFim","setDataFim","produtoFiltro","setProdutoFiltro","navigate","parseDate","dateString","day","month","year","split","Date","fetchSheetData","url","setData","response","get","Promise","resolve","reject","parse","data","header","skipEmptyLines","dynamicTyping","complete","result","length","Error","console","isCancel","getWeekOfMonth","date","isNaN","firstDay","getFullYear","getMonth","dayOfMonth","getDate","adjustedDate","getDay","Math","ceil","combinedData","map","previsaoItem","entregas","filter","item","Codigo","quantidadeEntregue","reduce","acc","curr","diferenca","QuantidadeEntregue","Diferenca","SemanaPrevisao","produtosUnicos","produtos","Produto","Set","dadosFiltrados","filtrados","hoje","trintaDiasAtras","setDate","dataPrevisao","primeiroDiaMesPassado","ultimoDiaMesPassado","primeiroDiaMesAtual","ultimoDiaMesAtual","inicio","fim","reloadData","all","handleNavigateToResumo","state","getFaltanteStyle","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","type","produto","onClick","disabled","to","row","index","isExcesso","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","Fragment","toLocaleDateString","colSpan","style","padding","width","height","options","indexAxis","responsive","maintainAspectRatio","plugins","legend","display","tooltip","enabled","scales","x","beginAtZero","max","y","barPercentage","categoryPercentage","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/home.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport Papa from 'papaparse';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { Bar } from 'react-chartjs-2'; // Importa o componente de gráfico\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport './App.css';\r\n\r\n// Registra os componentes necessários do Chart.js\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, Legend);\r\n\r\nconst Home = () => {\r\n  const [previsaoData, setPrevisaoData] = useState([]);\r\n  const [entregaData, setEntregaData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias');\r\n  const [dataInicio, setDataInicio] = useState('');\r\n  const [dataFim, setDataFim] = useState('');\r\n  const [produtoFiltro, setProdutoFiltro] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    const [day, month, year] = dateString.split('/');\r\n    return new Date(`${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Função genérica para buscar dados de uma planilha\r\n  const fetchSheetData = async (url, setData) => {\r\n    try {\r\n      const response = await axios.get(url);\r\n      return new Promise((resolve, reject) => {\r\n        Papa.parse(response.data, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          dynamicTyping: true,\r\n          complete: (result) => {\r\n            if (result.data && result.data.length > 0) {\r\n              setData(result.data);\r\n              resolve();\r\n            } else {\r\n              reject(new Error('Dados não encontrados na planilha.'));\r\n            }\r\n          },\r\n          error: (error) => {\r\n            console.error('Erro ao processar CSV:', error);\r\n            reject(error);\r\n          },\r\n        });\r\n      });\r\n    } catch (error) {\r\n      if (!axios.isCancel(error)) {\r\n        throw error;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Função para calcular a semana do mês\r\n  const getWeekOfMonth = (dateString) => {\r\n    const date = parseDate(dateString);\r\n    if (!date || isNaN(date)) return 'Data inválida';\r\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const dayOfMonth = date.getDate();\r\n    const adjustedDate = dayOfMonth + firstDay.getDay() - 1;\r\n    return `${Math.ceil(adjustedDate / 7)}ª Semana`;\r\n  };\r\n\r\n  // Combinar os dados das abas Previsão e Entrega\r\n  const combinedData = useMemo(() => {\r\n    if (!previsaoData.length || !entregaData.length) return [];\r\n    return previsaoData.map((previsaoItem) => {\r\n      const entregas = entregaData.filter(\r\n        (item) =>\r\n          item.Codigo === previsaoItem.Codigo &&\r\n          item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']\r\n      );\r\n      const quantidadeEntregue = entregas.reduce(\r\n        (acc, curr) => acc + (curr['Quantidade Entregue'] || 0),\r\n        0\r\n      );\r\n      const diferenca = (quantidadeEntregue || 0) - (previsaoItem['Quantidade Prevista'] || 0);\r\n      return {\r\n        ...previsaoItem,\r\n        QuantidadeEntregue: quantidadeEntregue,\r\n        Diferenca: diferenca, // Armazena a diferença (positiva ou negativa)\r\n        SemanaPrevisao: getWeekOfMonth(previsaoItem['Data de Previsão de Entrega']),\r\n      };\r\n    });\r\n  }, [previsaoData, entregaData]);\r\n\r\n  // Lista de produtos únicos para o filtro\r\n  const produtosUnicos = useMemo(() => {\r\n    const produtos = combinedData.map((item) => item.Produto);\r\n    return [...new Set(produtos)];\r\n  }, [combinedData]);\r\n\r\n  // Função para aplicar os filtros\r\n  const dadosFiltrados = useMemo(() => {\r\n    if (!combinedData.length) return [];\r\n    let filtrados = combinedData;\r\n\r\n    // Filtro por período\r\n    const hoje = new Date();\r\n    switch (periodoFiltro) {\r\n      case '30_dias':\r\n        const trintaDiasAtras = new Date();\r\n        trintaDiasAtras.setDate(hoje.getDate() - 30);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= trintaDiasAtras && dataPrevisao <= hoje;\r\n        });\r\n        break;\r\n      case 'mes_passado':\r\n        const primeiroDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth() - 1, 1);\r\n        const ultimoDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth(), 0);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= primeiroDiaMesPassado && dataPrevisao <= ultimoDiaMesPassado;\r\n        });\r\n        break;\r\n      case 'mes_atual':\r\n        const primeiroDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth(), 1);\r\n        const ultimoDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= primeiroDiaMesAtual && dataPrevisao <= ultimoDiaMesAtual;\r\n        });\r\n        break;\r\n      case 'customizado':\r\n        if (dataInicio && dataFim) {\r\n          const inicio = new Date(dataInicio);\r\n          const fim = new Date(dataFim);\r\n          filtrados = filtrados.filter((item) => {\r\n            const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n            return dataPrevisao >= inicio && dataPrevisao <= fim;\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Filtro por nome do produto\r\n    if (produtoFiltro) {\r\n      filtrados = filtrados.filter((item) => item.Produto === produtoFiltro);\r\n    }\r\n\r\n    return filtrados;\r\n  }, [combinedData, periodoFiltro, dataInicio, dataFim, produtoFiltro]);\r\n\r\n  // Função para recarregar os dados\r\n  const reloadData = async () => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n      await Promise.all([\r\n        fetchSheetData(\r\n          'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao',\r\n          setPrevisaoData\r\n        ),\r\n        fetchSheetData(\r\n          'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega',\r\n          setEntregaData\r\n        ),\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar dados:', error);\r\n      setError('Erro ao carregar dados. Verifique os links ou tente novamente mais tarde.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Carregar dados ao montar o componente\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, []);\r\n\r\n  // Navegação para a página de resumo\r\n  const handleNavigateToResumo = () => {\r\n    navigate('/resumo', { state: { combinedData } });\r\n  };\r\n\r\n  // Função para estilizar a célula de quantidade faltante\r\n  const getFaltanteStyle = (value) => {\r\n    if (value > 0) return 'faltante-green'; // Verde se há excesso\r\n    if (value < 0) return 'faltante-red';  // Vermelho se há falta\r\n    return 'faltante-blue';               // Azul se não há diferença\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Dados Compilados</h1>\r\n      {/* Filtros */}\r\n      <div className=\"filtros\">\r\n        <label>\r\n          Período:\r\n          <select\r\n            value={periodoFiltro}\r\n            onChange={(e) => setPeriodoFiltro(e.target.value)}\r\n          >\r\n            <option value=\"30_dias\">Últimos 30 dias</option>\r\n            <option value=\"mes_passado\">Mês Passado</option>\r\n            <option value=\"mes_atual\">Mês Atual</option>\r\n            <option value=\"customizado\">Intervalo Customizado</option>\r\n          </select>\r\n        </label>\r\n        {periodoFiltro === 'customizado' && (\r\n          <div>\r\n            <label>\r\n              Data Início:\r\n              <input\r\n                type=\"date\"\r\n                value={dataInicio}\r\n                onChange={(e) => setDataInicio(e.target.value)}\r\n              />\r\n            </label>\r\n            <label>\r\n              Data Fim:\r\n              <input\r\n                type=\"date\"\r\n                value={dataFim}\r\n                onChange={(e) => setDataFim(e.target.value)}\r\n              />\r\n            </label>\r\n          </div>\r\n        )}\r\n        <label>\r\n          Produto:\r\n          <select\r\n            value={produtoFiltro}\r\n            onChange={(e) => setProdutoFiltro(e.target.value)}\r\n          >\r\n            <option value=\"\">Todos</option>\r\n            {produtosUnicos.map((produto) => (\r\n              <option key={produto} value={produto}>\r\n                {produto}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <button onClick={reloadData} disabled={loading}>\r\n          Recarregar Dados\r\n        </button>\r\n        <Link to=\"/resumo\" state={{ combinedData }}>\r\n          <button className=\"resumo-button\">Ver Resumo</button>\r\n        </Link>\r\n      </div>\r\n      {loading && (\r\n        <div className=\"loading\">\r\n          Carregando... <progress />\r\n        </div>\r\n      )}\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {!loading && !error && (\r\n        <table className=\"data-table\">\r\n          <thead>\r\n            <tr>\r\n              {[\r\n                'Código',\r\n                'Produto',\r\n                'Quantidade Prevista',\r\n                'Data de Previsão',\r\n                'Semana',\r\n                'Entregue',\r\n                'Faltante',\r\n              ].map((header) => (\r\n                <th key={header}>{header}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {dadosFiltrados.map((row, index) => {\r\n              const dataPrevisao = parseDate(row['Data de Previsão de Entrega']);\r\n              const diferenca = row.Diferenca; // Diferença entre entregue e previsto\r\n              const isExcesso = diferenca > 0; // Verifica se há excesso\r\n\r\n              // Dados para o gráfico\r\n              const chartData = {\r\n                labels: ['Previsto', 'Entregue'],\r\n                datasets: [\r\n                  {\r\n                    label: 'Valores',\r\n                    data: [row['Quantidade Prevista'], row.QuantidadeEntregue],\r\n                    backgroundColor: ['#f0ad4e', '#5cb85c'], // Amarelo para previsto, verde para entregue\r\n                    borderColor: ['#f0ad4e', '#5cb85c'],\r\n                    borderWidth: 1,\r\n                  },\r\n                ],\r\n              };\r\n\r\n              return (\r\n                <React.Fragment key={`${row.Codigo}-${row['Data de Previsão de Entrega']}-${index}`}>\r\n                  <tr>\r\n                    <td>{row.Codigo}</td>\r\n                    <td>{row.Produto}</td>\r\n                    <td>{row['Quantidade Prevista']}</td>\r\n                    <td>{dataPrevisao ? dataPrevisao.toLocaleDateString('pt-BR') : 'N/A'}</td>\r\n                    <td>{row.SemanaPrevisao}</td>\r\n                    <td>{row.QuantidadeEntregue}</td>\r\n                    <td className={getFaltanteStyle(diferenca)}>\r\n                      {isExcesso ? `+${diferenca}` : diferenca}\r\n                    </td>\r\n                  </tr>\r\n                  {/* Gráfico abaixo da linha */}\r\n                  <tr>\r\n                    <td colSpan=\"7\" style={{ padding: '10px 0' }}>\r\n                      <div style={{ width: '100%', height: '100px' }}>\r\n                      <Bar\r\n  data={chartData}\r\n  options={{\r\n    indexAxis: 'y', // Define o gráfico como horizontal\r\n    responsive: true,\r\n    maintainAspectRatio: false, // Permite ajustar o tamanho manualmente\r\n    plugins: {\r\n      legend: {\r\n        display: false, // Oculta a legenda\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        beginAtZero: true,\r\n        max: Math.max(row['Quantidade Prevista'], row.QuantidadeEntregue) * 1.5, // Aumenta o limite máximo\r\n      },\r\n      y: {\r\n        barPercentage: 0.8, // Ajusta a largura das barras\r\n        categoryPercentage: 0.8, // Ajusta o espaçamento entre as categorias\r\n      },\r\n    },\r\n  }}\r\n/>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}