{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosSource = axios.CancelToken.source();\nconst App = () => {\n  _s();\n  const [previsaoData, setPrevisaoData] = useState([]);\n  const [entregaData, setEntregaData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias');\n  const [dataInicio, setDataInicio] = useState('');\n  const [dataFim, setDataFim] = useState('');\n  const [produtoFiltro, setProdutoFiltro] = useState('');\n\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\n  const parseDate = dateString => {\n    if (!dateString) return null;\n    const [day, month, year] = dateString.split('/');\n    return new Date(`${year}-${month}-${day}`);\n  };\n\n  // Função genérica para buscar dados de uma planilha\n  const fetchSheetData = async (url, setData) => {\n    try {\n      const response = await axios.get(url, {\n        cancelToken: axiosSource.token\n      });\n      return new Promise((resolve, reject) => {\n        Papa.parse(response.data, {\n          header: true,\n          skipEmptyLines: true,\n          dynamicTyping: true,\n          complete: result => {\n            if (result.data && result.data.length > 0) {\n              setData(result.data);\n              resolve();\n            } else {\n              reject(new Error('Dados não encontrados na planilha.'));\n            }\n          },\n          error: error => reject(error)\n        });\n      });\n    } catch (error) {\n      if (!axios.isCancel(error)) {\n        throw error;\n      }\n    }\n  };\n\n  // Função para calcular a semana do mês\n  const getWeekOfMonth = dateString => {\n    const date = parseDate(dateString);\n    if (!date || isNaN(date)) return 'Data inválida';\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const dayOfMonth = date.getDate();\n    const adjustedDate = dayOfMonth + firstDay.getDay() - 1;\n    return Math.ceil(adjustedDate / 7);\n  };\n\n  // Combinar os dados das abas Previsão e Entrega\n  const combinedData = useMemo(() => {\n    if (!previsaoData.length || !entregaData.length) return [];\n    return previsaoData.map(previsaoItem => {\n      const entregas = entregaData.filter(item => item.Codigo === previsaoItem.Codigo && item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']);\n      const quantidadeEntregue = entregas.reduce((acc, curr) => acc + (curr['Quantidade Entregue'] || 0), 0);\n      const quantidadeFaltante = Math.max((previsaoItem['Quantidade Prevista'] || 0) - quantidadeEntregue, 0);\n      return {\n        ...previsaoItem,\n        QuantidadeEntregue: quantidadeEntregue,\n        QuantidadeFaltante: quantidadeFaltante,\n        SemanaPrevisao: `${getWeekOfMonth(previsaoItem['Data de Previsão de Entrega'])}ª Semana`\n      };\n    });\n  }, [previsaoData, entregaData]);\n\n  // Lista de produtos únicos para o filtro\n  const produtosUnicos = useMemo(() => {\n    const produtos = combinedData.map(item => item.Produto);\n    return [...new Set(produtos)];\n  }, [combinedData]);\n\n  // Função para aplicar os filtros\n  const dadosFiltrados = useMemo(() => {\n    if (!combinedData.length) return [];\n    let filtrados = combinedData;\n\n    // Filtro por período\n    const hoje = new Date();\n    switch (periodoFiltro) {\n      case '30_dias':\n        const trintaDiasAtras = new Date();\n        trintaDiasAtras.setDate(hoje.getDate() - 30);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= trintaDiasAtras && dataPrevisao <= hoje;\n        });\n        break;\n      case 'mes_passado':\n        const primeiroDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth() - 1, 1);\n        const ultimoDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth(), 0);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= primeiroDiaMesPassado && dataPrevisao <= ultimoDiaMesPassado;\n        });\n        break;\n      case 'mes_atual':\n        const primeiroDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth(), 1);\n        const ultimoDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= primeiroDiaMesAtual && dataPrevisao <= ultimoDiaMesAtual;\n        });\n        break;\n      case 'customizado':\n        if (dataInicio && dataFim) {\n          const inicio = new Date(dataInicio);\n          const fim = new Date(dataFim);\n          filtrados = filtrados.filter(item => {\n            const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n            return dataPrevisao >= inicio && dataPrevisao <= fim;\n          });\n        }\n        break;\n      default:\n        break;\n    }\n\n    // Filtro por nome do produto\n    if (produtoFiltro) {\n      filtrados = filtrados.filter(item => item.Produto === produtoFiltro);\n    }\n    return filtrados;\n  }, [combinedData, periodoFiltro, dataInicio, dataFim, produtoFiltro]);\n\n  // Carregar dados ao montar o componente\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setError(null);\n        setLoading(true);\n        await Promise.all([fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao', setPrevisaoData), fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega', setEntregaData)]);\n      } catch (error) {\n        console.error('Erro ao carregar dados:', error);\n        setError('Erro ao carregar dados. Verifique os links ou tente novamente mais tarde.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n    return () => axiosSource.cancel('Componente desmontado');\n  }, []);\n\n  // Função para estilizar a célula de quantidade faltante\n  const getFaltanteStyle = value => {\n    if (value <= 0) return 'faltante-green';\n    if (value <= 100) return 'faltante-yellow';\n    return 'faltante-red';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dados Compilados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filtros\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Per\\xEDodo:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: periodoFiltro,\n          onChange: e => setPeriodoFiltro(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"30_dias\",\n            children: \"\\xDAltimos 30 dias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mes_passado\",\n            children: \"M\\xEAs Passado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mes_atual\",\n            children: \"M\\xEAs Atual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"customizado\",\n            children: \"Intervalo Customizado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), periodoFiltro === 'customizado' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data In\\xEDcio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataInicio,\n            onChange: e => setDataInicio(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data Fim:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataFim,\n            onChange: e => setDataFim(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Produto:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: produtoFiltro,\n          onChange: e => setProdutoFiltro(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), produtosUnicos.map(produto => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: produto,\n            children: produto\n          }, produto, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: ['Código', 'Produto', 'Quantidade Prevista', 'Data de Previsão', 'Semana', 'Entregue', 'Faltante'].map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dadosFiltrados.map((row, index) => {\n          const dataPrevisao = parseDate(row['Data de Previsão de Entrega']);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.Codigo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.Produto\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row['Quantidade Prevista']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dataPrevisao ? dataPrevisao.toLocaleDateString('pt-BR') : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.SemanaPrevisao\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.QuantidadeEntregue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: getFaltanteStyle(row.QuantidadeFaltante),\n              children: row.QuantidadeFaltante\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this)]\n          }, `${row.Codigo}-${row['Data de Previsão de Entrega']}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"J/dw7dofiiLxzzdxw1wvNOhQI48=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","axios","Papa","jsxDEV","_jsxDEV","axiosSource","CancelToken","source","App","_s","previsaoData","setPrevisaoData","entregaData","setEntregaData","loading","setLoading","error","setError","periodoFiltro","setPeriodoFiltro","dataInicio","setDataInicio","dataFim","setDataFim","produtoFiltro","setProdutoFiltro","parseDate","dateString","day","month","year","split","Date","fetchSheetData","url","setData","response","get","cancelToken","token","Promise","resolve","reject","parse","data","header","skipEmptyLines","dynamicTyping","complete","result","length","Error","isCancel","getWeekOfMonth","date","isNaN","firstDay","getFullYear","getMonth","dayOfMonth","getDate","adjustedDate","getDay","Math","ceil","combinedData","map","previsaoItem","entregas","filter","item","Codigo","quantidadeEntregue","reduce","acc","curr","quantidadeFaltante","max","QuantidadeEntregue","QuantidadeFaltante","SemanaPrevisao","produtosUnicos","produtos","Produto","Set","dadosFiltrados","filtrados","hoje","trintaDiasAtras","setDate","dataPrevisao","primeiroDiaMesPassado","ultimoDiaMesPassado","primeiroDiaMesAtual","ultimoDiaMesAtual","inicio","fim","fetchData","all","console","cancel","getFaltanteStyle","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","type","produto","row","index","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/App.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\nimport './App.css';\r\n\r\nconst axiosSource = axios.CancelToken.source();\r\n\r\nconst App = () => {\r\n  const [previsaoData, setPrevisaoData] = useState([]);\r\n  const [entregaData, setEntregaData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias');\r\n  const [dataInicio, setDataInicio] = useState('');\r\n  const [dataFim, setDataFim] = useState('');\r\n  const [produtoFiltro, setProdutoFiltro] = useState('');\r\n\r\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    const [day, month, year] = dateString.split('/');\r\n    return new Date(`${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Função genérica para buscar dados de uma planilha\r\n  const fetchSheetData = async (url, setData) => {\r\n    try {\r\n      const response = await axios.get(url, {\r\n        cancelToken: axiosSource.token,\r\n      });\r\n\r\n      return new Promise((resolve, reject) => {\r\n        Papa.parse(response.data, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          dynamicTyping: true,\r\n          complete: (result) => {\r\n            if (result.data && result.data.length > 0) {\r\n              setData(result.data);\r\n              resolve();\r\n            } else {\r\n              reject(new Error('Dados não encontrados na planilha.'));\r\n            }\r\n          },\r\n          error: (error) => reject(error),\r\n        });\r\n      });\r\n    } catch (error) {\r\n      if (!axios.isCancel(error)) {\r\n        throw error;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Função para calcular a semana do mês\r\n  const getWeekOfMonth = (dateString) => {\r\n    const date = parseDate(dateString);\r\n    if (!date || isNaN(date)) return 'Data inválida';\r\n\r\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const dayOfMonth = date.getDate();\r\n    const adjustedDate = dayOfMonth + firstDay.getDay() - 1;\r\n    return Math.ceil(adjustedDate / 7);\r\n  };\r\n\r\n  // Combinar os dados das abas Previsão e Entrega\r\n  const combinedData = useMemo(() => {\r\n    if (!previsaoData.length || !entregaData.length) return [];\r\n    return previsaoData.map((previsaoItem) => {\r\n      const entregas = entregaData.filter(\r\n        (item) =>\r\n          item.Codigo === previsaoItem.Codigo &&\r\n          item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']\r\n      );\r\n\r\n      const quantidadeEntregue = entregas.reduce(\r\n        (acc, curr) => acc + (curr['Quantidade Entregue'] || 0),\r\n        0\r\n      );\r\n\r\n      const quantidadeFaltante = Math.max(\r\n        (previsaoItem['Quantidade Prevista'] || 0) - quantidadeEntregue,\r\n        0\r\n      );\r\n\r\n      return {\r\n        ...previsaoItem,\r\n        QuantidadeEntregue: quantidadeEntregue,\r\n        QuantidadeFaltante: quantidadeFaltante,\r\n        SemanaPrevisao: `${getWeekOfMonth(previsaoItem['Data de Previsão de Entrega'])}ª Semana`,\r\n      };\r\n    });\r\n  }, [previsaoData, entregaData]);\r\n\r\n  // Lista de produtos únicos para o filtro\r\n  const produtosUnicos = useMemo(() => {\r\n    const produtos = combinedData.map((item) => item.Produto);\r\n    return [...new Set(produtos)];\r\n  }, [combinedData]);\r\n\r\n  // Função para aplicar os filtros\r\n  const dadosFiltrados = useMemo(() => {\r\n    if (!combinedData.length) return [];\r\n    let filtrados = combinedData;\r\n\r\n    // Filtro por período\r\n    const hoje = new Date();\r\n    switch (periodoFiltro) {\r\n      case '30_dias':\r\n        const trintaDiasAtras = new Date();\r\n        trintaDiasAtras.setDate(hoje.getDate() - 30);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= trintaDiasAtras && dataPrevisao <= hoje;\r\n        });\r\n        break;\r\n\r\n      case 'mes_passado':\r\n        const primeiroDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth() - 1, 1);\r\n        const ultimoDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth(), 0);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= primeiroDiaMesPassado && dataPrevisao <= ultimoDiaMesPassado;\r\n        });\r\n        break;\r\n\r\n      case 'mes_atual':\r\n        const primeiroDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth(), 1);\r\n        const ultimoDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= primeiroDiaMesAtual && dataPrevisao <= ultimoDiaMesAtual;\r\n        });\r\n        break;\r\n\r\n      case 'customizado':\r\n        if (dataInicio && dataFim) {\r\n          const inicio = new Date(dataInicio);\r\n          const fim = new Date(dataFim);\r\n          filtrados = filtrados.filter((item) => {\r\n            const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n            return dataPrevisao >= inicio && dataPrevisao <= fim;\r\n          });\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Filtro por nome do produto\r\n    if (produtoFiltro) {\r\n      filtrados = filtrados.filter((item) => item.Produto === produtoFiltro);\r\n    }\r\n\r\n    return filtrados;\r\n  }, [combinedData, periodoFiltro, dataInicio, dataFim, produtoFiltro]);\r\n\r\n  // Carregar dados ao montar o componente\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setError(null);\r\n        setLoading(true);\r\n\r\n        await Promise.all([\r\n          fetchSheetData(\r\n            'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao',\r\n            setPrevisaoData\r\n          ),\r\n          fetchSheetData(\r\n            'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega',\r\n            setEntregaData\r\n          ),\r\n        ]);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar dados:', error);\r\n        setError('Erro ao carregar dados. Verifique os links ou tente novamente mais tarde.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    return () => axiosSource.cancel('Componente desmontado');\r\n  }, []);\r\n\r\n  // Função para estilizar a célula de quantidade faltante\r\n  const getFaltanteStyle = (value) => {\r\n    if (value <= 0) return 'faltante-green';\r\n    if (value <= 100) return 'faltante-yellow';\r\n    return 'faltante-red';\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Dados Compilados</h1>\r\n\r\n      {/* Filtros */}\r\n      <div className=\"filtros\">\r\n        <label>\r\n          Período:\r\n          <select\r\n            value={periodoFiltro}\r\n            onChange={(e) => setPeriodoFiltro(e.target.value)}\r\n          >\r\n            <option value=\"30_dias\">Últimos 30 dias</option>\r\n            <option value=\"mes_passado\">Mês Passado</option>\r\n            <option value=\"mes_atual\">Mês Atual</option>\r\n            <option value=\"customizado\">Intervalo Customizado</option>\r\n          </select>\r\n        </label>\r\n\r\n        {periodoFiltro === 'customizado' && (\r\n          <div>\r\n            <label>\r\n              Data Início:\r\n              <input\r\n                type=\"date\"\r\n                value={dataInicio}\r\n                onChange={(e) => setDataInicio(e.target.value)}\r\n              />\r\n            </label>\r\n            <label>\r\n              Data Fim:\r\n              <input\r\n                type=\"date\"\r\n                value={dataFim}\r\n                onChange={(e) => setDataFim(e.target.value)}\r\n              />\r\n            </label>\r\n          </div>\r\n        )}\r\n\r\n        <label>\r\n          Produto:\r\n          <select\r\n            value={produtoFiltro}\r\n            onChange={(e) => setProdutoFiltro(e.target.value)}\r\n          >\r\n            <option value=\"\">Todos</option>\r\n            {produtosUnicos.map((produto) => (\r\n              <option key={produto} value={produto}>\r\n                {produto}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      {loading && <div className=\"loading\">Carregando...</div>}\r\n\r\n      {error && <div className=\"error\">{error}</div>}\r\n\r\n      {!loading && !error && (\r\n        <table className=\"data-table\">\r\n          <thead>\r\n            <tr>\r\n              {[\r\n                'Código',\r\n                'Produto',\r\n                'Quantidade Prevista',\r\n                'Data de Previsão',\r\n                'Semana',\r\n                'Entregue',\r\n                'Faltante',\r\n              ].map((header) => (\r\n                <th key={header}>{header}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {dadosFiltrados.map((row, index) => {\r\n              const dataPrevisao = parseDate(row['Data de Previsão de Entrega']);\r\n\r\n              return (\r\n                <tr key={`${row.Codigo}-${row['Data de Previsão de Entrega']}-${index}`}>\r\n                  <td>{row.Codigo}</td>\r\n                  <td>{row.Produto}</td>\r\n                  <td>{row['Quantidade Prevista']}</td>\r\n                  <td>{dataPrevisao ? dataPrevisao.toLocaleDateString('pt-BR') : 'N/A'}</td>\r\n                  <td>{row.SemanaPrevisao}</td>\r\n                  <td>{row.QuantidadeEntregue}</td>\r\n                  <td className={getFaltanteStyle(row.QuantidadeFaltante)}>\r\n                    {row.QuantidadeFaltante}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}