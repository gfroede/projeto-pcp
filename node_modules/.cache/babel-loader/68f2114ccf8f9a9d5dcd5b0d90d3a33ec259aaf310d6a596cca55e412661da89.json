{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport Papa from 'papaparse';\nimport { useNavigate, Link } from 'react-router-dom';\nimport './App.css';\n\n// Configura o mecanismo de retentativa para o axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxiosRetry(axios, {\n  retries: 3,\n  retryDelay: axiosRetry.exponentialDelay\n});\nconst Home = () => {\n  _s();\n  const [previsaoData, setPrevisaoData] = useState([]);\n  const [entregaData, setEntregaData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias');\n  const [dataInicio, setDataInicio] = useState('');\n  const [dataFim, setDataFim] = useState('');\n  const [produtoFiltro, setProdutoFiltro] = useState('');\n  const navigate = useNavigate();\n\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\n  const parseDate = dateString => {\n    if (!dateString) return null;\n    const [day, month, year] = dateString.split('/');\n    return new Date(`${year}-${month}-${day}`);\n  };\n\n  // Função genérica para buscar dados de uma planilha\n  const fetchSheetData = async (url, setData) => {\n    try {\n      const response = await axios.get(url);\n      return new Promise((resolve, reject) => {\n        Papa.parse(response.data, {\n          header: true,\n          skipEmptyLines: true,\n          dynamicTyping: true,\n          complete: result => {\n            if (result.data && result.data.length > 0) {\n              setData(result.data);\n              resolve();\n            } else {\n              reject(new Error('Dados não encontrados na planilha.'));\n            }\n          },\n          error: error => {\n            console.error('Erro ao processar CSV:', error);\n            reject(error);\n          }\n        });\n      });\n    } catch (error) {\n      if (!axios.isCancel(error)) {\n        throw error;\n      }\n    }\n  };\n\n  // Combinar os dados das abas Previsão e Entrega\n  const combinedData = useMemo(() => {\n    if (!previsaoData.length || !entregaData.length) return [];\n    return previsaoData.map(previsaoItem => {\n      const entregas = entregaData.filter(item => item.Codigo === previsaoItem.Codigo && item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']);\n      const quantidadeEntregue = entregas.reduce((acc, curr) => acc + (curr['Quantidade Entregue'] || 0), 0);\n      const quantidadeFaltante = Math.max((previsaoItem['Quantidade Prevista'] || 0) - quantidadeEntregue, 0);\n      return {\n        ...previsaoItem,\n        QuantidadeEntregue: quantidadeEntregue,\n        QuantidadeFaltante: quantidadeFaltante\n      };\n    });\n  }, [previsaoData, entregaData]);\n\n  // Lista de produtos únicos para o filtro\n  const produtosUnicos = useMemo(() => {\n    const produtos = combinedData.map(item => item.Produto);\n    return [...new Set(produtos)];\n  }, [combinedData]);\n\n  // Função para aplicar os filtros\n  const dadosFiltrados = useMemo(() => {\n    if (!combinedData.length) return [];\n    let filtrados = combinedData;\n\n    // Filtro por período\n    const hoje = new Date();\n    switch (periodoFiltro) {\n      case '30_dias':\n        const trintaDiasAtras = new Date();\n        trintaDiasAtras.setDate(hoje.getDate() - 30);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= trintaDiasAtras && dataPrevisao <= hoje;\n        });\n        break;\n      case 'mes_passado':\n        const primeiroDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth() - 1, 1);\n        const ultimoDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth(), 0);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= primeiroDiaMesPassado && dataPrevisao <= ultimoDiaMesPassado;\n        });\n        break;\n      case 'mes_atual':\n        const primeiroDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth(), 1);\n        const ultimoDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= primeiroDiaMesAtual && dataPrevisao <= ultimoDiaMesAtual;\n        });\n        break;\n      case 'customizado':\n        if (dataInicio && dataFim) {\n          const inicio = new Date(dataInicio);\n          const fim = new Date(dataFim);\n          filtrados = filtrados.filter(item => {\n            const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n            return dataPrevisao >= inicio && dataPrevisao <= fim;\n          });\n        }\n        break;\n      default:\n        break;\n    }\n\n    // Filtro por nome do produto\n    if (produtoFiltro) {\n      filtrados = filtrados.filter(item => item.Produto === produtoFiltro);\n    }\n    return filtrados;\n  }, [combinedData, periodoFiltro, dataInicio, dataFim, produtoFiltro]);\n\n  // Função para recarregar os dados\n  const reloadData = async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      await Promise.all([fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao', setPrevisaoData), fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega', setEntregaData)]);\n    } catch (error) {\n      console.error('Erro ao carregar dados:', error);\n      setError('Erro ao carregar dados. Verifique os links ou tente novamente mais tarde.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Carregar dados ao montar o componente\n  useEffect(() => {\n    reloadData();\n  }, []);\n\n  // Navegação para a página de resumo\n  const handleNavigateToResumo = () => {\n    navigate('/resumo', {\n      state: {\n        combinedData\n      }\n    });\n  };\n\n  // Função para estilizar a célula de quantidade faltante\n  const getFaltanteStyle = value => {\n    if (value <= 0) return 'faltante-green';\n    if (value <= 100) return 'faltante-yellow';\n    return 'faltante-red';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dados Compilados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filtros\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Per\\xEDodo:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: periodoFiltro,\n          onChange: e => setPeriodoFiltro(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"30_dias\",\n            children: \"\\xDAltimos 30 dias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mes_passado\",\n            children: \"M\\xEAs Passado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mes_atual\",\n            children: \"M\\xEAs Atual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"customizado\",\n            children: \"Intervalo Customizado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), periodoFiltro === 'customizado' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data In\\xEDcio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataInicio,\n            onChange: e => setDataInicio(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data Fim:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataFim,\n            onChange: e => setDataFim(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Produto:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: produtoFiltro,\n          onChange: e => setProdutoFiltro(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), produtosUnicos.map(produto => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: produto,\n            children: produto\n          }, produto, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reloadData,\n        disabled: loading,\n        children: \"Recarregar Dados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/resumo\",\n        state: {\n          combinedData\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"resumo-button\",\n          children: \"Ver Resumo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [\"Carregando... \", /*#__PURE__*/_jsxDEV(\"progress\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: ['Código', 'Produto', 'Quantidade Prevista', 'Data de Previsão', 'Semana', 'Entregue', 'Faltante'].map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dadosFiltrados.map((row, index) => {\n          const dataPrevisao = parseDate(row['Data de Previsão de Entrega']);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.Codigo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.Produto\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row['Quantidade Prevista']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dataPrevisao ? dataPrevisao.toLocaleDateString('pt-BR') : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.SemanaPrevisao\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.QuantidadeEntregue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: getFaltanteStyle(row.QuantidadeFaltante),\n              children: row.QuantidadeFaltante\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this)]\n          }, `${row.Codigo}-${row['Data de Previsão de Entrega']}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"9FW2g3VUJgHqk8w0+08KwzRBO/4=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","axios","axiosRetry","Papa","useNavigate","Link","jsxDEV","_jsxDEV","retries","retryDelay","exponentialDelay","Home","_s","previsaoData","setPrevisaoData","entregaData","setEntregaData","loading","setLoading","error","setError","periodoFiltro","setPeriodoFiltro","dataInicio","setDataInicio","dataFim","setDataFim","produtoFiltro","setProdutoFiltro","navigate","parseDate","dateString","day","month","year","split","Date","fetchSheetData","url","setData","response","get","Promise","resolve","reject","parse","data","header","skipEmptyLines","dynamicTyping","complete","result","length","Error","console","isCancel","combinedData","map","previsaoItem","entregas","filter","item","Codigo","quantidadeEntregue","reduce","acc","curr","quantidadeFaltante","Math","max","QuantidadeEntregue","QuantidadeFaltante","produtosUnicos","produtos","Produto","Set","dadosFiltrados","filtrados","hoje","trintaDiasAtras","setDate","getDate","dataPrevisao","primeiroDiaMesPassado","getFullYear","getMonth","ultimoDiaMesPassado","primeiroDiaMesAtual","ultimoDiaMesAtual","inicio","fim","reloadData","all","handleNavigateToResumo","state","getFaltanteStyle","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","type","produto","onClick","disabled","to","row","index","toLocaleDateString","SemanaPrevisao","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/home.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport Papa from 'papaparse';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport './App.css';\r\n\r\n// Configura o mecanismo de retentativa para o axios\r\naxiosRetry(axios, { retries: 3, retryDelay: axiosRetry.exponentialDelay });\r\n\r\nconst Home = () => {\r\n  const [previsaoData, setPrevisaoData] = useState([]);\r\n  const [entregaData, setEntregaData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias');\r\n  const [dataInicio, setDataInicio] = useState('');\r\n  const [dataFim, setDataFim] = useState('');\r\n  const [produtoFiltro, setProdutoFiltro] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    const [day, month, year] = dateString.split('/');\r\n    return new Date(`${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Função genérica para buscar dados de uma planilha\r\n  const fetchSheetData = async (url, setData) => {\r\n    try {\r\n      const response = await axios.get(url);\r\n      return new Promise((resolve, reject) => {\r\n        Papa.parse(response.data, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          dynamicTyping: true,\r\n          complete: (result) => {\r\n            if (result.data && result.data.length > 0) {\r\n              setData(result.data);\r\n              resolve();\r\n            } else {\r\n              reject(new Error('Dados não encontrados na planilha.'));\r\n            }\r\n          },\r\n          error: (error) => {\r\n            console.error('Erro ao processar CSV:', error);\r\n            reject(error);\r\n          },\r\n        });\r\n      });\r\n    } catch (error) {\r\n      if (!axios.isCancel(error)) {\r\n        throw error;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Combinar os dados das abas Previsão e Entrega\r\n  const combinedData = useMemo(() => {\r\n    if (!previsaoData.length || !entregaData.length) return [];\r\n    return previsaoData.map((previsaoItem) => {\r\n      const entregas = entregaData.filter(\r\n        (item) =>\r\n          item.Codigo === previsaoItem.Codigo &&\r\n          item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']\r\n      );\r\n      const quantidadeEntregue = entregas.reduce(\r\n        (acc, curr) => acc + (curr['Quantidade Entregue'] || 0),\r\n        0\r\n      );\r\n      const quantidadeFaltante = Math.max(\r\n        (previsaoItem['Quantidade Prevista'] || 0) - quantidadeEntregue,\r\n        0\r\n      );\r\n      return {\r\n        ...previsaoItem,\r\n        QuantidadeEntregue: quantidadeEntregue,\r\n        QuantidadeFaltante: quantidadeFaltante,\r\n      };\r\n    });\r\n  }, [previsaoData, entregaData]);\r\n\r\n  // Lista de produtos únicos para o filtro\r\n  const produtosUnicos = useMemo(() => {\r\n    const produtos = combinedData.map((item) => item.Produto);\r\n    return [...new Set(produtos)];\r\n  }, [combinedData]);\r\n\r\n  // Função para aplicar os filtros\r\n  const dadosFiltrados = useMemo(() => {\r\n    if (!combinedData.length) return [];\r\n    let filtrados = combinedData;\r\n\r\n    // Filtro por período\r\n    const hoje = new Date();\r\n    switch (periodoFiltro) {\r\n      case '30_dias':\r\n        const trintaDiasAtras = new Date();\r\n        trintaDiasAtras.setDate(hoje.getDate() - 30);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= trintaDiasAtras && dataPrevisao <= hoje;\r\n        });\r\n        break;\r\n      case 'mes_passado':\r\n        const primeiroDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth() - 1, 1);\r\n        const ultimoDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth(), 0);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= primeiroDiaMesPassado && dataPrevisao <= ultimoDiaMesPassado;\r\n        });\r\n        break;\r\n      case 'mes_atual':\r\n        const primeiroDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth(), 1);\r\n        const ultimoDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= primeiroDiaMesAtual && dataPrevisao <= ultimoDiaMesAtual;\r\n        });\r\n        break;\r\n      case 'customizado':\r\n        if (dataInicio && dataFim) {\r\n          const inicio = new Date(dataInicio);\r\n          const fim = new Date(dataFim);\r\n          filtrados = filtrados.filter((item) => {\r\n            const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n            return dataPrevisao >= inicio && dataPrevisao <= fim;\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Filtro por nome do produto\r\n    if (produtoFiltro) {\r\n      filtrados = filtrados.filter((item) => item.Produto === produtoFiltro);\r\n    }\r\n\r\n    return filtrados;\r\n  }, [combinedData, periodoFiltro, dataInicio, dataFim, produtoFiltro]);\r\n\r\n  // Função para recarregar os dados\r\n  const reloadData = async () => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n      await Promise.all([\r\n        fetchSheetData(\r\n          'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao',\r\n          setPrevisaoData\r\n        ),\r\n        fetchSheetData(\r\n          'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega',\r\n          setEntregaData\r\n        ),\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar dados:', error);\r\n      setError('Erro ao carregar dados. Verifique os links ou tente novamente mais tarde.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Carregar dados ao montar o componente\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, []);\r\n\r\n  // Navegação para a página de resumo\r\n  const handleNavigateToResumo = () => {\r\n    navigate('/resumo', { state: { combinedData } });\r\n  };\r\n\r\n  // Função para estilizar a célula de quantidade faltante\r\n  const getFaltanteStyle = (value) => {\r\n    if (value <= 0) return 'faltante-green';\r\n    if (value <= 100) return 'faltante-yellow';\r\n    return 'faltante-red';\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Dados Compilados</h1>\r\n      {/* Filtros */}\r\n      <div className=\"filtros\">\r\n        <label>\r\n          Período:\r\n          <select\r\n            value={periodoFiltro}\r\n            onChange={(e) => setPeriodoFiltro(e.target.value)}\r\n          >\r\n            <option value=\"30_dias\">Últimos 30 dias</option>\r\n            <option value=\"mes_passado\">Mês Passado</option>\r\n            <option value=\"mes_atual\">Mês Atual</option>\r\n            <option value=\"customizado\">Intervalo Customizado</option>\r\n          </select>\r\n        </label>\r\n        {periodoFiltro === 'customizado' && (\r\n          <div>\r\n            <label>\r\n              Data Início:\r\n              <input\r\n                type=\"date\"\r\n                value={dataInicio}\r\n                onChange={(e) => setDataInicio(e.target.value)}\r\n              />\r\n            </label>\r\n            <label>\r\n              Data Fim:\r\n              <input\r\n                type=\"date\"\r\n                value={dataFim}\r\n                onChange={(e) => setDataFim(e.target.value)}\r\n              />\r\n            </label>\r\n          </div>\r\n        )}\r\n        <label>\r\n          Produto:\r\n          <select\r\n            value={produtoFiltro}\r\n            onChange={(e) => setProdutoFiltro(e.target.value)}\r\n          >\r\n            <option value=\"\">Todos</option>\r\n            {produtosUnicos.map((produto) => (\r\n              <option key={produto} value={produto}>\r\n                {produto}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <button onClick={reloadData} disabled={loading}>\r\n          Recarregar Dados\r\n        </button>\r\n        <Link to=\"/resumo\" state={{ combinedData }}>\r\n  <button className=\"resumo-button\">Ver Resumo</button>\r\n</Link>\r\n      </div>\r\n      {loading && (\r\n        <div className=\"loading\">\r\n          Carregando... <progress />\r\n        </div>\r\n      )}\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {!loading && !error && (\r\n        <table className=\"data-table\">\r\n          <thead>\r\n            <tr>\r\n              {[\r\n                'Código',\r\n                'Produto',\r\n                'Quantidade Prevista',\r\n                'Data de Previsão',\r\n                'Semana',\r\n                'Entregue',\r\n                'Faltante',\r\n              ].map((header) => (\r\n                <th key={header}>{header}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {dadosFiltrados.map((row, index) => {\r\n              const dataPrevisao = parseDate(row['Data de Previsão de Entrega']);\r\n              return (\r\n                <tr key={`${row.Codigo}-${row['Data de Previsão de Entrega']}-${index}`}>\r\n                  <td>{row.Codigo}</td>\r\n                  <td>{row.Produto}</td>\r\n                  <td>{row['Quantidade Prevista']}</td>\r\n                  <td>{dataPrevisao ? dataPrevisao.toLocaleDateString('pt-BR') : 'N/A'}</td>\r\n                  <td>{row.SemanaPrevisao}</td>\r\n                  <td>{row.QuantidadeEntregue}</td>\r\n                  <td className={getFaltanteStyle(row.QuantidadeFaltante)}>\r\n                    {row.QuantidadeFaltante}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}