{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosSource = axios.CancelToken.source();\nconst App = () => {\n  _s();\n  const [previsaoData, setPrevisaoData] = useState([]);\n  const [entregaData, setEntregaData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\n  const parseDate = dateString => {\n    if (!dateString) return null;\n    const [day, month, year] = dateString.split('/');\n    return new Date(`${year}-${month}-${day}`);\n  };\n\n  // Função genérica para buscar dados de uma planilha\n  const fetchSheetData = async (url, setData) => {\n    try {\n      const response = await axios.get(url, {\n        cancelToken: axiosSource.token\n      });\n      return new Promise((resolve, reject) => {\n        Papa.parse(response.data, {\n          header: true,\n          skipEmptyLines: true,\n          dynamicTyping: true,\n          complete: result => {\n            setData(result.data);\n            resolve();\n          },\n          error: error => reject(error)\n        });\n      });\n    } catch (error) {\n      if (!axios.isCancel(error)) {\n        throw error;\n      }\n    }\n  };\n\n  // Função para calcular a semana do mês\n  const getWeekOfMonth = dateString => {\n    const date = parseDate(dateString);\n    if (!date || isNaN(date)) return 'Data inválida';\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const dayOfMonth = date.getDate();\n    const adjustedDate = dayOfMonth + firstDay.getDay() - 1;\n    return Math.ceil(adjustedDate / 7);\n  };\n\n  // Combinar os dados das abas Previsão e Entrega\n  const combinedData = useMemo(() => {\n    if (!previsaoData.length || !entregaData.length) return [];\n    return previsaoData.map(previsaoItem => {\n      const entregas = entregaData.filter(item => item.Codigo === previsaoItem.Codigo && item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']);\n      const quantidadeEntregue = entregas.reduce((acc, curr) => acc + (curr['Quantidade Entregue'] || 0), 0);\n      const quantidadeFaltante = Math.max((previsaoItem['Quantidade Prevista'] || 0) - quantidadeEntregue, 0);\n      return {\n        ...previsaoItem,\n        QuantidadeEntregue: quantidadeEntregue,\n        QuantidadeFaltante: quantidadeFaltante,\n        SemanaPrevisao: `${getWeekOfMonth(previsaoItem['Data de Previsão de Entrega'])}ª Semana`\n      };\n    });\n  }, [previsaoData, entregaData]);\n\n  // Carregar dados ao montar o componente\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setError(null);\n        setLoading(true);\n        await Promise.all([fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao', setPrevisaoData), fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega', setEntregaData)]);\n      } catch (error) {\n        console.error('Erro ao carregar dados:', error);\n        setError('Erro ao carregar dados. Tente recarregar a página.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n    return () => axiosSource.cancel('Componente desmontado');\n  }, []);\n\n  // Função para estilizar a célula de quantidade faltante\n  const getFaltanteStyle = value => {\n    if (value <= 0) return 'faltante-green';\n    if (value <= 100) return 'faltante-yellow';\n    return 'faltante-red';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dados Compilados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: ['Código', 'Produto', 'Quantidade Prevista', 'Data de Previsão', 'Semana', 'Entregue', 'Faltante'].map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: combinedData.map((row, index) => {\n          const dataPrevisao = parseDate(row['Data de Previsão de Entrega']);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.Codigo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.Produto\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row['Quantidade Prevista']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dataPrevisao ? dataPrevisao.toLocaleDateString('pt-BR') : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.SemanaPrevisao\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.QuantidadeEntregue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: getFaltanteStyle(row.QuantidadeFaltante),\n              children: row.QuantidadeFaltante\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)]\n          }, `${row.Codigo}-${row['Data de Previsão de Entrega']}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OB9L2geWW/ktYcc/gtvMEr8WX/M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","axios","Papa","jsxDEV","_jsxDEV","axiosSource","CancelToken","source","App","_s","previsaoData","setPrevisaoData","entregaData","setEntregaData","loading","setLoading","error","setError","parseDate","dateString","day","month","year","split","Date","fetchSheetData","url","setData","response","get","cancelToken","token","Promise","resolve","reject","parse","data","header","skipEmptyLines","dynamicTyping","complete","result","isCancel","getWeekOfMonth","date","isNaN","firstDay","getFullYear","getMonth","dayOfMonth","getDate","adjustedDate","getDay","Math","ceil","combinedData","length","map","previsaoItem","entregas","filter","item","Codigo","quantidadeEntregue","reduce","acc","curr","quantidadeFaltante","max","QuantidadeEntregue","QuantidadeFaltante","SemanaPrevisao","fetchData","all","console","cancel","getFaltanteStyle","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","row","index","dataPrevisao","Produto","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/App.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\nimport './App.css';\r\n\r\nconst axiosSource = axios.CancelToken.source();\r\n\r\nconst App = () => {\r\n  const [previsaoData, setPrevisaoData] = useState([]);\r\n  const [entregaData, setEntregaData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n\r\n    const [day, month, year] = dateString.split('/');\r\n    return new Date(`${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Função genérica para buscar dados de uma planilha\r\n  const fetchSheetData = async (url, setData) => {\r\n    try {\r\n      const response = await axios.get(url, {\r\n        cancelToken: axiosSource.token,\r\n      });\r\n\r\n      return new Promise((resolve, reject) => {\r\n        Papa.parse(response.data, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          dynamicTyping: true,\r\n          complete: (result) => {\r\n            setData(result.data);\r\n            resolve();\r\n          },\r\n          error: (error) => reject(error),\r\n        });\r\n      });\r\n    } catch (error) {\r\n      if (!axios.isCancel(error)) {\r\n        throw error;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Função para calcular a semana do mês\r\n  const getWeekOfMonth = (dateString) => {\r\n    const date = parseDate(dateString);\r\n    if (!date || isNaN(date)) return 'Data inválida';\r\n\r\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const dayOfMonth = date.getDate();\r\n    const adjustedDate = dayOfMonth + firstDay.getDay() - 1;\r\n    return Math.ceil(adjustedDate / 7);\r\n  };\r\n\r\n  // Combinar os dados das abas Previsão e Entrega\r\n  const combinedData = useMemo(() => {\r\n    if (!previsaoData.length || !entregaData.length) return [];\r\n\r\n    return previsaoData.map((previsaoItem) => {\r\n      const entregas = entregaData.filter(\r\n        (item) =>\r\n          item.Codigo === previsaoItem.Codigo &&\r\n          item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']\r\n      );\r\n\r\n      const quantidadeEntregue = entregas.reduce(\r\n        (acc, curr) => acc + (curr['Quantidade Entregue'] || 0),\r\n        0\r\n      );\r\n\r\n      const quantidadeFaltante = Math.max(\r\n        (previsaoItem['Quantidade Prevista'] || 0) - quantidadeEntregue,\r\n        0\r\n      );\r\n\r\n      return {\r\n        ...previsaoItem,\r\n        QuantidadeEntregue: quantidadeEntregue,\r\n        QuantidadeFaltante: quantidadeFaltante,\r\n        SemanaPrevisao: `${getWeekOfMonth(previsaoItem['Data de Previsão de Entrega'])}ª Semana`,\r\n      };\r\n    });\r\n  }, [previsaoData, entregaData]);\r\n\r\n  // Carregar dados ao montar o componente\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setError(null);\r\n        setLoading(true);\r\n\r\n        await Promise.all([\r\n          fetchSheetData(\r\n            'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao',\r\n            setPrevisaoData\r\n          ),\r\n          fetchSheetData(\r\n            'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega',\r\n            setEntregaData\r\n          ),\r\n        ]);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar dados:', error);\r\n        setError('Erro ao carregar dados. Tente recarregar a página.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    return () => axiosSource.cancel('Componente desmontado');\r\n  }, []);\r\n\r\n  // Função para estilizar a célula de quantidade faltante\r\n  const getFaltanteStyle = (value) => {\r\n    if (value <= 0) return 'faltante-green';\r\n    if (value <= 100) return 'faltante-yellow';\r\n    return 'faltante-red';\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Dados Compilados</h1>\r\n\r\n      {loading && <div className=\"loading\">Carregando...</div>}\r\n\r\n      {error && <div className=\"error\">{error}</div>}\r\n\r\n      {!loading && !error && (\r\n        <table className=\"data-table\">\r\n          <thead>\r\n            <tr>\r\n              {[\r\n                'Código',\r\n                'Produto',\r\n                'Quantidade Prevista',\r\n                'Data de Previsão',\r\n                'Semana',\r\n                'Entregue',\r\n                'Faltante',\r\n              ].map((header) => (\r\n                <th key={header}>{header}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {combinedData.map((row, index) => {\r\n              const dataPrevisao = parseDate(row['Data de Previsão de Entrega']);\r\n\r\n              return (\r\n                <tr key={`${row.Codigo}-${row['Data de Previsão de Entrega']}-${index}`}>\r\n                  <td>{row.Codigo}</td>\r\n                  <td>{row.Produto}</td>\r\n                  <td>{row['Quantidade Prevista']}</td>\r\n                  <td>{dataPrevisao ? dataPrevisao.toLocaleDateString('pt-BR') : 'N/A'}</td>\r\n                  <td>{row.SemanaPrevisao}</td>\r\n                  <td>{row.QuantidadeEntregue}</td>\r\n                  <td className={getFaltanteStyle(row.QuantidadeFaltante)}>\r\n                    {row.QuantidadeFaltante}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}