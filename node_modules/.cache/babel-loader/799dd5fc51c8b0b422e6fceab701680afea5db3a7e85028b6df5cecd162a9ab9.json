{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport Papa from 'papaparse';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Tooltip, Legend } from 'chart.js';\nimport ReactPaginate from 'react-paginate';\nimport * as XLSX from 'xlsx';\nimport { format } from 'date-fns'; // Importa a função format do date-fns\nimport './App.css';\n\n// Registra os componentes necessários do Chart.js\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, Legend);\nconst Home = () => {\n  _s();\n  const [previsaoData, setPrevisaoData] = useState([]);\n  const [entregaData, setEntregaData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias');\n  const [dataInicio, setDataInicio] = useState('');\n  const [dataFim, setDataFim] = useState('');\n  const [produtoFiltro, setProdutoFiltro] = useState('');\n  const [situacaoFiltro, setSituacaoFiltro] = useState('');\n  const [mostrarAtrasados, setMostrarAtrasados] = useState(false); // Estado para atrasados\n  const [darkMode, setDarkMode] = useState(false);\n  const [currentPage, setCurrentPage] = useState(0); // Paginação\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  }); // Ordenação\n  const navigate = useNavigate();\n\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\n  const parseDate = dateString => {\n    if (!dateString) return null;\n    const [day, month, year] = dateString.split('/').map(Number); // Converte os valores para números\n    return new Date(year, month - 1, day); // Cria a data no fuso horário local\n  };\n\n  // Função genérica para buscar dados de uma planilha\n  const fetchSheetData = async (url, setData) => {\n    try {\n      const response = await axios.get(url);\n      return new Promise((resolve, reject) => {\n        Papa.parse(response.data, {\n          header: true,\n          skipEmptyLines: true,\n          dynamicTyping: true,\n          complete: result => {\n            if (result.data && result.data.length > 0) {\n              setData(result.data);\n              resolve();\n            } else {\n              reject(new Error('Dados não encontrados na planilha.'));\n            }\n          },\n          error: error => {\n            console.error('Erro ao processar CSV:', error);\n            reject(error);\n          }\n        });\n      });\n    } catch (error) {\n      if (!axios.isCancel(error)) {\n        throw error;\n      }\n    }\n  };\n\n  // Combinar os dados das abas Previsão e Entrega\n  const combinedData = useMemo(() => {\n    if (!previsaoData.length || !entregaData.length) return [];\n    return previsaoData.map(previsaoItem => {\n      const entregas = entregaData.filter(item => item.Codigo === previsaoItem.Codigo && item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']);\n      const quantidadeEntregue = entregas.reduce((acc, curr) => acc + (curr['Quantidade Entregue'] || 0), 0);\n      const diferenca = (quantidadeEntregue || 0) - (previsaoItem['Quantidade Prevista'] || 0);\n      const percentualEntrega = previsaoItem['Quantidade Prevista'] > 0 ? (quantidadeEntregue / previsaoItem['Quantidade Prevista'] * 100).toFixed(2) : 0;\n      return {\n        ...previsaoItem,\n        QuantidadeEntregue: quantidadeEntregue,\n        Diferenca: diferenca,\n        // Armazena a diferença (positiva ou negativa)\n        PercentualEntrega: parseFloat(percentualEntrega) // Percentual de entrega\n      };\n    });\n  }, [previsaoData, entregaData]);\n\n  // Lista de produtos únicos para o filtro\n  const produtosUnicos = useMemo(() => {\n    const produtos = combinedData.map(item => item.Produto);\n    return [...new Set(produtos)];\n  }, [combinedData]);\n\n  // Função para aplicar os filtros\n  const dadosFiltrados = useMemo(() => {\n    if (!combinedData.length) return [];\n    let filtrados = combinedData;\n\n    // Filtro por período\n    const hoje = new Date();\n    switch (periodoFiltro) {\n      case '30_dias':\n        const trintaDiasAtras = new Date();\n        trintaDiasAtras.setDate(hoje.getDate() - 30);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= trintaDiasAtras && dataPrevisao <= hoje;\n        });\n        break;\n      case 'proximos_30_dias':\n        const proximosTrintaDias = new Date();\n        proximosTrintaDias.setDate(hoje.getDate() + 30);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= hoje && dataPrevisao <= proximosTrintaDias;\n        });\n        break;\n      case 'mes_passado':\n        const primeiroDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth() - 1, 1);\n        const ultimoDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth(), 0);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= primeiroDiaMesPassado && dataPrevisao <= ultimoDiaMesPassado;\n        });\n        break;\n      case 'mes_atual':\n        const primeiroDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth(), 1);\n        const ultimoDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);\n        filtrados = filtrados.filter(item => {\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n          return dataPrevisao >= primeiroDiaMesAtual && dataPrevisao <= ultimoDiaMesAtual;\n        });\n        break;\n      case 'customizado':\n        if (dataInicio && dataFim) {\n          const inicio = parseDate(dataInicio);\n          const fim = parseDate(dataFim);\n          filtrados = filtrados.filter(item => {\n            const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n            return dataPrevisao >= inicio && dataPrevisao <= fim;\n          });\n        }\n        break;\n      default:\n        break;\n    }\n\n    // Filtro por nome do produto\n    if (produtoFiltro) {\n      filtrados = filtrados.filter(item => item.Produto === produtoFiltro);\n    }\n\n    // Filtro por situação (falta, excedente, igual)\n    if (situacaoFiltro === 'falta') {\n      filtrados = filtrados.filter(item => item.Diferenca < 0);\n    } else if (situacaoFiltro === 'excedente') {\n      filtrados = filtrados.filter(item => item.Diferenca > 0);\n    } else if (situacaoFiltro === 'igual') {\n      filtrados = filtrados.filter(item => item.Diferenca === 0);\n    }\n\n    // Filtro de atrasados\n    if (mostrarAtrasados) {\n      filtrados = filtrados.filter(item => {\n        const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n        const quantidadeEntregue = item.QuantidadeEntregue || 0;\n        const quantidadePrevista = item['Quantidade Prevista'] || 0;\n        return dataPrevisao && dataPrevisao < hoje && quantidadeEntregue < quantidadePrevista; // Apenas itens atrasados\n      });\n    }\n\n    // Ordenação\n    if (sortConfig.key) {\n      filtrados.sort((a, b) => {\n        let aValue = a[sortConfig.key];\n        let bValue = b[sortConfig.key];\n\n        // Tratamento especial para campos numéricos ou datas\n        if (sortConfig.key === 'Diferenca') {\n          aValue = a.Diferenca || 0;\n          bValue = b.Diferenca || 0;\n        } else if (sortConfig.key === 'Data de Previsão de Entrega') {\n          aValue = parseDate(a['Data de Previsão de Entrega']);\n          bValue = parseDate(b['Data de Previsão de Entrega']);\n        }\n        if (aValue < bValue) {\n          return sortConfig.direction === 'asc' ? -1 : 1;\n        }\n        if (aValue > bValue) {\n          return sortConfig.direction === 'asc' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return filtrados;\n  }, [combinedData, periodoFiltro, dataInicio, dataFim, produtoFiltro, situacaoFiltro, mostrarAtrasados, sortConfig]);\n\n  // Função para recarregar os dados\n  const reloadData = async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      await Promise.all([fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao', setPrevisaoData), fetchSheetData('https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega', setEntregaData)]);\n    } catch (error) {\n      console.error('Erro ao carregar dados:', error);\n      setError('Erro ao carregar dados. Verifique os links ou tente novamente mais tarde.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Carregar dados ao montar o componente\n  useEffect(() => {\n    reloadData();\n  }, []);\n\n  // Navegação para a página de resumo\n  const handleNavigateToResumo = () => {\n    navigate('/resumo', {\n      state: {\n        combinedData\n      }\n    });\n  };\n\n  // Função para estilizar a célula de percentual de entrega\n  const getPercentualStyle = percentual => {\n    if (percentual < 40) return 'percentual-red'; // Vermelho\n    if (percentual >= 40 && percentual <= 90) return 'percentual-orange'; // Laranja\n    return 'percentual-green'; // Verde\n  };\n\n  // Função para alternar o modo escuro\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.classList.toggle('dark-mode', !darkMode);\n  };\n\n  // Função para exportar dados para Excel\n  const exportToExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(dadosFiltrados);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Dados Filtrados');\n    XLSX.writeFile(workbook, 'dados_filtrados.xlsx');\n  };\n\n  // Função para lidar com a ordenação\n  const handleSort = key => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  // Configuração da paginação\n  const itemsPerPage = 10; // Número de itens por página\n  const pageCount = Math.ceil(dadosFiltrados.length / itemsPerPage);\n  const paginatedData = useMemo(() => {\n    const start = currentPage * itemsPerPage;\n    const end = start + itemsPerPage;\n    return dadosFiltrados.slice(start, end);\n  }, [dadosFiltrados, currentPage]);\n\n  // Função para mudar de página\n  const handlePageClick = ({\n    selected\n  }) => {\n    setCurrentPage(selected);\n  };\n\n  // Cálculo do painel de resumo\n  const totalPrevisto = dadosFiltrados.reduce((acc, curr) => acc + (curr['Quantidade Prevista'] || 0), 0);\n  const totalEntregue = dadosFiltrados.reduce((acc, curr) => acc + (curr.QuantidadeEntregue || 0), 0);\n  const totalFalta = dadosFiltrados.reduce((acc, curr) => acc + Math.max(0, (curr['Quantidade Prevista'] || 0) - (curr.QuantidadeEntregue || 0)), 0);\n  const totalExcedente = dadosFiltrados.reduce((acc, curr) => acc + Math.max(0, (curr.QuantidadeEntregue || 0) - (curr['Quantidade Prevista'] || 0)), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dados Compilados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Previsto:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), \" \", totalPrevisto]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Entregue:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), \" \", totalEntregue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Falta:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), \" \", totalFalta]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Excedente:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), \" \", totalExcedente]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDarkMode,\n        children: darkMode ? 'Modo Claro' : 'Modo Escuro'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportToExcel,\n        children: \"Exportar para Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setMostrarAtrasados(!mostrarAtrasados),\n        children: mostrarAtrasados ? 'Mostrar Todos' : 'Mostrar Atrasados'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filtros\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Per\\xEDodo:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: periodoFiltro,\n          onChange: e => setPeriodoFiltro(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"30_dias\",\n            children: \"\\xDAltimos 30 dias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"proximos_30_dias\",\n            children: \"Pr\\xF3ximos 30 dias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mes_passado\",\n            children: \"M\\xEAs Passado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mes_atual\",\n            children: \"M\\xEAs Atual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"customizado\",\n            children: \"Intervalo Customizado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), periodoFiltro === 'customizado' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data In\\xEDcio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataInicio,\n            onChange: e => setDataInicio(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data Fim:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataFim,\n            onChange: e => setDataFim(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Produto:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: produtoFiltro,\n          onChange: e => setProdutoFiltro(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), produtosUnicos.map(produto => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: produto,\n            children: produto\n          }, produto, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Situa\\xE7\\xE3o:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: situacaoFiltro,\n          onChange: e => setSituacaoFiltro(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Todas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"falta\",\n            children: \"Falta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"excedente\",\n            children: \"Excedente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"igual\",\n            children: \"Igual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Ordenar Por:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortConfig.key,\n          onChange: e => handleSort(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Diferenca\",\n            children: \"Mais Faltantes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"QuantidadeEntregue\",\n            children: \"Mais Excedentes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Data de Previs\\xE3o de Entrega\",\n            children: \"Data de Previs\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reloadData,\n        disabled: loading,\n        children: \"Recarregar Dados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/resumo\",\n        state: {\n          combinedData\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"resumo-button\",\n          children: \"Ver Resumo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [\"Carregando... \", /*#__PURE__*/_jsxDEV(\"progress\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: ['Código', 'Produto', 'Quantidade Prevista', 'Data de Previsão', 'Dia da Entrega', 'Entregue', 'Percentual', 'Status'].map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort(header.toLowerCase().replace(/ /g, '_')),\n              children: header\n            }, header, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: paginatedData.map((row, index) => {\n            const dataPrevisao = parseDate(row['Data de Previsão de Entrega']);\n            const diferenca = row.Diferenca; // Diferença entre entregue e previsto\n            const isExcedente = diferenca > 0; // Verifica se há excedente\n            const isAtrasado = dataPrevisao && dataPrevisao < new Date() && (row.QuantidadeEntregue || 0) < (row['Quantidade Prevista'] || 0); // Lógica atualizada\n\n            // Calcula o valor máximo do eixo X\n            const maxValue = Math.max(row['Quantidade Prevista'], row.QuantidadeEntregue);\n\n            // Ícone informativo com base na diferença\n            const statusIcon = () => {\n              if (isAtrasado) {\n                return '⚡'; // Atrasado\n              } else if (diferenca === 0) {\n                return '✅'; // Entrega completa\n              } else if (diferenca > 0) {\n                return '✅'; // Excedente\n              } else {\n                return '❌'; // Falta\n              }\n            };\n\n            // Dados para o gráfico\n            const chartData = {\n              labels: ['Previsto', 'Entregue'],\n              datasets: [{\n                label: 'Valores',\n                data: [row['Quantidade Prevista'], row.QuantidadeEntregue],\n                backgroundColor: ['#f0ad4e', '#5cb85c'],\n                // Amarelo para previsto, verde para entregue\n                borderColor: ['#f0ad4e', '#5cb85c'],\n                borderWidth: 1\n              }]\n            };\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: isAtrasado ? 'atrasado' : getFaltanteStyle(diferenca),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.Codigo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.Produto\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row['Quantidade Prevista']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: dataPrevisao ? format(dataPrevisao, 'dd/MM/yyyy') : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row['Dia da Entrega'] || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 23\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.QuantidadeEntregue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: getPercentualStyle(row.PercentualEntrega),\n                  children: [row.PercentualEntrega, \"% \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [statusIcon(), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"8\",\n                  style: {\n                    padding: '10px 0'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: '100%',\n                      height: '150px'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Bar, {\n                      data: chartData,\n                      options: {\n                        indexAxis: 'y',\n                        // Define o gráfico como horizontal\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        // Permite ajustar o tamanho manualmente\n                        plugins: {\n                          legend: {\n                            display: false // Oculta a legenda\n                          },\n                          tooltip: {\n                            enabled: true\n                          }\n                        },\n                        scales: {\n                          x: {\n                            beginAtZero: true,\n                            max: maxValue // Valor máximo dinâmico\n                          },\n                          y: {\n                            barPercentage: 0.8,\n                            // Ajusta a largura das barras\n                            categoryPercentage: 0.8 // Ajusta o espaçamento entre as categorias\n                          }\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 21\n              }, this)]\n            }, `${row.Codigo}-${row['Data de Previsão de Entrega']}-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: 'Anterior',\n        nextLabel: 'Próximo',\n        breakLabel: '...',\n        pageCount: pageCount,\n        marginPagesDisplayed: 2,\n        pageRangeDisplayed: 5,\n        onPageChange: handlePageClick,\n        containerClassName: 'pagination',\n        activeClassName: 'active'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"JLdLcmJM5PTl9MKM95vm/ahuAqA=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","axios","axiosRetry","Papa","useNavigate","Link","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Tooltip","Legend","ReactPaginate","XLSX","format","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Home","_s","previsaoData","setPrevisaoData","entregaData","setEntregaData","loading","setLoading","error","setError","periodoFiltro","setPeriodoFiltro","dataInicio","setDataInicio","dataFim","setDataFim","produtoFiltro","setProdutoFiltro","situacaoFiltro","setSituacaoFiltro","mostrarAtrasados","setMostrarAtrasados","darkMode","setDarkMode","currentPage","setCurrentPage","sortConfig","setSortConfig","key","direction","navigate","parseDate","dateString","day","month","year","split","map","Number","Date","fetchSheetData","url","setData","response","get","Promise","resolve","reject","parse","data","header","skipEmptyLines","dynamicTyping","complete","result","length","Error","console","isCancel","combinedData","previsaoItem","entregas","filter","item","Codigo","quantidadeEntregue","reduce","acc","curr","diferenca","percentualEntrega","toFixed","QuantidadeEntregue","Diferenca","PercentualEntrega","parseFloat","produtosUnicos","produtos","Produto","Set","dadosFiltrados","filtrados","hoje","trintaDiasAtras","setDate","getDate","dataPrevisao","proximosTrintaDias","primeiroDiaMesPassado","getFullYear","getMonth","ultimoDiaMesPassado","primeiroDiaMesAtual","ultimoDiaMesAtual","inicio","fim","quantidadePrevista","sort","a","b","aValue","bValue","reloadData","all","handleNavigateToResumo","state","getPercentualStyle","percentual","toggleDarkMode","document","body","classList","toggle","exportToExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","handleSort","itemsPerPage","pageCount","Math","ceil","paginatedData","start","end","slice","handlePageClick","selected","totalPrevisto","totalEntregue","totalFalta","max","totalExcedente","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","type","produto","disabled","to","toLowerCase","replace","row","index","isExcedente","isAtrasado","maxValue","statusIcon","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","getFaltanteStyle","colSpan","style","padding","width","height","options","indexAxis","responsive","maintainAspectRatio","plugins","legend","display","tooltip","enabled","scales","x","beginAtZero","y","barPercentage","categoryPercentage","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/home.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport Papa from 'papaparse';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport ReactPaginate from 'react-paginate';\r\nimport * as XLSX from 'xlsx';\r\nimport { format } from 'date-fns'; // Importa a função format do date-fns\r\nimport './App.css';\r\n\r\n// Registra os componentes necessários do Chart.js\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, Legend);\r\n\r\nconst Home = () => {\r\n  const [previsaoData, setPrevisaoData] = useState([]);\r\n  const [entregaData, setEntregaData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [periodoFiltro, setPeriodoFiltro] = useState('30_dias');\r\n  const [dataInicio, setDataInicio] = useState('');\r\n  const [dataFim, setDataFim] = useState('');\r\n  const [produtoFiltro, setProdutoFiltro] = useState('');\r\n  const [situacaoFiltro, setSituacaoFiltro] = useState('');\r\n  const [mostrarAtrasados, setMostrarAtrasados] = useState(false); // Estado para atrasados\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(0); // Paginação\r\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' }); // Ordenação\r\n  const navigate = useNavigate();\r\n\r\n  // Função para converter datas no formato dd/mm/aaaa para um objeto Date\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    const [day, month, year] = dateString.split('/').map(Number); // Converte os valores para números\r\n    return new Date(year, month - 1, day); // Cria a data no fuso horário local\r\n  };\r\n\r\n  // Função genérica para buscar dados de uma planilha\r\n  const fetchSheetData = async (url, setData) => {\r\n    try {\r\n      const response = await axios.get(url);\r\n      return new Promise((resolve, reject) => {\r\n        Papa.parse(response.data, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          dynamicTyping: true,\r\n          complete: (result) => {\r\n            if (result.data && result.data.length > 0) {\r\n              setData(result.data);\r\n              resolve();\r\n            } else {\r\n              reject(new Error('Dados não encontrados na planilha.'));\r\n            }\r\n          },\r\n          error: (error) => {\r\n            console.error('Erro ao processar CSV:', error);\r\n            reject(error);\r\n          },\r\n        });\r\n      });\r\n    } catch (error) {\r\n      if (!axios.isCancel(error)) {\r\n        throw error;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Combinar os dados das abas Previsão e Entrega\r\n  const combinedData = useMemo(() => {\r\n    if (!previsaoData.length || !entregaData.length) return [];\r\n    return previsaoData.map((previsaoItem) => {\r\n      const entregas = entregaData.filter(\r\n        (item) =>\r\n          item.Codigo === previsaoItem.Codigo &&\r\n          item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']\r\n      );\r\n      const quantidadeEntregue = entregas.reduce(\r\n        (acc, curr) => acc + (curr['Quantidade Entregue'] || 0),\r\n        0\r\n      );\r\n      const diferenca = (quantidadeEntregue || 0) - (previsaoItem['Quantidade Prevista'] || 0);\r\n      const percentualEntrega =\r\n        previsaoItem['Quantidade Prevista'] > 0\r\n          ? ((quantidadeEntregue / previsaoItem['Quantidade Prevista']) * 100).toFixed(2)\r\n          : 0;\r\n\r\n      return {\r\n        ...previsaoItem,\r\n        QuantidadeEntregue: quantidadeEntregue,\r\n        Diferenca: diferenca, // Armazena a diferença (positiva ou negativa)\r\n        PercentualEntrega: parseFloat(percentualEntrega), // Percentual de entrega\r\n      };\r\n    });\r\n  }, [previsaoData, entregaData]);\r\n\r\n  // Lista de produtos únicos para o filtro\r\n  const produtosUnicos = useMemo(() => {\r\n    const produtos = combinedData.map((item) => item.Produto);\r\n    return [...new Set(produtos)];\r\n  }, [combinedData]);\r\n\r\n  // Função para aplicar os filtros\r\n  const dadosFiltrados = useMemo(() => {\r\n    if (!combinedData.length) return [];\r\n    let filtrados = combinedData;\r\n\r\n    // Filtro por período\r\n    const hoje = new Date();\r\n    switch (periodoFiltro) {\r\n      case '30_dias':\r\n        const trintaDiasAtras = new Date();\r\n        trintaDiasAtras.setDate(hoje.getDate() - 30);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= trintaDiasAtras && dataPrevisao <= hoje;\r\n        });\r\n        break;\r\n      case 'proximos_30_dias':\r\n        const proximosTrintaDias = new Date();\r\n        proximosTrintaDias.setDate(hoje.getDate() + 30);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= hoje && dataPrevisao <= proximosTrintaDias;\r\n        });\r\n        break;\r\n      case 'mes_passado':\r\n        const primeiroDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth() - 1, 1);\r\n        const ultimoDiaMesPassado = new Date(hoje.getFullYear(), hoje.getMonth(), 0);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= primeiroDiaMesPassado && dataPrevisao <= ultimoDiaMesPassado;\r\n        });\r\n        break;\r\n      case 'mes_atual':\r\n        const primeiroDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth(), 1);\r\n        const ultimoDiaMesAtual = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);\r\n        filtrados = filtrados.filter((item) => {\r\n          const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n          return dataPrevisao >= primeiroDiaMesAtual && dataPrevisao <= ultimoDiaMesAtual;\r\n        });\r\n        break;\r\n      case 'customizado':\r\n        if (dataInicio && dataFim) {\r\n          const inicio = parseDate(dataInicio);\r\n          const fim = parseDate(dataFim);\r\n          filtrados = filtrados.filter((item) => {\r\n            const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n            return dataPrevisao >= inicio && dataPrevisao <= fim;\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Filtro por nome do produto\r\n    if (produtoFiltro) {\r\n      filtrados = filtrados.filter((item) => item.Produto === produtoFiltro);\r\n    }\r\n\r\n    // Filtro por situação (falta, excedente, igual)\r\n    if (situacaoFiltro === 'falta') {\r\n      filtrados = filtrados.filter((item) => item.Diferenca < 0);\r\n    } else if (situacaoFiltro === 'excedente') {\r\n      filtrados = filtrados.filter((item) => item.Diferenca > 0);\r\n    } else if (situacaoFiltro === 'igual') {\r\n      filtrados = filtrados.filter((item) => item.Diferenca === 0);\r\n    }\r\n\r\n    // Filtro de atrasados\r\n    if (mostrarAtrasados) {\r\n      filtrados = filtrados.filter((item) => {\r\n        const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n        const quantidadeEntregue = item.QuantidadeEntregue || 0;\r\n        const quantidadePrevista = item['Quantidade Prevista'] || 0;\r\n        return (\r\n          dataPrevisao &&\r\n          dataPrevisao < hoje &&\r\n          quantidadeEntregue < quantidadePrevista\r\n        ); // Apenas itens atrasados\r\n      });\r\n    }\r\n\r\n    // Ordenação\r\n    if (sortConfig.key) {\r\n      filtrados.sort((a, b) => {\r\n        let aValue = a[sortConfig.key];\r\n        let bValue = b[sortConfig.key];\r\n\r\n        // Tratamento especial para campos numéricos ou datas\r\n        if (sortConfig.key === 'Diferenca') {\r\n          aValue = a.Diferenca || 0;\r\n          bValue = b.Diferenca || 0;\r\n        } else if (sortConfig.key === 'Data de Previsão de Entrega') {\r\n          aValue = parseDate(a['Data de Previsão de Entrega']);\r\n          bValue = parseDate(b['Data de Previsão de Entrega']);\r\n        }\r\n\r\n        if (aValue < bValue) {\r\n          return sortConfig.direction === 'asc' ? -1 : 1;\r\n        }\r\n        if (aValue > bValue) {\r\n          return sortConfig.direction === 'asc' ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return filtrados;\r\n  }, [combinedData, periodoFiltro, dataInicio, dataFim, produtoFiltro, situacaoFiltro, mostrarAtrasados, sortConfig]);\r\n\r\n  // Função para recarregar os dados\r\n  const reloadData = async () => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n      await Promise.all([\r\n        fetchSheetData(\r\n          'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao',\r\n          setPrevisaoData\r\n        ),\r\n        fetchSheetData(\r\n          'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega',\r\n          setEntregaData\r\n        ),\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar dados:', error);\r\n      setError('Erro ao carregar dados. Verifique os links ou tente novamente mais tarde.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Carregar dados ao montar o componente\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, []);\r\n\r\n  // Navegação para a página de resumo\r\n  const handleNavigateToResumo = () => {\r\n    navigate('/resumo', { state: { combinedData } });\r\n  };\r\n\r\n  // Função para estilizar a célula de percentual de entrega\r\n  const getPercentualStyle = (percentual) => {\r\n    if (percentual < 40) return 'percentual-red'; // Vermelho\r\n    if (percentual >= 40 && percentual <= 90) return 'percentual-orange'; // Laranja\r\n    return 'percentual-green'; // Verde\r\n  };\r\n\r\n  // Função para alternar o modo escuro\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n    document.body.classList.toggle('dark-mode', !darkMode);\r\n  };\r\n\r\n  // Função para exportar dados para Excel\r\n  const exportToExcel = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(dadosFiltrados);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Dados Filtrados');\r\n    XLSX.writeFile(workbook, 'dados_filtrados.xlsx');\r\n  };\r\n\r\n  // Função para lidar com a ordenação\r\n  const handleSort = (key) => {\r\n    let direction = 'asc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  // Configuração da paginação\r\n  const itemsPerPage = 10; // Número de itens por página\r\n  const pageCount = Math.ceil(dadosFiltrados.length / itemsPerPage);\r\n  const paginatedData = useMemo(() => {\r\n    const start = currentPage * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    return dadosFiltrados.slice(start, end);\r\n  }, [dadosFiltrados, currentPage]);\r\n\r\n  // Função para mudar de página\r\n  const handlePageClick = ({ selected }) => {\r\n    setCurrentPage(selected);\r\n  };\r\n\r\n  // Cálculo do painel de resumo\r\n  const totalPrevisto = dadosFiltrados.reduce((acc, curr) => acc + (curr['Quantidade Prevista'] || 0), 0);\r\n  const totalEntregue = dadosFiltrados.reduce((acc, curr) => acc + (curr.QuantidadeEntregue || 0), 0);\r\n  const totalFalta = dadosFiltrados.reduce((acc, curr) => acc + Math.max(0, (curr['Quantidade Prevista'] || 0) - (curr.QuantidadeEntregue || 0)), 0);\r\n  const totalExcedente = dadosFiltrados.reduce((acc, curr) => acc + Math.max(0, (curr.QuantidadeEntregue || 0) - (curr['Quantidade Prevista'] || 0)), 0);\r\n\r\n  return (\r\n    <div className={`container ${darkMode ? 'dark-mode' : ''}`}>\r\n      <h1>Dados Compilados</h1>\r\n\r\n      {/* Painel de Resumo */}\r\n      <div className=\"summary-panel\">\r\n        <div>\r\n          <strong>Total Previsto:</strong> {totalPrevisto}\r\n        </div>\r\n        <div>\r\n          <strong>Total Entregue:</strong> {totalEntregue}\r\n        </div>\r\n        <div>\r\n          <strong>Falta:</strong> {totalFalta}\r\n        </div>\r\n        <div>\r\n          <strong>Excedente:</strong> {totalExcedente}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Botões de Ação */}\r\n      <div className=\"actions\">\r\n        <button onClick={toggleDarkMode}>\r\n          {darkMode ? 'Modo Claro' : 'Modo Escuro'}\r\n        </button>\r\n        <button onClick={exportToExcel}>Exportar para Excel</button>\r\n        <button onClick={() => setMostrarAtrasados(!mostrarAtrasados)}>\r\n          {mostrarAtrasados ? 'Mostrar Todos' : 'Mostrar Atrasados'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Filtros */}\r\n      <div className=\"filtros\">\r\n        <label>\r\n          Período:\r\n          <select\r\n            value={periodoFiltro}\r\n            onChange={(e) => setPeriodoFiltro(e.target.value)}\r\n          >\r\n            <option value=\"30_dias\">Últimos 30 dias</option>\r\n            <option value=\"proximos_30_dias\">Próximos 30 dias</option>\r\n            <option value=\"mes_passado\">Mês Passado</option>\r\n            <option value=\"mes_atual\">Mês Atual</option>\r\n            <option value=\"customizado\">Intervalo Customizado</option>\r\n          </select>\r\n        </label>\r\n        {periodoFiltro === 'customizado' && (\r\n          <div>\r\n            <label>\r\n              Data Início:\r\n              <input\r\n                type=\"date\"\r\n                value={dataInicio}\r\n                onChange={(e) => setDataInicio(e.target.value)}\r\n              />\r\n            </label>\r\n            <label>\r\n              Data Fim:\r\n              <input\r\n                type=\"date\"\r\n                value={dataFim}\r\n                onChange={(e) => setDataFim(e.target.value)}\r\n              />\r\n            </label>\r\n          </div>\r\n        )}\r\n        <label>\r\n          Produto:\r\n          <select\r\n            value={produtoFiltro}\r\n            onChange={(e) => setProdutoFiltro(e.target.value)}\r\n          >\r\n            <option value=\"\">Todos</option>\r\n            {produtosUnicos.map((produto) => (\r\n              <option key={produto} value={produto}>\r\n                {produto}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Situação:\r\n          <select\r\n            value={situacaoFiltro}\r\n            onChange={(e) => setSituacaoFiltro(e.target.value)}\r\n          >\r\n            <option value=\"\">Todas</option>\r\n            <option value=\"falta\">Falta</option>\r\n            <option value=\"excedente\">Excedente</option>\r\n            <option value=\"igual\">Igual</option>\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Ordenar Por:\r\n          <select\r\n            value={sortConfig.key}\r\n            onChange={(e) => handleSort(e.target.value)}\r\n          >\r\n            <option value=\"\">Selecione</option>\r\n            <option value=\"Diferenca\">Mais Faltantes</option>\r\n            <option value=\"QuantidadeEntregue\">Mais Excedentes</option>\r\n            <option value=\"Data de Previsão de Entrega\">Data de Previsão</option>\r\n          </select>\r\n        </label>\r\n        <button onClick={reloadData} disabled={loading}>\r\n          Recarregar Dados\r\n        </button>\r\n        <Link to=\"/resumo\" state={{ combinedData }}>\r\n          <button className=\"resumo-button\">Ver Resumo</button>\r\n        </Link>\r\n      </div>\r\n\r\n      {loading && (\r\n        <div className=\"loading\">\r\n          Carregando... <progress />\r\n        </div>\r\n      )}\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {!loading && !error && (\r\n        <>\r\n          <table className=\"data-table\">\r\n            <thead>\r\n              <tr>\r\n                {[\r\n                  'Código',\r\n                  'Produto',\r\n                  'Quantidade Prevista',\r\n                  'Data de Previsão',\r\n                  'Dia da Entrega',\r\n                  'Entregue',\r\n                  'Percentual',\r\n                  'Status',\r\n                ].map((header) => (\r\n                  <th key={header} onClick={() => handleSort(header.toLowerCase().replace(/ /g, '_'))}>\r\n                    {header}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {paginatedData.map((row, index) => {\r\n                const dataPrevisao = parseDate(row['Data de Previsão de Entrega']);\r\n                const diferenca = row.Diferenca; // Diferença entre entregue e previsto\r\n                const isExcedente = diferenca > 0; // Verifica se há excedente\r\n                const isAtrasado =\r\n                  dataPrevisao &&\r\n                  dataPrevisao < new Date() &&\r\n                  (row.QuantidadeEntregue || 0) < (row['Quantidade Prevista'] || 0); // Lógica atualizada\r\n\r\n                // Calcula o valor máximo do eixo X\r\n                const maxValue = Math.max(\r\n                  row['Quantidade Prevista'],\r\n                  row.QuantidadeEntregue\r\n                );\r\n\r\n                // Ícone informativo com base na diferença\r\n                const statusIcon = () => {\r\n                  if (isAtrasado) {\r\n                    return '⚡'; // Atrasado\r\n                  } else if (diferenca === 0) {\r\n                    return '✅'; // Entrega completa\r\n                  } else if (diferenca > 0) {\r\n                    return '✅'; // Excedente\r\n                  } else {\r\n                    return '❌'; // Falta\r\n                  }\r\n                };\r\n\r\n                // Dados para o gráfico\r\n                const chartData = {\r\n                  labels: ['Previsto', 'Entregue'],\r\n                  datasets: [\r\n                    {\r\n                      label: 'Valores',\r\n                      data: [row['Quantidade Prevista'], row.QuantidadeEntregue],\r\n                      backgroundColor: ['#f0ad4e', '#5cb85c'], // Amarelo para previsto, verde para entregue\r\n                      borderColor: ['#f0ad4e', '#5cb85c'],\r\n                      borderWidth: 1,\r\n                    },\r\n                  ],\r\n                };\r\n\r\n                return (\r\n                  <React.Fragment key={`${row.Codigo}-${row['Data de Previsão de Entrega']}-${index}`}>\r\n                    <tr className={isAtrasado ? 'atrasado' : getFaltanteStyle(diferenca)}>\r\n                      <td>{row.Codigo}</td>\r\n                      <td>{row.Produto}</td>\r\n                      <td>{row['Quantidade Prevista']}</td>\r\n                      <td>{dataPrevisao ? format(dataPrevisao, 'dd/MM/yyyy') : 'N/A'}</td>\r\n                      <td>{row['Dia da Entrega'] || 'N/A'}</td> {/* Nova coluna: Dia da Entrega */}\r\n                      <td>{row.QuantidadeEntregue}</td>\r\n                      <td className={getPercentualStyle(row.PercentualEntrega)}>\r\n                        {row.PercentualEntrega}% {/* Percentual de Entrega */}\r\n                      </td>\r\n                      <td>\r\n                        {statusIcon()} {/* Ícone informativo */}\r\n                      </td>\r\n                    </tr>\r\n                    {/* Gráfico abaixo da linha */}\r\n                    <tr>\r\n                      <td colSpan=\"8\" style={{ padding: '10px 0' }}>\r\n                        <div style={{ width: '100%', height: '150px' }}>\r\n                          <Bar\r\n                            data={chartData}\r\n                            options={{\r\n                              indexAxis: 'y', // Define o gráfico como horizontal\r\n                              responsive: true,\r\n                              maintainAspectRatio: false, // Permite ajustar o tamanho manualmente\r\n                              plugins: {\r\n                                legend: {\r\n                                  display: false, // Oculta a legenda\r\n                                },\r\n                                tooltip: {\r\n                                  enabled: true,\r\n                                },\r\n                              },\r\n                              scales: {\r\n                                x: {\r\n                                  beginAtZero: true,\r\n                                  max: maxValue, // Valor máximo dinâmico\r\n                                },\r\n                                y: {\r\n                                  barPercentage: 0.8, // Ajusta a largura das barras\r\n                                  categoryPercentage: 0.8, // Ajusta o espaçamento entre as categorias\r\n                                },\r\n                              },\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n\r\n          {/* Paginação */}\r\n          <ReactPaginate\r\n            previousLabel={'Anterior'}\r\n            nextLabel={'Próximo'}\r\n            breakLabel={'...'}\r\n            pageCount={pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={handlePageClick}\r\n            containerClassName={'pagination'}\r\n            activeClassName={'active'}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}