{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Coloque o link para o CSV da sua planilha\n    const url = \"https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/export?format=csv&id=1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0\";\n    axios.get(url).then(response => {\n      // O Axios irá retornar os dados como uma string CSV, você pode processá-los aqui\n      console.log(response.data); // Log para você ver o que está vindo\n      // Aqui você pode fazer um parsing do CSV, por exemplo com uma biblioteca como 'papaparse'\n      setData(parseCSV(response.data)); // Uma função que processa o CSV para objetos JavaScript\n    }).catch(error => {\n      console.error(\"Error fetching data\", error);\n      setError(error);\n    });\n  }, []);\n\n  // Função para converter o CSV em objetos (usando a biblioteca Papaparse)\n  const parseCSV = csvText => {\n    // Usando a biblioteca Papaparse (instale com npm install papaparse)\n    const Papa = require('papaparse');\n    const result = Papa.parse(csvText, {\n      header: true,\n      skipEmptyLines: true\n    });\n    return result.data;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualizador de Produ\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Coluna 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Coluna 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"Nome da Coluna 1\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"Nome da Coluna 2\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nD7edIDRwNLC+/bSdKREAvtAsyY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","data","setData","error","setError","url","get","then","response","console","log","parseCSV","catch","csvText","Papa","require","result","parse","header","skipEmptyLines","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","row","index","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Coloque o link para o CSV da sua planilha\r\n    const url = \"https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/export?format=csv&id=1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0\";\r\n\r\n    axios.get(url)\r\n      .then(response => {\r\n        // O Axios irá retornar os dados como uma string CSV, você pode processá-los aqui\r\n        console.log(response.data);  // Log para você ver o que está vindo\r\n        // Aqui você pode fazer um parsing do CSV, por exemplo com uma biblioteca como 'papaparse'\r\n        setData(parseCSV(response.data));  // Uma função que processa o CSV para objetos JavaScript\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching data\", error);\r\n        setError(error);\r\n      });\r\n  }, []);\r\n\r\n  // Função para converter o CSV em objetos (usando a biblioteca Papaparse)\r\n  const parseCSV = (csvText) => {\r\n    // Usando a biblioteca Papaparse (instale com npm install papaparse)\r\n    const Papa = require('papaparse');\r\n    const result = Papa.parse(csvText, { header: true, skipEmptyLines: true });\r\n    return result.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Visualizador de Produção</h1>\r\n      {error && <p>Error: {error.message}</p>}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {/* Aqui você pode gerar dinamicamente as colunas */}\r\n            <th>Coluna 1</th>\r\n            <th>Coluna 2</th>\r\n            {/* Ajuste as colunas conforme o seu CSV */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              {/* Aqui você pode acessar os dados das colunas do CSV */}\r\n              <td>{row[\"Nome da Coluna 1\"]}</td>\r\n              <td>{row[\"Nome da Coluna 2\"]}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}