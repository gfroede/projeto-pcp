{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [previsaoData, setPrevisaoData] = useState([]);\n  const [entregaData, setEntregaData] = useState([]);\n  const [combinedData, setCombinedData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filterPeriod, setFilterPeriod] = useState(''); // novo estado para armazenar o filtro de período\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  // Função para converter a data no formato DD/MM/YYYY para o formato YYYY-MM-DD\n  const convertDate = dateString => {\n    const [day, month, year] = dateString.split('/');\n    return new Date(`${year}-${month}-${day}`);\n  };\n\n  // Função para calcular a semana do mês\n  const getWeekOfMonth = date => {\n    if (isNaN(date)) {\n      return 0;\n    }\n    const startOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n    const dayOfMonth = date.getDate();\n    return Math.ceil(dayOfMonth / 7);\n  };\n\n  // Função para retornar o nome da semana do mês\n  const getWeekName = weekNumber => {\n    const weeks = ['1ª Semana', '2ª Semana', '3ª Semana', '4ª Semana'];\n    return weeks[weekNumber - 1] || 'Semana Indefinida';\n  };\n\n  // Função para buscar os dados da aba Previsao\n  const fetchPrevisaoData = () => {\n    const previsaoUrl = 'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao';\n    axios.get(previsaoUrl).then(response => {\n      Papa.parse(response.data, {\n        complete: result => {\n          setPrevisaoData(result.data);\n        },\n        header: true\n      });\n    }).catch(error => {\n      console.error(\"Erro ao buscar dados da aba Previsão:\", error);\n      setError(\"Erro ao carregar os dados da aba Previsão.\");\n    });\n  };\n\n  // Função para buscar os dados da aba Entrega\n  const fetchEntregaData = () => {\n    const entregaUrl = 'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega';\n    axios.get(entregaUrl).then(response => {\n      Papa.parse(response.data, {\n        complete: result => {\n          setEntregaData(result.data);\n        },\n        header: true\n      });\n    }).catch(error => {\n      console.error(\"Erro ao buscar dados da aba Entrega:\", error);\n      setError(\"Erro ao carregar os dados da aba Entrega.\");\n    });\n  };\n\n  // Combinar os dados com base no Código do Produto e calcular a quantidade faltante e semana da previsão\n  useEffect(() => {\n    if (previsaoData.length > 0 && entregaData.length > 0) {\n      const combined = previsaoData.map(previsaoItem => {\n        const entregaItem = entregaData.find(item => item['Codigo'] === previsaoItem['Codigo']);\n        const quantidadePrevista = parseFloat(previsaoItem['Quantidade Prevista']) || 0;\n        const quantidadeEntregue = parseFloat(entregaItem ? entregaItem['Quantidade Entregue'] : 0) || 0;\n        const quantidadeFaltante = quantidadePrevista - quantidadeEntregue;\n        const previsaoDate = convertDate(previsaoItem['Data de Previsão de Entrega']);\n        const semanaPrevisao = isNaN(previsaoDate) ? 'Semana Indefinida' : getWeekName(getWeekOfMonth(previsaoDate));\n        return {\n          ...previsaoItem,\n          QuantidadeEntregue: entregaItem ? entregaItem['Quantidade Entregue'] : 'N/A',\n          DataEntregaReal: entregaItem ? entregaItem['Data de Entrega (Real)'] : 'N/A',\n          DataPrevisao: previsaoItem['Data de Previsão de Entrega'],\n          QuantidadeFaltante: quantidadeFaltante,\n          SemanaPrevisao: semanaPrevisao\n        };\n      });\n      setCombinedData(combined);\n      setLoading(false);\n    }\n  }, [previsaoData, entregaData]);\n\n  // Carregar dados inicialmente\n  useEffect(() => {\n    fetchPrevisaoData();\n    fetchEntregaData();\n  }, []);\n\n  // Função para aplicar a cor com base na quantidade faltante\n  const getColorForQuantity = quantidadeFaltante => {\n    if (quantidadeFaltante > 0) {\n      const red = Math.min(255, quantidadeFaltante * 20); // Quanto maior, mais vermelho\n      return `rgb(${red}, 0, 0)`; // Cor do vermelho\n    } else if (quantidadeFaltante === 0) {\n      return 'rgb(0, 128, 0)'; // Verde\n    } else {\n      const yellow = Math.max(0, Math.min(255, -quantidadeFaltante * 20)); // Quanto mais próximo de zero, mais amarelo\n      return `rgb(${yellow}, ${yellow}, 0)`; // Cor amarela\n    }\n  };\n\n  // Filtro por período\n  const handlePeriodChange = e => {\n    setFilterPeriod(e.target.value);\n    setLoading(true);\n    let filteredData = [];\n    const today = new Date();\n    if (e.target.value === 'last30') {\n      const last30Days = new Date();\n      last30Days.setDate(today.getDate() - 30);\n      filteredData = combinedData.filter(item => {\n        const date = convertDate(item.DataPrevisao);\n        return date >= last30Days && date <= today;\n      });\n    } else if (e.target.value === 'lastMonth') {\n      const firstDayOfLastMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);\n      const lastDayOfLastMonth = new Date(today.getFullYear(), today.getMonth(), 0);\n      filteredData = combinedData.filter(item => {\n        const date = convertDate(item.DataPrevisao);\n        return date >= firstDayOfLastMonth && date <= lastDayOfLastMonth;\n      });\n    } else if (e.target.value === 'thisMonth') {\n      const firstDayOfThisMonth = new Date(today.getFullYear(), today.getMonth(), 1);\n      const lastDayOfThisMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n      filteredData = combinedData.filter(item => {\n        const date = convertDate(item.DataPrevisao);\n        return date >= firstDayOfThisMonth && date <= lastDayOfThisMonth;\n      });\n    } else if (e.target.value === 'custom') {\n      if (startDate && endDate) {\n        const customStartDate = new Date(startDate);\n        const customEndDate = new Date(endDate);\n        filteredData = combinedData.filter(item => {\n          const date = convertDate(item.DataPrevisao);\n          return date >= customStartDate && date <= customEndDate;\n        });\n      }\n    }\n    setCombinedData(filteredData);\n    setLoading(false);\n  };\n\n  // Custom Date Range\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Dados de Previs\\xE3o e Entrega\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Selecione um Per\\xEDodo:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filterPeriod,\n          onChange: handlePeriodChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"last30\",\n            children: \"\\xDAltimos 30 dias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"lastMonth\",\n            children: \"M\\xEAs Passado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"thisMonth\",\n            children: \"M\\xEAs Atual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"custom\",\n            children: \"Per\\xEDodo Personalizado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), filterPeriod === 'custom' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data In\\xEDcio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: startDate,\n            onChange: handleStartDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data Fim:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: endDate,\n            onChange: handleEndDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"C\\xF3digo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Produto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantidade Prevista\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data de Previs\\xE3o de Entrega\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Semana da Previs\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantidade Entregue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data de Entrega Real\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantidade Faltante\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: combinedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Codigo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Produto\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item['Quantidade Prevista']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.DataPrevisao\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.SemanaPrevisao\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.QuantidadeEntregue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.DataEntregaReal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                color: getColorForQuantity(item.QuantidadeFaltante)\n              },\n              children: item.QuantidadeFaltante\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JEn5bVy21iHOkAv8VU5HzTxXtdI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Papa","jsxDEV","_jsxDEV","App","_s","previsaoData","setPrevisaoData","entregaData","setEntregaData","combinedData","setCombinedData","loading","setLoading","error","setError","filterPeriod","setFilterPeriod","startDate","setStartDate","endDate","setEndDate","convertDate","dateString","day","month","year","split","Date","getWeekOfMonth","date","isNaN","startOfMonth","getFullYear","getMonth","dayOfMonth","getDate","Math","ceil","getWeekName","weekNumber","weeks","fetchPrevisaoData","previsaoUrl","get","then","response","parse","data","complete","result","header","catch","console","fetchEntregaData","entregaUrl","length","combined","map","previsaoItem","entregaItem","find","item","quantidadePrevista","parseFloat","quantidadeEntregue","quantidadeFaltante","previsaoDate","semanaPrevisao","QuantidadeEntregue","DataEntregaReal","DataPrevisao","QuantidadeFaltante","SemanaPrevisao","getColorForQuantity","red","min","yellow","max","handlePeriodChange","e","target","value","filteredData","today","last30Days","setDate","filter","firstDayOfLastMonth","lastDayOfLastMonth","firstDayOfThisMonth","lastDayOfThisMonth","customStartDate","customEndDate","handleStartDateChange","handleEndDateChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","index","Codigo","Produto","style","color","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [previsaoData, setPrevisaoData] = useState([]);\r\n  const [entregaData, setEntregaData] = useState([]);\r\n  const [combinedData, setCombinedData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [filterPeriod, setFilterPeriod] = useState(''); // novo estado para armazenar o filtro de período\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  // Função para converter a data no formato DD/MM/YYYY para o formato YYYY-MM-DD\r\n  const convertDate = (dateString) => {\r\n    const [day, month, year] = dateString.split('/');\r\n    return new Date(`${year}-${month}-${day}`);\r\n  };\r\n\r\n  // Função para calcular a semana do mês\r\n  const getWeekOfMonth = (date) => {\r\n    if (isNaN(date)) {\r\n      return 0;\r\n    }\r\n    const startOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const dayOfMonth = date.getDate();\r\n    return Math.ceil(dayOfMonth / 7);\r\n  };\r\n\r\n  // Função para retornar o nome da semana do mês\r\n  const getWeekName = (weekNumber) => {\r\n    const weeks = [\r\n      '1ª Semana', '2ª Semana', '3ª Semana', '4ª Semana'\r\n    ];\r\n    return weeks[weekNumber - 1] || 'Semana Indefinida';\r\n  };\r\n\r\n  // Função para buscar os dados da aba Previsao\r\n  const fetchPrevisaoData = () => {\r\n    const previsaoUrl = 'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao';\r\n\r\n    axios.get(previsaoUrl)\r\n      .then(response => {\r\n        Papa.parse(response.data, {\r\n          complete: (result) => {\r\n            setPrevisaoData(result.data);\r\n          },\r\n          header: true\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Erro ao buscar dados da aba Previsão:\", error);\r\n        setError(\"Erro ao carregar os dados da aba Previsão.\");\r\n      });\r\n  };\r\n\r\n  // Função para buscar os dados da aba Entrega\r\n  const fetchEntregaData = () => {\r\n    const entregaUrl = 'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega';\r\n\r\n    axios.get(entregaUrl)\r\n      .then(response => {\r\n        Papa.parse(response.data, {\r\n          complete: (result) => {\r\n            setEntregaData(result.data);\r\n          },\r\n          header: true\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Erro ao buscar dados da aba Entrega:\", error);\r\n        setError(\"Erro ao carregar os dados da aba Entrega.\");\r\n      });\r\n  };\r\n\r\n  // Combinar os dados com base no Código do Produto e calcular a quantidade faltante e semana da previsão\r\n  useEffect(() => {\r\n    if (previsaoData.length > 0 && entregaData.length > 0) {\r\n      const combined = previsaoData.map(previsaoItem => {\r\n        const entregaItem = entregaData.find(item => item['Codigo'] === previsaoItem['Codigo']);\r\n        const quantidadePrevista = parseFloat(previsaoItem['Quantidade Prevista']) || 0;\r\n        const quantidadeEntregue = parseFloat(entregaItem ? entregaItem['Quantidade Entregue'] : 0) || 0;\r\n        const quantidadeFaltante = quantidadePrevista - quantidadeEntregue;\r\n\r\n        const previsaoDate = convertDate(previsaoItem['Data de Previsão de Entrega']);\r\n        const semanaPrevisao = isNaN(previsaoDate) ? 'Semana Indefinida' : getWeekName(getWeekOfMonth(previsaoDate));\r\n\r\n        return {\r\n          ...previsaoItem,\r\n          QuantidadeEntregue: entregaItem ? entregaItem['Quantidade Entregue'] : 'N/A',\r\n          DataEntregaReal: entregaItem ? entregaItem['Data de Entrega (Real)'] : 'N/A',\r\n          DataPrevisao: previsaoItem['Data de Previsão de Entrega'],\r\n          QuantidadeFaltante: quantidadeFaltante,\r\n          SemanaPrevisao: semanaPrevisao\r\n        };\r\n      });\r\n      setCombinedData(combined);\r\n      setLoading(false);\r\n    }\r\n  }, [previsaoData, entregaData]);\r\n\r\n  // Carregar dados inicialmente\r\n  useEffect(() => {\r\n    fetchPrevisaoData();\r\n    fetchEntregaData();\r\n  }, []);\r\n\r\n  // Função para aplicar a cor com base na quantidade faltante\r\n  const getColorForQuantity = (quantidadeFaltante) => {\r\n    if (quantidadeFaltante > 0) {\r\n      const red = Math.min(255, quantidadeFaltante * 20); // Quanto maior, mais vermelho\r\n      return `rgb(${red}, 0, 0)`; // Cor do vermelho\r\n    } else if (quantidadeFaltante === 0) {\r\n      return 'rgb(0, 128, 0)'; // Verde\r\n    } else {\r\n      const yellow = Math.max(0, Math.min(255, -quantidadeFaltante * 20)); // Quanto mais próximo de zero, mais amarelo\r\n      return `rgb(${yellow}, ${yellow}, 0)`; // Cor amarela\r\n    }\r\n  };\r\n\r\n  // Filtro por período\r\n  const handlePeriodChange = (e) => {\r\n    setFilterPeriod(e.target.value);\r\n    setLoading(true);\r\n    let filteredData = [];\r\n\r\n    const today = new Date();\r\n\r\n    if (e.target.value === 'last30') {\r\n      const last30Days = new Date();\r\n      last30Days.setDate(today.getDate() - 30);\r\n      filteredData = combinedData.filter(item => {\r\n        const date = convertDate(item.DataPrevisao);\r\n        return date >= last30Days && date <= today;\r\n      });\r\n    } else if (e.target.value === 'lastMonth') {\r\n      const firstDayOfLastMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);\r\n      const lastDayOfLastMonth = new Date(today.getFullYear(), today.getMonth(), 0);\r\n      filteredData = combinedData.filter(item => {\r\n        const date = convertDate(item.DataPrevisao);\r\n        return date >= firstDayOfLastMonth && date <= lastDayOfLastMonth;\r\n      });\r\n    } else if (e.target.value === 'thisMonth') {\r\n      const firstDayOfThisMonth = new Date(today.getFullYear(), today.getMonth(), 1);\r\n      const lastDayOfThisMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\r\n      filteredData = combinedData.filter(item => {\r\n        const date = convertDate(item.DataPrevisao);\r\n        return date >= firstDayOfThisMonth && date <= lastDayOfThisMonth;\r\n      });\r\n    } else if (e.target.value === 'custom') {\r\n      if (startDate && endDate) {\r\n        const customStartDate = new Date(startDate);\r\n        const customEndDate = new Date(endDate);\r\n        filteredData = combinedData.filter(item => {\r\n          const date = convertDate(item.DataPrevisao);\r\n          return date >= customStartDate && date <= customEndDate;\r\n        });\r\n      }\r\n    }\r\n    setCombinedData(filteredData);\r\n    setLoading(false);\r\n  };\r\n\r\n  // Custom Date Range\r\n  const handleStartDateChange = (e) => {\r\n    setStartDate(e.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    setEndDate(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1 className=\"title\">Dados de Previsão e Entrega</h1>\r\n\r\n      <div className=\"filter-container\">\r\n        <label>\r\n          Selecione um Período:\r\n          <select value={filterPeriod} onChange={handlePeriodChange}>\r\n            <option value=\"\">Selecione</option>\r\n            <option value=\"last30\">Últimos 30 dias</option>\r\n            <option value=\"lastMonth\">Mês Passado</option>\r\n            <option value=\"thisMonth\">Mês Atual</option>\r\n            <option value=\"custom\">Período Personalizado</option>\r\n          </select>\r\n        </label>\r\n\r\n        {filterPeriod === 'custom' && (\r\n          <div>\r\n            <label>\r\n              Data Início:\r\n              <input\r\n                type=\"date\"\r\n                value={startDate}\r\n                onChange={handleStartDateChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Data Fim:\r\n              <input\r\n                type=\"date\"\r\n                value={endDate}\r\n                onChange={handleEndDateChange}\r\n              />\r\n            </label>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {loading && <p>Carregando...</p>}\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {!loading && !error && (\r\n        <div className=\"table-container\">\r\n          <table className=\"data-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Código</th>\r\n                <th>Produto</th>\r\n                <th>Quantidade Prevista</th>\r\n                <th>Data de Previsão de Entrega</th>\r\n                <th>Semana da Previsão</th>\r\n                <th>Quantidade Entregue</th>\r\n                <th>Data de Entrega Real</th>\r\n                <th>Quantidade Faltante</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {combinedData.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>{item.Codigo}</td>\r\n                  <td>{item.Produto}</td>\r\n                  <td>{item['Quantidade Prevista']}</td>\r\n                  <td>{item.DataPrevisao}</td>\r\n                  <td>{item.SemanaPrevisao}</td>\r\n                  <td>{item.QuantidadeEntregue}</td>\r\n                  <td>{item.DataEntregaReal}</td>\r\n                  <td style={{ color: getColorForQuantity(item.QuantidadeFaltante) }}>\r\n                    {item.QuantidadeFaltante}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}