{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\Resumo.js\",\n  _s = $RefreshSig$();\n// Resumo.js\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { parseDate } from './App'; // Importe a função parseDate do App.js se necessário\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Resumo = () => {\n  _s();\n  const [dataInicio, setDataInicio] = useState('');\n  const [dataFim, setDataFim] = useState('');\n  const [resumoData, setResumoData] = useState(null);\n  const {\n    previsaoData,\n    entregaData\n  } = useLocation().state; // Dados passados via state\n\n  const calcularResumo = () => {\n    if (!previsaoData || !entregaData) return;\n    const filtrados = previsaoData.map(previsaoItem => {\n      const entregas = entregaData.filter(item => item.Codigo === previsaoItem.Codigo && item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']);\n      const quantidadeEntregue = entregas.reduce((acc, curr) => acc + (curr['Quantidade Entregue'] || 0), 0);\n      const quantidadePrevista = previsaoItem['Quantidade Prevista'] || 0;\n      return {\n        Produto: previsaoItem.Produto,\n        QuantidadePrevista: quantidadePrevista,\n        QuantidadeEntregue: quantidadeEntregue\n      };\n    });\n\n    // Filtrar pelo período\n    const inicio = new Date(dataInicio);\n    const fim = new Date(dataFim);\n    const resumoFiltrado = filtrados.filter(item => {\n      const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\n      return dataPrevisao >= inicio && dataPrevisao <= fim;\n    });\n    const somaPrevista = resumoFiltrado.reduce((acc, curr) => acc + curr.QuantidadePrevista, 0);\n    const somaEntregue = resumoFiltrado.reduce((acc, curr) => acc + curr.QuantidadeEntregue, 0);\n    setResumoData({\n      somaPrevista,\n      somaEntregue\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Resumo de Quantidades\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Data In\\xEDcio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dataInicio,\n          onChange: e => setDataInicio(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Data Fim:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dataFim,\n          onChange: e => setDataFim(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calcularResumo,\n        children: \"Gerar Resumo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), resumoData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Resumo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Soma da Quantidade Prevista: \", resumoData.somaPrevista]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Soma da Quantidade Entregue: \", resumoData.somaEntregue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Resumo, \"k4RIh0SXKSoUYh2AWaHIn1ifsWY=\", false, function () {\n  return [useLocation];\n});\n_c = Resumo;\nexport default Resumo;\nvar _c;\n$RefreshReg$(_c, \"Resumo\");","map":{"version":3,"names":["React","useState","useLocation","parseDate","jsxDEV","_jsxDEV","Resumo","_s","dataInicio","setDataInicio","dataFim","setDataFim","resumoData","setResumoData","previsaoData","entregaData","state","calcularResumo","filtrados","map","previsaoItem","entregas","filter","item","Codigo","quantidadeEntregue","reduce","acc","curr","quantidadePrevista","Produto","QuantidadePrevista","QuantidadeEntregue","inicio","Date","fim","resumoFiltrado","dataPrevisao","somaPrevista","somaEntregue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/Resumo.js"],"sourcesContent":["// Resumo.js\r\nimport React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { parseDate } from './App'; // Importe a função parseDate do App.js se necessário\r\n\r\nconst Resumo = () => {\r\n  const [dataInicio, setDataInicio] = useState('');\r\n  const [dataFim, setDataFim] = useState('');\r\n  const [resumoData, setResumoData] = useState(null);\r\n  const { previsaoData, entregaData } = useLocation().state; // Dados passados via state\r\n\r\n  const calcularResumo = () => {\r\n    if (!previsaoData || !entregaData) return;\r\n\r\n    const filtrados = previsaoData.map((previsaoItem) => {\r\n      const entregas = entregaData.filter(\r\n        (item) =>\r\n          item.Codigo === previsaoItem.Codigo &&\r\n          item['Data Referente (Planejada)'] === previsaoItem['Data de Previsão de Entrega']\r\n      );\r\n\r\n      const quantidadeEntregue = entregas.reduce(\r\n        (acc, curr) => acc + (curr['Quantidade Entregue'] || 0),\r\n        0\r\n      );\r\n\r\n      const quantidadePrevista = previsaoItem['Quantidade Prevista'] || 0;\r\n      return {\r\n        Produto: previsaoItem.Produto,\r\n        QuantidadePrevista: quantidadePrevista,\r\n        QuantidadeEntregue: quantidadeEntregue,\r\n      };\r\n    });\r\n\r\n    // Filtrar pelo período\r\n    const inicio = new Date(dataInicio);\r\n    const fim = new Date(dataFim);\r\n\r\n    const resumoFiltrado = filtrados.filter((item) => {\r\n      const dataPrevisao = parseDate(item['Data de Previsão de Entrega']);\r\n      return dataPrevisao >= inicio && dataPrevisao <= fim;\r\n    });\r\n\r\n    const somaPrevista = resumoFiltrado.reduce((acc, curr) => acc + curr.QuantidadePrevista, 0);\r\n    const somaEntregue = resumoFiltrado.reduce((acc, curr) => acc + curr.QuantidadeEntregue, 0);\r\n\r\n    setResumoData({ somaPrevista, somaEntregue });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Resumo de Quantidades</h1>\r\n\r\n      <div>\r\n        <label>\r\n          Data Início:\r\n          <input\r\n            type=\"date\"\r\n            value={dataInicio}\r\n            onChange={(e) => setDataInicio(e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Data Fim:\r\n          <input\r\n            type=\"date\"\r\n            value={dataFim}\r\n            onChange={(e) => setDataFim(e.target.value)}\r\n          />\r\n        </label>\r\n        <button onClick={calcularResumo}>Gerar Resumo</button>\r\n      </div>\r\n\r\n      {resumoData && (\r\n        <div>\r\n          <h2>Resumo</h2>\r\n          <p>Soma da Quantidade Prevista: {resumoData.somaPrevista}</p>\r\n          <p>Soma da Quantidade Entregue: {resumoData.somaEntregue}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resumo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}