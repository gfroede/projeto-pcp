{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\ProductSummary.js\",\n  _s = $RefreshSig$();\n// ProductSummary.js\nimport React, { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductSummary = ({\n  combinedData\n}) => {\n  _s();\n  // Calcular os totais por produto\n  const productTotals = useMemo(() => {\n    const totals = combinedData.reduce((acc, item) => {\n      const {\n        Produto,\n        QuantidadePrevista,\n        QuantidadeEntregue\n      } = item;\n      if (!acc[Produto]) {\n        acc[Produto] = {\n          QuantidadePrevista: 0,\n          QuantidadeEntregue: 0\n        };\n      }\n      acc[Produto].QuantidadePrevista += QuantidadePrevista || 0;\n      acc[Produto].QuantidadeEntregue += QuantidadeEntregue || 0;\n      return acc;\n    }, {});\n    return Object.keys(totals).map(produto => ({\n      Produto: produto,\n      ...totals[produto]\n    }));\n  }, [combinedData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Resumo por Produto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Produto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantidade Prevista\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantidade Entregue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: productTotals.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.Produto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.QuantidadePrevista\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.QuantidadeEntregue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductSummary, \"7a+qzgSjjpM8Ra5nAZvKH6MP9rk=\");\n_c = ProductSummary;\nexport default ProductSummary;\nvar _c;\n$RefreshReg$(_c, \"ProductSummary\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","ProductSummary","combinedData","_s","productTotals","totals","reduce","acc","item","Produto","QuantidadePrevista","QuantidadeEntregue","Object","keys","map","produto","className","children","fileName","_jsxFileName","lineNumber","columnNumber","row","index","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/ProductSummary.js"],"sourcesContent":["// ProductSummary.js\r\nimport React, { useMemo } from 'react';\r\n\r\nconst ProductSummary = ({ combinedData }) => {\r\n  // Calcular os totais por produto\r\n  const productTotals = useMemo(() => {\r\n    const totals = combinedData.reduce((acc, item) => {\r\n      const { Produto, QuantidadePrevista, QuantidadeEntregue } = item;\r\n\r\n      if (!acc[Produto]) {\r\n        acc[Produto] = { QuantidadePrevista: 0, QuantidadeEntregue: 0 };\r\n      }\r\n\r\n      acc[Produto].QuantidadePrevista += QuantidadePrevista || 0;\r\n      acc[Produto].QuantidadeEntregue += QuantidadeEntregue || 0;\r\n\r\n      return acc;\r\n    }, {});\r\n\r\n    return Object.keys(totals).map((produto) => ({\r\n      Produto: produto,\r\n      ...totals[produto],\r\n    }));\r\n  }, [combinedData]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Resumo por Produto</h1>\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Produto</th>\r\n            <th>Quantidade Prevista</th>\r\n            <th>Quantidade Entregue</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {productTotals.map((row, index) => (\r\n            <tr key={index}>\r\n              <td>{row.Produto}</td>\r\n              <td>{row.QuantidadePrevista}</td>\r\n              <td>{row.QuantidadeEntregue}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductSummary;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC3C;EACA,MAAMC,aAAa,GAAGN,OAAO,CAAC,MAAM;IAClC,MAAMO,MAAM,GAAGH,YAAY,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;MAChD,MAAM;QAAEC,OAAO;QAAEC,kBAAkB;QAAEC;MAAmB,CAAC,GAAGH,IAAI;MAEhE,IAAI,CAACD,GAAG,CAACE,OAAO,CAAC,EAAE;QACjBF,GAAG,CAACE,OAAO,CAAC,GAAG;UAAEC,kBAAkB,EAAE,CAAC;UAAEC,kBAAkB,EAAE;QAAE,CAAC;MACjE;MAEAJ,GAAG,CAACE,OAAO,CAAC,CAACC,kBAAkB,IAAIA,kBAAkB,IAAI,CAAC;MAC1DH,GAAG,CAACE,OAAO,CAAC,CAACE,kBAAkB,IAAIA,kBAAkB,IAAI,CAAC;MAE1D,OAAOJ,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,OAAOK,MAAM,CAACC,IAAI,CAACR,MAAM,CAAC,CAACS,GAAG,CAAEC,OAAO,KAAM;MAC3CN,OAAO,EAAEM,OAAO;MAChB,GAAGV,MAAM,CAACU,OAAO;IACnB,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACb,YAAY,CAAC,CAAC;EAElB,oBACEF,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjB,OAAA;MAAAiB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BrB,OAAA;MAAOgB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC3BjB,OAAA;QAAAiB,QAAA,eACEjB,OAAA;UAAAiB,QAAA,gBACEjB,OAAA;YAAAiB,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBrB,OAAA;YAAAiB,QAAA,EAAI;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5BrB,OAAA;YAAAiB,QAAA,EAAI;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRrB,OAAA;QAAAiB,QAAA,EACGb,aAAa,CAACU,GAAG,CAAC,CAACQ,GAAG,EAAEC,KAAK,kBAC5BvB,OAAA;UAAAiB,QAAA,gBACEjB,OAAA;YAAAiB,QAAA,EAAKK,GAAG,CAACb;UAAO;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBrB,OAAA;YAAAiB,QAAA,EAAKK,GAAG,CAACZ;UAAkB;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjCrB,OAAA;YAAAiB,QAAA,EAAKK,GAAG,CAACX;UAAkB;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAH1BE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAClB,EAAA,CA7CIF,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AA+CpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}