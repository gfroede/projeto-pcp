{"ast":null,"code":"var _jsxFileName = \"C:\\\\controlepcp\\\\visualizador-producao\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [previsaoData, setPrevisaoData] = useState([]);\n  const [entregaData, setEntregaData] = useState([]);\n  const [combinedData, setCombinedData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filterMonth, setFilterMonth] = useState('');\n  const [filterYear, setFilterYear] = useState('');\n\n  // Função para buscar os dados da aba Previsao\n  const fetchPrevisaoData = () => {\n    const previsaoUrl = 'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao';\n    axios.get(previsaoUrl).then(response => {\n      Papa.parse(response.data, {\n        complete: result => {\n          setPrevisaoData(result.data);\n        },\n        header: true,\n        error: error => {\n          console.error(\"Erro ao parsear CSV da aba Previsão:\", error);\n          setError(\"Erro ao processar os dados da aba Previsão.\");\n        }\n      });\n    }).catch(error => {\n      console.error(\"Erro ao buscar dados da aba Previsão:\", error);\n      setError(\"Erro ao carregar os dados da aba Previsão.\");\n    });\n  };\n\n  // Função para buscar os dados da aba Entrega\n  const fetchEntregaData = () => {\n    const entregaUrl = 'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega';\n    axios.get(entregaUrl).then(response => {\n      Papa.parse(response.data, {\n        complete: result => {\n          setEntregaData(result.data);\n        },\n        header: true,\n        error: error => {\n          console.error(\"Erro ao parsear CSV da aba Entrega:\", error);\n          setError(\"Erro ao processar os dados da aba Entrega.\");\n        }\n      });\n    }).catch(error => {\n      console.error(\"Erro ao buscar dados da aba Entrega:\", error);\n      setError(\"Erro ao carregar os dados da aba Entrega.\");\n    });\n  };\n\n  // Combinar os dados com base no código do produto e calcular a quantidade restante\n  useEffect(() => {\n    if (previsaoData.length > 0 && entregaData.length > 0) {\n      const combined = previsaoData.map(previsaoItem => {\n        const entregaItem = entregaData.find(item => item['Codigo'] === previsaoItem['Codigo']);\n        const quantidadeEntregue = entregaItem ? parseFloat(entregaItem['Quantidade Entregue']) : 0;\n        const quantidadePrevista = parseFloat(previsaoItem['Quantidade Prevista']) || 0;\n\n        // Calculando a quantidade restante\n        const quantidadeRestante = quantidadePrevista - quantidadeEntregue;\n        return {\n          ...previsaoItem,\n          QuantidadeEntregue: quantidadeEntregue,\n          DataEntregaReal: entregaItem ? entregaItem['Data de Entrega (Real)'] : 'N/A',\n          QuantidadeRestante: quantidadeRestante\n        };\n      });\n      setCombinedData(combined);\n      setLoading(false);\n    }\n  }, [previsaoData, entregaData]);\n\n  // Carregar dados inicialmente\n  useEffect(() => {\n    fetchPrevisaoData();\n    fetchEntregaData();\n  }, []);\n\n  // Função para aplicar filtro de mês e ano baseado na data de previsão de entrega\n  const filterData = () => {\n    return combinedData.filter(item => {\n      // Verifica se a data de previsão de entrega existe\n      if (!item['Data de Previsão de Entrega']) return false;\n\n      // Converte a data de previsão de entrega para um objeto Date\n      const dataPrevisao = new Date(item['Data de Previsão de Entrega']);\n\n      // Verifica se a data é válida\n      if (isNaN(dataPrevisao.getTime())) return false;\n\n      // Extrai o mês e o ano da data de previsão de entrega\n      const mes = dataPrevisao.getMonth() + 1; // getMonth retorna 0 (janeiro) a 11 (dezembro)\n      const ano = dataPrevisao.getFullYear();\n\n      // Aplica os filtros de mês e ano\n      const mesFiltro = filterMonth ? mes === parseInt(filterMonth) : true;\n      const anoFiltro = filterYear ? ano === parseInt(filterYear) : true;\n      return mesFiltro && anoFiltro;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dados Compilados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Escolha o M\\xEAs: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setFilterMonth(e.target.value),\n          value: filterMonth,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), [...Array(12).keys()].map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i + 1,\n            children: new Date(0, i).toLocaleString('pt-BR', {\n              month: 'long'\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Escolha o Ano: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setFilterYear(e.target.value),\n          value: filterYear,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), [...Array(5).keys()].map(i => {\n            const year = new Date().getFullYear() - i;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: year,\n              children: year\n            }, year, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), filterData().length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"C\\xF3digo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Produto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantidade Prevista\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data de Previs\\xE3o de Entrega\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Semana\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantidade Entregue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data de Entrega Real\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantidade Restante\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filterData().map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row['Codigo']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row['Produto']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row['Quantidade Prevista']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row['Data de Previsão de Entrega']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row['Semana']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row['QuantidadeEntregue']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row['DataEntregaReal']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row['QuantidadeRestante']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nenhum dado encontrado para o filtro selecionado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wpSHULPIlS4ukulCd3PVNg6OiQA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Papa","jsxDEV","_jsxDEV","App","_s","previsaoData","setPrevisaoData","entregaData","setEntregaData","combinedData","setCombinedData","loading","setLoading","error","setError","filterMonth","setFilterMonth","filterYear","setFilterYear","fetchPrevisaoData","previsaoUrl","get","then","response","parse","data","complete","result","header","console","catch","fetchEntregaData","entregaUrl","length","combined","map","previsaoItem","entregaItem","find","item","quantidadeEntregue","parseFloat","quantidadePrevista","quantidadeRestante","QuantidadeEntregue","DataEntregaReal","QuantidadeRestante","filterData","filter","dataPrevisao","Date","isNaN","getTime","mes","getMonth","ano","getFullYear","mesFiltro","parseInt","anoFiltro","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onChange","e","target","value","Array","keys","i","toLocaleString","month","year","className","row","index","_c","$RefreshReg$"],"sources":["C:/controlepcp/visualizador-producao/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [previsaoData, setPrevisaoData] = useState([]);\r\n  const [entregaData, setEntregaData] = useState([]);\r\n  const [combinedData, setCombinedData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [filterMonth, setFilterMonth] = useState('');\r\n  const [filterYear, setFilterYear] = useState('');\r\n\r\n  // Função para buscar os dados da aba Previsao\r\n  const fetchPrevisaoData = () => {\r\n    const previsaoUrl = 'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Previsao';\r\n\r\n    axios.get(previsaoUrl)\r\n      .then(response => {\r\n        Papa.parse(response.data, {\r\n          complete: (result) => {\r\n            setPrevisaoData(result.data);\r\n          },\r\n          header: true,\r\n          error: (error) => {\r\n            console.error(\"Erro ao parsear CSV da aba Previsão:\", error);\r\n            setError(\"Erro ao processar os dados da aba Previsão.\");\r\n          }\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Erro ao buscar dados da aba Previsão:\", error);\r\n        setError(\"Erro ao carregar os dados da aba Previsão.\");\r\n      });\r\n  };\r\n\r\n  // Função para buscar os dados da aba Entrega\r\n  const fetchEntregaData = () => {\r\n    const entregaUrl = 'https://docs.google.com/spreadsheets/d/1dgVHy_i0djzz8ncd1L2zOkzI3qy7YSbT7CvV_BPgXm0/gviz/tq?tqx=out:csv&sheet=Entrega';\r\n\r\n    axios.get(entregaUrl)\r\n      .then(response => {\r\n        Papa.parse(response.data, {\r\n          complete: (result) => {\r\n            setEntregaData(result.data);\r\n          },\r\n          header: true,\r\n          error: (error) => {\r\n            console.error(\"Erro ao parsear CSV da aba Entrega:\", error);\r\n            setError(\"Erro ao processar os dados da aba Entrega.\");\r\n          }\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Erro ao buscar dados da aba Entrega:\", error);\r\n        setError(\"Erro ao carregar os dados da aba Entrega.\");\r\n      });\r\n  };\r\n\r\n  // Combinar os dados com base no código do produto e calcular a quantidade restante\r\n  useEffect(() => {\r\n    if (previsaoData.length > 0 && entregaData.length > 0) {\r\n      const combined = previsaoData.map(previsaoItem => {\r\n        const entregaItem = entregaData.find(item => item['Codigo'] === previsaoItem['Codigo']);\r\n        const quantidadeEntregue = entregaItem ? parseFloat(entregaItem['Quantidade Entregue']) : 0;\r\n        const quantidadePrevista = parseFloat(previsaoItem['Quantidade Prevista']) || 0;\r\n\r\n        // Calculando a quantidade restante\r\n        const quantidadeRestante = quantidadePrevista - quantidadeEntregue;\r\n\r\n        return {\r\n          ...previsaoItem,\r\n          QuantidadeEntregue: quantidadeEntregue,\r\n          DataEntregaReal: entregaItem ? entregaItem['Data de Entrega (Real)'] : 'N/A',\r\n          QuantidadeRestante: quantidadeRestante\r\n        };\r\n      });\r\n      setCombinedData(combined);\r\n      setLoading(false);\r\n    }\r\n  }, [previsaoData, entregaData]);\r\n\r\n  // Carregar dados inicialmente\r\n  useEffect(() => {\r\n    fetchPrevisaoData();\r\n    fetchEntregaData();\r\n  }, []);\r\n\r\n  // Função para aplicar filtro de mês e ano baseado na data de previsão de entrega\r\n  const filterData = () => {\r\n    return combinedData.filter(item => {\r\n      // Verifica se a data de previsão de entrega existe\r\n      if (!item['Data de Previsão de Entrega']) return false;\r\n\r\n      // Converte a data de previsão de entrega para um objeto Date\r\n      const dataPrevisao = new Date(item['Data de Previsão de Entrega']);\r\n\r\n      // Verifica se a data é válida\r\n      if (isNaN(dataPrevisao.getTime())) return false;\r\n\r\n      // Extrai o mês e o ano da data de previsão de entrega\r\n      const mes = dataPrevisao.getMonth() + 1; // getMonth retorna 0 (janeiro) a 11 (dezembro)\r\n      const ano = dataPrevisao.getFullYear();\r\n\r\n      // Aplica os filtros de mês e ano\r\n      const mesFiltro = filterMonth ? mes === parseInt(filterMonth) : true;\r\n      const anoFiltro = filterYear ? ano === parseInt(filterYear) : true;\r\n\r\n      return mesFiltro && anoFiltro;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dados Compilados</h1>\r\n      {loading && <p>Carregando...</p>}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {!loading && !error && (\r\n        <div>\r\n          {/* Filtros de Mês e Ano */}\r\n          <div>\r\n            <label>Escolha o Mês: </label>\r\n            <select onChange={(e) => setFilterMonth(e.target.value)} value={filterMonth}>\r\n              <option value=\"\">Todos</option>\r\n              {[...Array(12).keys()].map(i => (\r\n                <option key={i} value={i + 1}>\r\n                  {new Date(0, i).toLocaleString('pt-BR', { month: 'long' })}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label>Escolha o Ano: </label>\r\n            <select onChange={(e) => setFilterYear(e.target.value)} value={filterYear}>\r\n              <option value=\"\">Todos</option>\r\n              {[...Array(5).keys()].map(i => {\r\n                const year = new Date().getFullYear() - i;\r\n                return (\r\n                  <option key={year} value={year}>\r\n                    {year}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Tabela de dados filtrados */}\r\n          {filterData().length > 0 ? (\r\n            <table className=\"data-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Código</th>\r\n                  <th>Produto</th>\r\n                  <th>Quantidade Prevista</th>\r\n                  <th>Data de Previsão de Entrega</th>\r\n                  <th>Semana</th>\r\n                  <th>Quantidade Entregue</th>\r\n                  <th>Data de Entrega Real</th>\r\n                  <th>Quantidade Restante</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filterData().map((row, index) => (\r\n                  <tr key={index}>\r\n                    <td>{row['Codigo']}</td>\r\n                    <td>{row['Produto']}</td>\r\n                    <td>{row['Quantidade Prevista']}</td>\r\n                    <td>{row['Data de Previsão de Entrega']}</td>\r\n                    <td>{row['Semana']}</td>\r\n                    <td>{row['QuantidadeEntregue']}</td>\r\n                    <td>{row['DataEntregaReal']}</td>\r\n                    <td>{row['QuantidadeRestante']}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>Nenhum dado encontrado para o filtro selecionado.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}